[
    {
        "id": "edfc733139c7f123",
        "type": "tab",
        "label": "Kjør test",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a164a29c09894167",
        "type": "tab",
        "label": "Setup",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "79e43544a55126cd",
        "type": "tab",
        "label": "Måling 1 (Motstand)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7a6a1365ec90b6de",
        "type": "tab",
        "label": "Måling 2 (Fas/GND)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3265f7565c740786",
        "type": "tab",
        "label": "Måling 3 (motstand GND/Skall)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4ec0d6e860859eec",
        "type": "tab",
        "label": "Måling 4 (ACW)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "139bddc3063942e8",
        "type": "tab",
        "label": "Måling 5 IR",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f22f63a4be31664b",
        "type": "tab",
        "label": "Måling 6 GB",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "54b75e119ba9be7c",
        "type": "tab",
        "label": "Multimeter 4W",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "be1c897ac7845326",
        "type": "tab",
        "label": "IR",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8bb246f336d46cee",
        "type": "tab",
        "label": "Ground Bound",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0543e302ca10708e",
        "type": "tab",
        "label": "ACW",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a3312be352519813",
        "type": "tab",
        "label": "Utregning",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4711e11d3b408952",
        "type": "tab",
        "label": "Visning",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e4e311bdd42753f7",
        "type": "tab",
        "label": "Oppslag",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "558841a4149c4571",
        "type": "tab",
        "label": "Kjøring av test dummyer",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c2169ec33aade897",
        "type": "tab",
        "label": "Test raport",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fdae02c7df9f4393",
        "type": "tab",
        "label": "PFC200",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1c24c4425f929f2e",
        "type": "tab",
        "label": "Standard komandoer",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4151ae3474ffa6ae",
        "type": "tab",
        "label": "Laser merking ",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "03e38477b306950b",
        "type": "group",
        "z": "1c24c4425f929f2e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3cf17b02182e51df",
            "a77d2cf0a53c8b1b",
            "6f3b7f5e873af46e",
            "87bb43913c2d41d4",
            "7e02a1419764d403",
            "4a5aa7d0b67d7cae"
        ],
        "x": 34,
        "y": 2139,
        "w": 832,
        "h": 202
    },
    {
        "id": "448f433ee797fb12",
        "type": "group",
        "z": "a164a29c09894167",
        "name": "",
        "style": {
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "155f7235381515cc",
            "29b993bf6b667c3c",
            "db2826e9982ace62",
            "8d471cb18ae871a1",
            "d3279de9a2b462e5",
            "4f8ea2a2eaeb5239",
            "d700e658a943757f"
        ],
        "x": 204,
        "y": 899,
        "w": 1102,
        "h": 222
    },
    {
        "id": "a80a0b19ba428a19",
        "type": "group",
        "z": "1c24c4425f929f2e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "dc84de09839d2fbd",
            "02f5a57889cde84d",
            "c3c90fc8d0ad5a1f",
            "9c4ef3643ce4a528",
            "57edb6fe16471e9a",
            "751acec3b029e26e"
        ],
        "x": 114,
        "y": 759,
        "w": 672,
        "h": 242
    },
    {
        "id": "ddf0d19c856784eb",
        "type": "group",
        "z": "1c24c4425f929f2e",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f240e18016756b3f",
            "9a740ba699b632e9",
            "0a3ad2fced178e32",
            "a7b75fbfa4a656e7",
            "b5ef13660d06a0c8",
            "54f5942823b8cee5",
            "3e975b8f59402bbf",
            "24a3d0a66d47c23d",
            "6ae7f474f3538b3c",
            "5a0cc204ceadad17",
            "9333403e166abb72",
            "c0419979d6043ae6",
            "dea1d67568f4dc71",
            "1dac8294f8c6d47a",
            "c704453922cb3cf0"
        ],
        "x": 1614,
        "y": 659,
        "w": 1202,
        "h": 442
    },
    {
        "id": "459111a7eb7f7b2e",
        "type": "group",
        "z": "a164a29c09894167",
        "name": "",
        "style": {
            "fill": "#bfc7d7",
            "label": true
        },
        "nodes": [
            "f6d81d12b2f3941a",
            "989c8683ce02ad31"
        ],
        "x": 204,
        "y": 419,
        "w": 1102,
        "h": 82
    },
    {
        "id": "73bef4b24dc05b7e",
        "type": "group",
        "z": "a164a29c09894167",
        "name": "",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "4d5ae259a222f84b",
            "ff64f9cf976422cc",
            "6c8d82fda0453b6c",
            "dd859e0c8e0f64cf",
            "63b6e3b8a4542648",
            "d630090a4b59bead",
            "dd64d87fa930f616"
        ],
        "x": 204,
        "y": 1139,
        "w": 1102,
        "h": 242
    },
    {
        "id": "1e35df3d233f470b",
        "type": "group",
        "z": "a164a29c09894167",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "b13f09a4d7b34138",
            "41f8ef400b4514c6",
            "78828f4a471394ef",
            "1b8230d5b8ec3a6f",
            "c46a498e6d5b9dd8",
            "94b72455af2360f7",
            "1c6b1c8686a7fe8c",
            "b50839a346fd1f66"
        ],
        "x": 204,
        "y": 659,
        "w": 1102,
        "h": 222
    },
    {
        "id": "7fdd724fb2c6d5e7",
        "type": "group",
        "z": "a164a29c09894167",
        "name": "",
        "style": {
            "fill": "#ffbfbf",
            "label": true
        },
        "nodes": [
            "f76b6ff9166da2c3",
            "feedf6288c36d447",
            "b71bd6ecb6df73d5"
        ],
        "x": 204,
        "y": 519,
        "w": 1102,
        "h": 122
    },
    {
        "id": "fdb5e2deebdb1ce9",
        "type": "group",
        "z": "54b75e119ba9be7c",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "2d8b6caaf1d377de",
            "564b6d90eb9e8bc7",
            "7520bed71846b68a",
            "5a0a44fb42b01098",
            "1a1dd763eaf7e7fe",
            "dc13ef794d6949f2",
            "3bedd2a879cb6cd8",
            "c404243d064afbd1",
            "717abec631cea7b9",
            "b1c1fdb1283f6c86",
            "9071fc1cecdde6b6"
        ],
        "x": 134,
        "y": 59,
        "w": 1252,
        "h": 302
    },
    {
        "id": "cfd112f98cdfcb1e",
        "type": "group",
        "z": "54b75e119ba9be7c",
        "name": "",
        "style": {
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "ad5c8ac90358e85a",
            "41f7264902fe5174",
            "92f543bbf30b2830",
            "930e49c5ead1d2af",
            "be5355b62d86d28f",
            "04071cc85e38a233",
            "a36fb7ee6c3803e8",
            "6f1d6cc41843c54a",
            "c8c79540faa280f6"
        ],
        "x": 214,
        "y": 379,
        "w": 792,
        "h": 282
    },
    {
        "id": "7987c16faceac8eb",
        "type": "group",
        "z": "54b75e119ba9be7c",
        "name": "",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "ddd4596656ab1f44",
            "f7e6cd6e548a336d",
            "b5c0f09090a1aac0",
            "4fe83af50843c195",
            "74b3160efcf194e5",
            "8ae4c8dac4526557",
            "556324975731b319",
            "3fa1c7acb83ec764",
            "3b44d1f51b651f4a"
        ],
        "x": 214,
        "y": 679,
        "w": 792,
        "h": 282
    },
    {
        "id": "3149a1641fb9bcee",
        "type": "group",
        "z": "4711e11d3b408952",
        "name": "",
        "style": {
            "fill": "#dbcbe7",
            "label": true
        },
        "nodes": [
            "6f0789f5b971cd29",
            "34f2a3aa8a152c47",
            "b931cc2c4280566a",
            "2d13a12685cbb78a",
            "23f85787f5d483df",
            "dc17eec2a604396c",
            "ae9bf0dae041a0ae",
            "bd47557dbb096512",
            "0e26cf84710d936b",
            "78eba4bfc7b5be6e",
            "3654d20252fdd265",
            "b2eb1b74f70ba3e6"
        ],
        "x": 324,
        "y": 2879,
        "w": 352,
        "h": 282
    },
    {
        "id": "83e6939378fe41f7",
        "type": "group",
        "z": "a3312be352519813",
        "name": "",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "b462ef762fee66be",
            "a1cdec8bf64e5e76",
            "cce06906fca86a79",
            "95cb1693aa6d71de",
            "b0d24c3b31297dbe",
            "638896ec52f0faf9",
            "346db99b9738b485",
            "86833fb33f33e109"
        ],
        "x": 64,
        "y": 319,
        "w": 762,
        "h": 262
    },
    {
        "id": "ced0e750c875007a",
        "type": "group",
        "z": "a3312be352519813",
        "name": "",
        "style": {
            "fill": "#ffbfbf",
            "label": true
        },
        "nodes": [
            "ce299d13039572b1",
            "d1f8b6e5aab9a260",
            "12c902a7b0c8391d",
            "198fc9e2305f23aa",
            "201221e967989b32",
            "67983006891d4f4f",
            "47518008169f20ec",
            "7103bf503d9fa40c",
            "d932c7fa939d28f7",
            "bd9b4a459f817247",
            "9f8ef25da523c59c",
            "49bfaa6cb8e5805b",
            "ad43c7eb9bafb1b0",
            "935dcadeb439a3c2"
        ],
        "x": 64,
        "y": 599,
        "w": 762,
        "h": 402
    },
    {
        "id": "d0e5080b599e0a39",
        "type": "group",
        "z": "a3312be352519813",
        "name": "",
        "style": {
            "fill": "#ffdf7f",
            "label": true
        },
        "nodes": [
            "23af95cc68cb0e11",
            "39fbcc2e1c04a178",
            "b1d0ce95c401fc4a",
            "4248240b7e483aa1",
            "c745c4fe2938b106",
            "6977ba45e4ebc8ad",
            "a9b27d120efded49",
            "19939690ab169fa6",
            "0fa48ab128d0d122",
            "fc69a4147a4280f6"
        ],
        "x": 854,
        "y": 319,
        "w": 932,
        "h": 262
    },
    {
        "id": "a15ef975fcb81451",
        "type": "group",
        "z": "a3312be352519813",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "e7c1b2d079ccae32",
            "73a6c4103d4ad727",
            "906add3b7599a294",
            "36a4fe96d06c3e2d",
            "93a5655aaa0febb0",
            "c03fa05bf912f98a",
            "38db026eee5a5a62",
            "974d8c81aaf73aad",
            "600e391087ac14b1"
        ],
        "x": 64,
        "y": 79,
        "w": 1722,
        "h": 222
    },
    {
        "id": "9695cfc09f2c805b",
        "type": "group",
        "z": "a3312be352519813",
        "name": "",
        "style": {
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "592a50d937add3e5",
            "2d8c455f7e06867a",
            "e5b51d788ef20207",
            "2e182f018666eee7",
            "bd15e31e5fa207f2"
        ],
        "x": 854,
        "y": 599,
        "w": 932,
        "h": 182
    },
    {
        "id": "2202219e2937f891",
        "type": "group",
        "z": "a3312be352519813",
        "name": "",
        "style": {
            "fill": "#bfc7d7",
            "label": true
        },
        "nodes": [
            "0661ea6652f7b633",
            "e4a3397c5dd0b11a",
            "440ba3140e0e1bdc",
            "7082e1ae5fc393fe",
            "69ed789687b3c868"
        ],
        "x": 854,
        "y": 799,
        "w": 932,
        "h": 182
    },
    {
        "id": "7acbc4b028bd3996",
        "type": "group",
        "z": "e4e311bdd42753f7",
        "name": "",
        "style": {
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "038d6b271c6695d4",
            "ce6ef18d6a298e12",
            "51587308833d5c74",
            "5825e14c71a3e930",
            "34de3cabcb2921d4",
            "f48aa8431e08da6c",
            "8cf3a462abc63802",
            "f01a15408541501c",
            "b6f8f10ac75d53fb",
            "2a46e683e7b3b80f",
            "bd7a22da3b98031a",
            "9c7806eedc376a26",
            "1ec9814e31693484",
            "5e7e579cbfa37c61",
            "1c86312da44b477b",
            "fb92fe5e01d73c29",
            "039769ce98c79966",
            "b680def66a816fff",
            "bd44eb56e4d6f72b",
            "2473a408459a8c92",
            "21351487dcb5902c",
            "6acd9d6e3935e43d",
            "f890f723d067be97",
            "d2bf132579a17afb",
            "e3307533596a0944"
        ],
        "x": 54,
        "y": 39,
        "w": 2072,
        "h": 662
    },
    {
        "id": "9aa11dd729020c1c",
        "type": "group",
        "z": "e4e311bdd42753f7",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "8f0e422d740c7b1f",
            "59a4d167530a361f",
            "682a1ce7f3568d3c",
            "c06bd2d5ba672540",
            "c1afdd1cb1dc3eb8",
            "8b8dc480b470da49",
            "b44214e4f4edd564",
            "d77c80dacf4a87f4",
            "bbddc0993c20a149",
            "d5f436454daeaae2",
            "a1388b27105ff53b"
        ],
        "x": 54,
        "y": 719,
        "w": 2072,
        "h": 142
    },
    {
        "id": "485d94f8d1c58f47",
        "type": "group",
        "z": "edfc733139c7f123",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "ee99426968faa922",
            "4e9d36299f901eea",
            "fd3f8987fdce1616",
            "8aa6cab909a58c31",
            "fa949f8f367c8c4c",
            "1bcc9a895aeb7b9e",
            "6e1a8c35d13e048d",
            "082c4fe3bcd3236a",
            "c3791c5b873cfcff",
            "0c8de6727a29c8dc",
            "7f23a77b9e99df22"
        ],
        "x": 134,
        "y": 59,
        "w": 712,
        "h": 322
    },
    {
        "id": "21183b958e99d20b",
        "type": "group",
        "z": "79e43544a55126cd",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "d07287d56ff88859",
            "e110df1916ece408",
            "62c209e78eea1acd",
            "741fe6190c24ac9c",
            "bd31c5a0d65dcedf",
            "615574d9be964553",
            "4b37121262a79263",
            "75dc80334c3eba72",
            "d7dc61871629c407",
            "e8aa7b46e26966e5"
        ],
        "x": 84,
        "y": 59,
        "w": 902,
        "h": 202
    },
    {
        "id": "c64a54a778a149a8",
        "type": "group",
        "z": "79e43544a55126cd",
        "name": "",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "b434a8644c2ca06e",
            "dd22a5e18c138d00",
            "702aea51c22878b6",
            "47322b283cce9a82",
            "75a1ea134a8627d6",
            "2a7a91ba0a0f1fbd",
            "21faaece687e0264",
            "fd6c124060d609a1"
        ],
        "x": 64,
        "y": 279,
        "w": 842,
        "h": 162
    },
    {
        "id": "81bf6f92d77fe47e",
        "type": "group",
        "z": "7a6a1365ec90b6de",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "c2656c4a27472995",
            "8956ff124892fd81",
            "70ab6f895cb94f13",
            "e0b5a72e06f22a63",
            "31a40f345fd07fbd",
            "c9d202c3bf9f6c26",
            "9ebd2ec7b71f6aec",
            "377534ed4fae9964"
        ],
        "x": 54,
        "y": 39,
        "w": 1312,
        "h": 202
    },
    {
        "id": "2f46185639a3a572",
        "type": "group",
        "z": "7a6a1365ec90b6de",
        "name": "",
        "style": {
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "e4e6b130a939260d",
            "bb4aa247d05ef589",
            "b93d5544c0216d0b",
            "c8b0e7856a993104",
            "6dc95696f7307d8a",
            "cfa0bf9feeb8fed6",
            "e04b8a30c66468c5",
            "aa1215db9b85250f",
            "dbc3c136a5d50e11",
            "8c827051b1fa10bb",
            "9385580688e4567f",
            "964b05880196c92b"
        ],
        "x": 54,
        "y": 259,
        "w": 1322,
        "h": 182
    },
    {
        "id": "b9449972491f9d4a",
        "type": "group",
        "z": "3265f7565c740786",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "47b4a2c2e0bb1c0c",
            "5bf15c80339d6107",
            "585a107242c91590",
            "7c8a27f82b5ec0ac",
            "ae320ec5cd321a02",
            "eb125b681c34abab"
        ],
        "x": 274,
        "y": 79,
        "w": 782,
        "h": 142
    },
    {
        "id": "e3f132158f728bda",
        "type": "group",
        "z": "3265f7565c740786",
        "name": "",
        "style": {
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "d62af9fdc151ecd1",
            "ce34395a5a3ef244",
            "a277d27a849ca3c4",
            "0fc75f54cd93fc1f",
            "608e461650376ae6",
            "e8386fdd4013733c",
            "e47fbf503f750a77",
            "9a6b61b8d3cc034a"
        ],
        "x": 274,
        "y": 239,
        "w": 782,
        "h": 262
    },
    {
        "id": "d1f626e7e5f9bf2d",
        "type": "group",
        "z": "4ec0d6e860859eec",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "099d1f686bded5d0",
            "fdfd9916d5e5a23c",
            "1c18e935ddc826e6",
            "0bbea7debdea2ef3",
            "b484233fdef2630d",
            "2fc05a0aee28a495"
        ],
        "x": 204,
        "y": 59,
        "w": 932,
        "h": 142
    },
    {
        "id": "abf006b215ab11f3",
        "type": "group",
        "z": "4ec0d6e860859eec",
        "name": "",
        "style": {
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "79c50bdaa56d7e27",
            "7638f0bf3688a366",
            "b9ced3500b2dc751",
            "83b63852e6a4995a",
            "07f6e65bee5f48cd",
            "7bd4b2948a7f898e",
            "64c3a343624efa4f",
            "a54dadd01e2fb731",
            "1175635223d32f0b",
            "8405b5bf5db75323"
        ],
        "x": 204,
        "y": 239,
        "w": 942,
        "h": 202
    },
    {
        "id": "e46d3a13a35e7b9b",
        "type": "group",
        "z": "0543e302ca10708e",
        "name": "",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "855798caca85c7f0",
            "9f8e6f557429ad66",
            "54ebb3e3151ed289",
            "e5552059f011da22",
            "b387f47de5f33114",
            "39589b3267376980",
            "aaaef4d4e1a45923"
        ],
        "x": 244,
        "y": 1039,
        "w": 892,
        "h": 182
    },
    {
        "id": "93e76f916187144f",
        "type": "group",
        "z": "0543e302ca10708e",
        "name": "",
        "style": {
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "a51397dd546c9386",
            "327c882b17b04efd",
            "0d41bf30347234ea",
            "95f181c152e92318",
            "873233c2a1d5397e",
            "bd80abd43400e065",
            "1ea15b843f42c7ef",
            "af7d2f5e80834c63",
            "7cd5ce1db77a5fae",
            "9a20e276a37962e6",
            "b31d6d09fdc4932e",
            "7e31ab804749766f",
            "4a58c8c3a1a2af6b",
            "3666c8b2ab21afd4",
            "16f7a684a579e9f1",
            "81a8c338c59c29bd",
            "5ddd5a9b6a42ec94",
            "0e05220f4646a38a",
            "cc972f88a225448a",
            "fa26b97579f173e9",
            "8afbf2fd8c6efa4c",
            "5c600e8116a540cb",
            "3a20557f0ac65a4a",
            "aef23335f3e40154",
            "10c929b8ac4468b1",
            "1aa0a07e23c2288e",
            "17c123b97d1bbf8f",
            "7b2e65df2d8360dd",
            "8a3b4a7e69818670",
            "9bf0233b8ddc50a5"
        ],
        "x": 114,
        "y": 39,
        "w": 1132,
        "h": 842
    },
    {
        "id": "c1088ae201a01869",
        "type": "group",
        "z": "fdae02c7df9f4393",
        "name": "",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "da15d4d7176e64dd",
            "9e5035603a28f389",
            "236519827f9cd3ec",
            "701745914e3be9ef",
            "b92911ccbf7004fd",
            "7d1df9239c8581cb",
            "fead085b427bd950",
            "3211f67eb0d22769",
            "dc2d2543e6dc326d",
            "cb736ee59809468e",
            "81366cdd468be91a",
            "0dc18f9e273f1a72",
            "0f81745673c2f368",
            "31bd32b9fcfdca40",
            "22076f40b4de30fc",
            "18f256cc95d3391c"
        ],
        "x": 134,
        "y": 659,
        "w": 1552,
        "h": 162
    },
    {
        "id": "bf2049db3d6f34c0",
        "type": "group",
        "z": "fdae02c7df9f4393",
        "name": "",
        "style": {
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "61ac966547b0fb5a",
            "8f97b077a10fc3fb",
            "619a8aaabd249daf",
            "9552379ff0320872",
            "cfdfde613ef9c357",
            "6d1142daef0c3881",
            "2d2881b5ae4df7c3",
            "86a7f7371730dea3",
            "7a3a6d8ac38608df",
            "1b2777fd4acdf1d5",
            "ddd33d925f60b76c",
            "66908cedb41ce161",
            "b2a757104258736c",
            "6954907f6bb0169a",
            "934338213adb5c7c",
            "059a302d1d3663d5",
            "878b988f27e9c840",
            "4e69b73ff7a3fae1",
            "b43ca98921888528",
            "864a68697b6b6664",
            "1a6ddda7f58a4de2",
            "0d8a79c382a737af",
            "8b9db1977eb2d941",
            "ac480a5da179f6fd",
            "4bb9562d2d9e94df",
            "eb6b344d62804eab",
            "77969939f368b32b",
            "97c76806a02a2b7d"
        ],
        "x": 134,
        "y": 139,
        "w": 1552,
        "h": 502
    },
    {
        "id": "d991034f145ea417",
        "type": "group",
        "z": "4711e11d3b408952",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "34623345c7de1c89",
            "f3d006395cea7a14",
            "ca75e031dbaa287d",
            "6b8094d1e0027cc5",
            "0ed354236ecc6576",
            "1a9357b237e5cd02",
            "52b4f03c6c608f28",
            "872a2ab50a0ff501"
        ],
        "x": 1534,
        "y": 2359,
        "w": 852,
        "h": 282
    },
    {
        "id": "4158de8946bbefc6",
        "type": "group",
        "z": "e4e311bdd42753f7",
        "name": "",
        "style": {
            "fill": "#addb7b",
            "label": true
        },
        "nodes": [
            "3201871ae949489a",
            "65f5fd97d58f285e",
            "e02dd6c4d4f61180",
            "790068d7afcf38ab",
            "f969e910ca1e3466",
            "a672a1cf024ce4f9",
            "7cd79890a3df009a",
            "bf22d2df7ad986d6",
            "c31c9512b837feb5",
            "90bfb7d2562e71f4",
            "71d678dc0e38cdae",
            "5ae32b6f3cb3bc18",
            "974ce9e2f2beb8c8",
            "42c87ac7427cf776",
            "28227cf7a3ed80aa",
            "946645fcf81a4b97",
            "02da79b27545b1cb",
            "22e70b7194d7886f",
            "2ab17e613ea82022",
            "b535c44e6275f2fc",
            "68da8e6d6b930b4d",
            "53e99dfba820c8b1",
            "c97b24f252a0e5b9",
            "d327e31a19cf9e12",
            "246b630a8de64b06",
            "70aebba0ccf07097",
            "ca42bd0e1a27aa5f",
            "f8c2974b55d7c9d6",
            "7bd233cce4697ac1",
            "e4853de8cdd2e5f9",
            "5a1add7e4fb3b493",
            "302e2946691bd59e"
        ],
        "x": 54,
        "y": 879,
        "w": 2072,
        "h": 442
    },
    {
        "id": "d3a110a585835dda",
        "type": "group",
        "z": "c2169ec33aade897",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "b1c4c07488bdac61",
            "cfb050730fdc5465"
        ],
        "x": 214,
        "y": 1039,
        "w": 612,
        "h": 82
    },
    {
        "id": "882257ad64bc98e9",
        "type": "group",
        "z": "c2169ec33aade897",
        "name": "",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "9e8b289eba044393",
            "fbb9356c64b2093a",
            "b510de6d75820729",
            "d5c34d5e507eee52",
            "0f072ee84a5b6de6",
            "a1ecaaed3c29108e"
        ],
        "x": 214,
        "y": 1159,
        "w": 612,
        "h": 122
    },
    {
        "id": "8b2ee61fcd9d2592",
        "type": "group",
        "z": "c2169ec33aade897",
        "name": "",
        "style": {
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "a581433753d36c15",
            "1f6525038fe08f56",
            "56609fc98ff26ac8",
            "4f792a826e3ec6b9",
            "f11d338c5c463fdf",
            "dde69e31e611a92c"
        ],
        "x": 214,
        "y": 1299,
        "w": 612,
        "h": 122
    },
    {
        "id": "8df7171d50362e14",
        "type": "group",
        "z": "c2169ec33aade897",
        "name": "",
        "style": {
            "fill": "#bfc7d7",
            "label": true
        },
        "nodes": [
            "ba6d7714acec3d81",
            "f5173f6b219a83b1",
            "301b01843c5ae52a",
            "3bb77f9aeb5411d2",
            "cda6862e465e858d",
            "4d5cc774e72c0d70",
            "464072314b1f51d6",
            "5f584c1dd20b166f"
        ],
        "x": 214,
        "y": 1439,
        "w": 612,
        "h": 162
    },
    {
        "id": "658c21ec64d57551",
        "type": "group",
        "z": "c2169ec33aade897",
        "name": "",
        "style": {
            "fill": "#6f2fa0",
            "label": true
        },
        "nodes": [
            "8ac8d1ee244a984e",
            "9ce74c621350ed81",
            "dbef6519a89ea505",
            "5e96592154c4b462",
            "bb19037782fd5d0c",
            "2e992290283533af"
        ],
        "x": 214,
        "y": 1899,
        "w": 612,
        "h": 122
    },
    {
        "id": "9ec45f809e6da242",
        "type": "group",
        "z": "c2169ec33aade897",
        "name": "",
        "style": {
            "fill": "#bfbfbf",
            "label": true
        },
        "nodes": [
            "bfc840b1ff7b7bbd",
            "eda7853e0e032c83",
            "a1340b2a8c1c809e"
        ],
        "x": 934,
        "y": 1039,
        "w": 612,
        "h": 102
    },
    {
        "id": "37ae195be7088556",
        "type": "group",
        "z": "c2169ec33aade897",
        "name": "",
        "style": {
            "fill": "#ffbfbf",
            "label": true
        },
        "nodes": [
            "00ed3ab4be1810bc",
            "ac1a33886e14b216"
        ],
        "x": 934,
        "y": 1179,
        "w": 612,
        "h": 82
    },
    {
        "id": "1fc186dc8ccdef86",
        "type": "group",
        "z": "c2169ec33aade897",
        "name": "",
        "style": {
            "fill": "#c8e7a7",
            "label": true
        },
        "nodes": [
            "b46deee512ffd9f5",
            "e5108c4ed0e7cbfc",
            "4498fca0d63f385f",
            "5c7a8434ef52033e",
            "7c118c6c685b69f7",
            "0d0467fbf07769d2",
            "3ea8cb435bc802c9",
            "47cc574f421ca93f",
            "fec4ed5c5984fdc6",
            "3b6b7941ad9adf6f",
            "808ddf004871a525",
            "953e3325dac5ca66",
            "72dc149ee0318259",
            "4f0145bbbf55f5b5",
            "f3fc465133c75528",
            "b07dbdecb0ac4436",
            "70ad3dccc073a9d3",
            "65aba761444a8649",
            "47c27b1926288bf1",
            "58619685797f4e53",
            "e10c27298689690a",
            "7e8cd935e8f06662",
            "904a7411a59c5ada",
            "1030f34f550bcb1a",
            "1ed8c1b5f01ee476",
            "3abbd64a9f71ff65",
            "7c05fe5dab08155f",
            "9851e5b41aabac7b",
            "5c765a5333bf6e35"
        ],
        "x": 264,
        "y": 99,
        "w": 1442,
        "h": 602
    },
    {
        "id": "1bb75c4064d72f44",
        "type": "group",
        "z": "c2169ec33aade897",
        "name": "",
        "style": {
            "fill": "#addb7b",
            "label": true
        },
        "nodes": [
            "0c40558caedffebc",
            "7f7ab83123fac51a"
        ],
        "x": 934,
        "y": 1299,
        "w": 612,
        "h": 82
    },
    {
        "id": "68714daa9ae240e8",
        "type": "group",
        "z": "139bddc3063942e8",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "dec6597f79ca21cc",
            "ac939dc23e5bdad6",
            "52a28a71be283246",
            "a027a967f3adf856",
            "3af0d659a4a6c302",
            "9bd6ccc9cda37c2e",
            "215aebf35ad83da4"
        ],
        "x": 184,
        "y": 79,
        "w": 1382,
        "h": 162
    },
    {
        "id": "67d91e1bbf0bd4f8",
        "type": "group",
        "z": "139bddc3063942e8",
        "name": "",
        "style": {
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "c7b859704062e4b5",
            "059aa6a5d5853e58",
            "0bf5306902e2a453",
            "b14d45648cb65908",
            "0a92304b39aacdd4",
            "763a91fe8d7c1e80",
            "3867a38dc6f1ec80",
            "a2814a68f8ac7881",
            "d008696e7bb05ec1",
            "2a0fca30a2153bf4",
            "2c173dd93cb6dd6b",
            "96e8379648839f2a",
            "fb806daf4ebcaca5",
            "1033270452506701"
        ],
        "x": 184,
        "y": 259,
        "w": 1392,
        "h": 202
    },
    {
        "id": "5d69eb69667cb342",
        "type": "group",
        "z": "f22f63a4be31664b",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "d03de6476ca68784",
            "046f14ab3dfcf900",
            "f6b048048ec0196e",
            "b3d593538c4fe969",
            "1f33f5c44b740844",
            "512d8b70c617e9db",
            "7a984875a4138efc"
        ],
        "x": 184,
        "y": 19,
        "w": 1022,
        "h": 222
    },
    {
        "id": "122679febfcce024",
        "type": "group",
        "z": "f22f63a4be31664b",
        "name": "",
        "style": {
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "3532456be73a4ee6",
            "9dd24e411738072a",
            "aadc766593712140",
            "82092eb178bf8897",
            "8e505cdda3ce52a7",
            "ee068254a4099a49",
            "f8d65e4770d0d3c4",
            "2f2f4467c5ccc5ac",
            "2a7a1a47d9a49ea8",
            "469258dccb2a456d"
        ],
        "x": 184,
        "y": 299,
        "w": 1022,
        "h": 222
    },
    {
        "id": "a5d86e82215c8574",
        "type": "group",
        "z": "c2169ec33aade897",
        "name": "",
        "style": {
            "fill": "#b797cf",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "8242e0d376f9e854",
            "0fa21ae69cb7998b",
            "6961b73bf8d4752b",
            "4b0b98a977489cfe",
            "43b6502c86079063",
            "79846bc8476dcd33"
        ],
        "x": 214,
        "y": 1619,
        "w": 612,
        "h": 122
    },
    {
        "id": "04a220e6929ff783",
        "type": "group",
        "z": "c2169ec33aade897",
        "name": "",
        "style": {
            "fill": "#9363b7",
            "label": true
        },
        "nodes": [
            "719235fcee402e5b",
            "f1e2a3bdd0c1e7e2",
            "78e92e63a8d997e7",
            "a04c16138f2076f3",
            "d2f9b25118093f3d",
            "d8525e58c8c663aa"
        ],
        "x": 214,
        "y": 1759,
        "w": 612,
        "h": 122
    },
    {
        "id": "ed0fd4cd280b994e",
        "type": "group",
        "z": "a164a29c09894167",
        "name": "",
        "style": {
            "fill": "#ffcf3f",
            "label": true
        },
        "nodes": [
            "998672e064af0926",
            "7614414c84f03eaa",
            "72458ed980ac314b",
            "4d49a66465583972",
            "8c73643b77bd695e",
            "a151ad727e94d19f",
            "36e8de507c2de478",
            "c5eb9b581508078d",
            "195bdd0dbfe7298e",
            "81a647f7740732be",
            "f3113fc0ca0a4a67",
            "b3d15459d7eea671",
            "388fee0c6e0a3957",
            "c68dd64815a6e5e9",
            "070c9775a900d4da",
            "b9f67f93dc14c63d",
            "838e4bd8afe7a17b",
            "0c1e250860cf09ee",
            "ae4a717d7332e1e7",
            "1ebc38573110ae3b"
        ],
        "x": 204,
        "y": 1479,
        "w": 1482,
        "h": 282
    },
    {
        "id": "b1936f390bb06852",
        "type": "group",
        "z": "a3312be352519813",
        "name": "",
        "style": {
            "fill": "#7fb7df",
            "label": true
        },
        "nodes": [
            "2bd18ab2af15cf38",
            "7840a08767b45b8c",
            "28fd4c1538e1783b",
            "7239b5f985e9e561",
            "4d05e3e23bf4bc0c",
            "3b70592399f25232",
            "9965d5b0f5e9291e",
            "6e22a3d20d09c42f",
            "8815e8a8542d534c"
        ],
        "x": 854,
        "y": 999,
        "w": 932,
        "h": 282
    },
    {
        "id": "619a8aaabd249daf",
        "type": "junction",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "x": 920,
        "y": 380,
        "wires": [
            [
                "934338213adb5c7c"
            ]
        ]
    },
    {
        "id": "9ebd2ec7b71f6aec",
        "type": "junction",
        "z": "7a6a1365ec90b6de",
        "g": "81bf6f92d77fe47e",
        "x": 660,
        "y": 180,
        "wires": [
            [
                "70ab6f895cb94f13"
            ]
        ]
    },
    {
        "id": "4b37121262a79263",
        "type": "junction",
        "z": "79e43544a55126cd",
        "g": "21183b958e99d20b",
        "x": 660,
        "y": 200,
        "wires": [
            [
                "62c209e78eea1acd"
            ]
        ]
    },
    {
        "id": "75dc80334c3eba72",
        "type": "junction",
        "z": "79e43544a55126cd",
        "g": "21183b958e99d20b",
        "x": 340,
        "y": 200,
        "wires": [
            [
                "615574d9be964553",
                "d07287d56ff88859",
                "e110df1916ece408"
            ]
        ]
    },
    {
        "id": "377534ed4fae9964",
        "type": "junction",
        "z": "7a6a1365ec90b6de",
        "g": "81bf6f92d77fe47e",
        "x": 280,
        "y": 140,
        "wires": [
            [
                "31a40f345fd07fbd",
                "c9d202c3bf9f6c26",
                "c2656c4a27472995"
            ]
        ]
    },
    {
        "id": "eb125b681c34abab",
        "type": "junction",
        "z": "3265f7565c740786",
        "g": "b9449972491f9d4a",
        "x": 460,
        "y": 180,
        "wires": [
            [
                "47b4a2c2e0bb1c0c",
                "5bf15c80339d6107"
            ]
        ]
    },
    {
        "id": "2fc05a0aee28a495",
        "type": "junction",
        "z": "4ec0d6e860859eec",
        "g": "d1f626e7e5f9bf2d",
        "x": 340,
        "y": 160,
        "wires": [
            [
                "099d1f686bded5d0",
                "fdfd9916d5e5a23c"
            ]
        ]
    },
    {
        "id": "20850889fdb58bb8",
        "type": "junction",
        "z": "4711e11d3b408952",
        "x": 2320,
        "y": 1400,
        "wires": [
            [
                "c7049ce7d7b74946"
            ]
        ]
    },
    {
        "id": "b2a757104258736c",
        "type": "junction",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "x": 260,
        "y": 260,
        "wires": [
            [
                "6954907f6bb0169a"
            ]
        ]
    },
    {
        "id": "934338213adb5c7c",
        "type": "junction",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "x": 1000,
        "y": 380,
        "wires": [
            [
                "61ac966547b0fb5a",
                "4bb9562d2d9e94df"
            ]
        ]
    },
    {
        "id": "864a68697b6b6664",
        "type": "junction",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "x": 980,
        "y": 320,
        "wires": [
            [
                "61ac966547b0fb5a"
            ]
        ]
    },
    {
        "id": "0d8a79c382a737af",
        "type": "junction",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "x": 880,
        "y": 260,
        "wires": [
            [
                "86a7f7371730dea3"
            ]
        ]
    },
    {
        "id": "52e5cad026a2df70",
        "type": "junction",
        "z": "558841a4149c4571",
        "x": 780,
        "y": 600,
        "wires": [
            [
                "9d105001ae634b45"
            ]
        ]
    },
    {
        "id": "ab99d3a9c3216f74",
        "type": "junction",
        "z": "558841a4149c4571",
        "x": 520,
        "y": 280,
        "wires": [
            [
                "d21275b13087a2d9"
            ]
        ]
    },
    {
        "id": "c3791c5b873cfcff",
        "type": "junction",
        "z": "edfc733139c7f123",
        "g": "485d94f8d1c58f47",
        "x": 280,
        "y": 220,
        "wires": [
            [
                "fa949f8f367c8c4c",
                "8aa6cab909a58c31",
                "1bcc9a895aeb7b9e"
            ]
        ]
    },
    {
        "id": "4bb9562d2d9e94df",
        "type": "junction",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "x": 1200,
        "y": 260,
        "wires": [
            [
                "18f256cc95d3391c",
                "7a3a6d8ac38608df"
            ]
        ]
    },
    {
        "id": "3af0d659a4a6c302",
        "type": "junction",
        "z": "139bddc3063942e8",
        "g": "68714daa9ae240e8",
        "x": 460,
        "y": 160,
        "wires": [
            [
                "dec6597f79ca21cc",
                "9bd6ccc9cda37c2e"
            ]
        ]
    },
    {
        "id": "1f33f5c44b740844",
        "type": "junction",
        "z": "f22f63a4be31664b",
        "g": "5d69eb69667cb342",
        "x": 440,
        "y": 140,
        "wires": [
            [
                "d03de6476ca68784",
                "512d8b70c617e9db",
                "7a984875a4138efc"
            ]
        ]
    },
    {
        "id": "f2be366628fd8f9a",
        "type": "junction",
        "z": "be1c897ac7845326",
        "x": 1220,
        "y": 200,
        "wires": [
            [
                "439c1d02c1c93f69"
            ]
        ]
    },
    {
        "id": "c611a655db42e6b4",
        "type": "junction",
        "z": "4711e11d3b408952",
        "x": 3060,
        "y": 800,
        "wires": [
            [
                "f872af62c846b351"
            ]
        ]
    },
    {
        "id": "eea677b2387cf4aa",
        "type": "junction",
        "z": "4711e11d3b408952",
        "x": 2180,
        "y": 1760,
        "wires": [
            [
                "308a490ec5722c8b",
                "f2c41c3683f48b40",
                "336310f1b2c1618c",
                "f741c3e0c3e91bd6"
            ]
        ]
    },
    {
        "id": "055af78557af3ba0",
        "type": "junction",
        "z": "4711e11d3b408952",
        "x": 2320,
        "y": 1120,
        "wires": [
            [
                "5f8ef7d0a058c23f"
            ]
        ]
    },
    {
        "id": "eddd716ecfc250ee",
        "type": "junction",
        "z": "4711e11d3b408952",
        "x": 2300,
        "y": 900,
        "wires": [
            [
                "dfed6b8152f52790"
            ]
        ]
    },
    {
        "id": "de341bd53cd0dd87",
        "type": "junction",
        "z": "4711e11d3b408952",
        "x": 710,
        "y": 1050,
        "wires": [
            [
                "f02017c662df4ca0",
                "ae0ba38aa6bc8221",
                "6230aa4c6c4804b8",
                "0c7192af31c984ee",
                "03505c1c2ca4e575"
            ]
        ]
    },
    {
        "id": "ae0ba38aa6bc8221",
        "type": "junction",
        "z": "4711e11d3b408952",
        "x": 2300,
        "y": 1040,
        "wires": [
            [
                "e0a9a9d846b8b52b",
                "d0d51cb05d31ac3b",
                "ad8a481f98ad68a3",
                "6ac6b180c25b4160",
                "419b88831616d489",
                "8b48ac6bcc383dd9",
                "308a490ec5722c8b",
                "f2c41c3683f48b40",
                "336310f1b2c1618c",
                "eddd716ecfc250ee",
                "055af78557af3ba0",
                "20850889fdb58bb8"
            ]
        ]
    },
    {
        "id": "bd939b90c82cda73",
        "type": "junction",
        "z": "4711e11d3b408952",
        "x": 2260,
        "y": 1260,
        "wires": [
            [
                "594cf3add409292f",
                "52f86b270bfecc95",
                "6c6a38779b6dd262",
                "31af42971b2ec94b",
                "7b896316bd89a7eb",
                "8afa7fa8a6fab743",
                "e21862b1d83f1e1f",
                "fedf69d0c8aa2ea1",
                "e981a8d3d612e2af"
            ]
        ]
    },
    {
        "id": "0654903203464a38",
        "type": "junction",
        "z": "4711e11d3b408952",
        "x": 2240,
        "y": 660,
        "wires": [
            [
                "d0d51cb05d31ac3b",
                "e0a9a9d846b8b52b",
                "ad8a481f98ad68a3",
                "31af42971b2ec94b",
                "6c6a38779b6dd262",
                "594cf3add409292f"
            ]
        ]
    },
    {
        "id": "7e8cd935e8f06662",
        "type": "junction",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "x": 800,
        "y": 400,
        "wires": [
            [
                "808ddf004871a525",
                "7c05fe5dab08155f"
            ]
        ]
    },
    {
        "id": "904a7411a59c5ada",
        "type": "junction",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "x": 870,
        "y": 220,
        "wires": [
            [
                "70ad3dccc073a9d3",
                "b07dbdecb0ac4436"
            ]
        ]
    },
    {
        "id": "1ed8c1b5f01ee476",
        "type": "junction",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "x": 870,
        "y": 140,
        "wires": [
            [
                "b07dbdecb0ac4436",
                "65aba761444a8649"
            ]
        ]
    },
    {
        "id": "070c9775a900d4da",
        "type": "junction",
        "z": "a164a29c09894167",
        "g": "ed0fd4cd280b994e",
        "x": 400,
        "y": 1640,
        "wires": [
            [
                "4d49a66465583972",
                "388fee0c6e0a3957",
                "838e4bd8afe7a17b",
                "ae4a717d7332e1e7"
            ]
        ]
    },
    {
        "id": "b9f67f93dc14c63d",
        "type": "junction",
        "z": "a164a29c09894167",
        "g": "ed0fd4cd280b994e",
        "x": 880,
        "y": 1580,
        "wires": [
            [
                "8c73643b77bd695e",
                "c68dd64815a6e5e9",
                "1ebc38573110ae3b"
            ]
        ]
    },
    {
        "id": "b97f5f6fd05a187a",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "f5787c290a8dd28e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "4.235.120.42",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "c0d1b19a72f9db3b",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#cc0000",
                "baseFont": "Lucida Sans Typewriter,Lucida Console,Monaco,monospace",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#c60000",
                "baseFont": "Lucida Sans Typewriter,Lucida Console,Monaco,monospace",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#c60000",
                    "value": "#c60000",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#c60000",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#cfcfcf",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#5c5c5c",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#cfcfcf",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#cfcfcf",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#030303",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#a3a3a3",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#cccfcf",
                    "edited": true
                },
                "base-font": {
                    "value": "Lucida Sans Typewriter,Lucida Console,Monaco,monospace"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 2,
                "gy": 2,
                "cx": 2,
                "cy": 2,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "206483926c864157",
        "type": "ui_tab",
        "name": "Element-test",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "daa06880663c5a8d",
        "type": "ui_tab",
        "name": "Legg til nytt element",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6012179e93879eec",
        "type": "ui_tab",
        "name": "Oppsett",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4540856fd07269fe",
        "type": "ui_tab",
        "name": "Rediger database for artikkel nummer",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "78895eb88847010d",
        "type": "ui_group",
        "name": "Legg til nytt element",
        "tab": "daa06880663c5a8d",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3928239fec72f2e8",
        "type": "ui_group",
        "name": "Oppsett",
        "tab": "6012179e93879eec",
        "order": 1,
        "disp": false,
        "width": 14,
        "collapse": false,
        "className": ""
    },
    {
        "id": "18cc9cb264bf256a",
        "type": "ui_group",
        "name": "Målte verdier",
        "tab": "206483926c864157",
        "order": 1,
        "disp": false,
        "width": 26,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b4a34a1e992bb50d",
        "type": "ui_group",
        "name": "Data",
        "tab": "6012179e93879eec",
        "order": 2,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2e5fc634d7139928",
        "type": "ui_group",
        "name": "Rediger database for artikkel nummer",
        "tab": "4540856fd07269fe",
        "order": 1,
        "disp": false,
        "width": "27",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c19c6cd8887d85fd",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 1,
        "width": 9,
        "height": 1
    },
    {
        "id": "a121ee1ccfee2b06",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 20,
        "width": 6,
        "height": 1
    },
    {
        "id": "5af2dd6dcd7ef7b8",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 24,
        "width": 6,
        "height": 1
    },
    {
        "id": "01bb59f7b15a9fc3",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 27,
        "width": 2,
        "height": 1
    },
    {
        "id": "2c49b69d0ae43b95",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 29,
        "width": 2,
        "height": 1
    },
    {
        "id": "9dfb8e38573f3d84",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 31,
        "width": 2,
        "height": 1
    },
    {
        "id": "9dcb80d8308b2675",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 33,
        "width": 2,
        "height": 1
    },
    {
        "id": "873ae210e4f8dbab",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 34,
        "width": 2,
        "height": 1
    },
    {
        "id": "190e2465317b7c97",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 35,
        "width": 2,
        "height": 1
    },
    {
        "id": "e1eb2da7c0a70dc8",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 36,
        "width": 2,
        "height": 1
    },
    {
        "id": "8e41bd8f60f02b09",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 37,
        "width": 2,
        "height": 1
    },
    {
        "id": "d4b1b0aedee52b16",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 39,
        "width": 2,
        "height": 1
    },
    {
        "id": "05793f4c2803f53a",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 41,
        "width": 1,
        "height": 1
    },
    {
        "id": "ce4091c9ca6536dd",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 43,
        "width": 2,
        "height": 1
    },
    {
        "id": "392789d5b78cb77c",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 44,
        "width": 1,
        "height": 1
    },
    {
        "id": "84ad788b093fa257",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 46,
        "width": 2,
        "height": 1
    },
    {
        "id": "2a56c8f48c0c52e2",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 48,
        "width": 1,
        "height": 1
    },
    {
        "id": "49ed58697d4bc631",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 49,
        "width": 2,
        "height": 1
    },
    {
        "id": "47b9d3a5b09b7e59",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 50,
        "width": 1,
        "height": 1
    },
    {
        "id": "b49d2efcb95a3d50",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 53,
        "width": 26,
        "height": 1
    },
    {
        "id": "d47bf7db6ecd048a",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 54,
        "width": 26,
        "height": 1
    },
    {
        "id": "ffdec53fceced2b4",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 55,
        "width": 26,
        "height": 1
    },
    {
        "id": "1e700c9a71f8b7c1",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 56,
        "width": 26,
        "height": 1
    },
    {
        "id": "bf2e759f966226d4",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 58,
        "width": 6,
        "height": 1
    },
    {
        "id": "f10c389261e74ab5",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 62,
        "width": 7,
        "height": 1
    },
    {
        "id": "53fb9d065e897e3d",
        "type": "ui_spacer",
        "z": "f22f63a4be31664b",
        "name": "spacer",
        "group": "18cc9cb264bf256a",
        "order": 64,
        "width": 6,
        "height": 1
    },
    {
        "id": "43feefdd46225efb",
        "type": "serial-port",
        "serialport": "/dev/ttyO1",
        "serialbaud": "57600",
        "databits": 8,
        "parity": "none",
        "stopbits": 1,
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": 10000
    },
    {
        "id": "622e7ed0f70d4540",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "4.235.120.161",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "ElementData",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "admin",
        "userFieldType": "str",
        "password": "Admin01!",
        "passwordFieldType": "str"
    },
    {
        "id": "43d2e060401a8638",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "4.235.120.161",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "testaparatdb",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "admin",
        "userFieldType": "str",
        "password": "Admin01!",
        "passwordFieldType": "str"
    },
    {
        "id": "0aec28bac67bd5fc",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "4.235.120.161",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "ElementData",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "admin",
        "userFieldType": "str",
        "password": "Admin01!",
        "passwordFieldType": "str"
    },
    {
        "id": "87e7a38022e85acc",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "4.235.120.161",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "artikkel_data",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "admin",
        "userFieldType": "str",
        "password": "Admin01!",
        "passwordFieldType": "str"
    },
    {
        "id": "92ae3e56142d9db8",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "4.235.120.161",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "ElementData",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "admin",
        "userFieldType": "str",
        "password": "Admin01!",
        "passwordFieldType": "str"
    },
    {
        "id": "52c417ef6ad2a87c",
        "type": "ui_spacer",
        "z": "edfc733139c7f123",
        "name": "spacer",
        "group": "3928239fec72f2e8",
        "order": 2,
        "width": 7,
        "height": 1
    },
    {
        "id": "11df5019cdec5d7d",
        "type": "ui_spacer",
        "z": "edfc733139c7f123",
        "name": "spacer",
        "group": "3928239fec72f2e8",
        "order": 4,
        "width": 7,
        "height": 1
    },
    {
        "id": "c5b22c46ec0ccd11",
        "type": "ui_spacer",
        "z": "edfc733139c7f123",
        "name": "spacer",
        "group": "3928239fec72f2e8",
        "order": 6,
        "width": 7,
        "height": 1
    },
    {
        "id": "aa2747e11277c8e9",
        "type": "ui_spacer",
        "z": "edfc733139c7f123",
        "name": "spacer",
        "group": "3928239fec72f2e8",
        "order": 8,
        "width": 7,
        "height": 1
    },
    {
        "id": "87b922a44b5bb404",
        "type": "ui_spacer",
        "z": "edfc733139c7f123",
        "name": "spacer",
        "group": "3928239fec72f2e8",
        "order": 10,
        "width": 7,
        "height": 1
    },
    {
        "id": "24848e8f51cac712",
        "type": "ui_spacer",
        "z": "edfc733139c7f123",
        "name": "spacer",
        "group": "3928239fec72f2e8",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "ee99426968faa922",
        "type": "inject",
        "z": "edfc733139c7f123",
        "g": "485d94f8d1c58f47",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "input1",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 120,
        "wires": [
            [
                "8aa6cab909a58c31",
                "fa949f8f367c8c4c"
            ]
        ]
    },
    {
        "id": "4e9d36299f901eea",
        "type": "link in",
        "z": "edfc733139c7f123",
        "g": "485d94f8d1c58f47",
        "name": "IO1 in",
        "links": [
            "236519827f9cd3ec"
        ],
        "x": 175,
        "y": 280,
        "wires": [
            [
                "0c8de6727a29c8dc"
            ]
        ]
    },
    {
        "id": "fd3f8987fdce1616",
        "type": "link out",
        "z": "edfc733139c7f123",
        "g": "485d94f8d1c58f47",
        "name": "Start måling",
        "mode": "link",
        "links": [
            "201221e967989b32",
            "8d18b3d0407418d8",
            "741fe6190c24ac9c"
        ],
        "x": 805,
        "y": 180,
        "wires": []
    },
    {
        "id": "8aa6cab909a58c31",
        "type": "function",
        "z": "edfc733139c7f123",
        "g": "485d94f8d1c58f47",
        "name": "Check and Start Sequence",
        "func": "const STATUS_FINISHED = 'Ferdig';\nconst STATUS_RUNNING = 'Kjører';\n\nvar status = global.get('status') || STATUS_FINISHED;\n\n// Hvis meldingen er \"ferdig\", sett status til Ferdig og avslutt\nif (msg.payload === 'ferdig') {\n    global.set('status', STATUS_FINISHED);\n    return null;\n}\n\n// Hvis den nåværende statusen er Ferdig, sett til Kjører, slett globale verdier og oppdater status\nif (status === STATUS_FINISHED) {\n    // Endre global kontekst \"status\" til \"Kjører\"\n    global.set('status', STATUS_RUNNING);\n    \n    // Slett (fjern) de globale variablene\n\n    global.set('motstand_status', undefined);\n    global.set('measuredResistanceDisplay', undefined);\n    global.set('status_Fase/GND', undefined);\n    global.set('measuredResistanceFaseGND', undefined);\n    global.set('status_Skall/GND', undefined);\n    global.set('measuredResistance_SkallGND', undefined);\n    global.set('ir_test_status', undefined);\n    global.set('ir_test_full', undefined);\n    global.set('acw_test_status', undefined);\n    global.set('acw_test_full', undefined);\n    global.set('gb_test_status', undefined);\n    global.set('gb_test_full', undefined);\n    global.set('testResult', undefined);\n    global.set(\"test_melding\", undefined);\n        \n    msg.payload = true; // Indiker at sekvensen starter\n    return msg;\n} else {\n    // Hvis status allerede er \"Kjører\", gjør ingenting\n    return null;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 180,
        "wires": [
            [
                "fd3f8987fdce1616"
            ]
        ]
    },
    {
        "id": "fa949f8f367c8c4c",
        "type": "link out",
        "z": "edfc733139c7f123",
        "g": "485d94f8d1c58f47",
        "name": "Tøm display",
        "mode": "link",
        "links": [
            "d6870189e75bb68e"
        ],
        "x": 525,
        "y": 100,
        "wires": []
    },
    {
        "id": "1bcc9a895aeb7b9e",
        "type": "link out",
        "z": "edfc733139c7f123",
        "g": "485d94f8d1c58f47",
        "name": "Luftsylynder",
        "mode": "link",
        "links": [
            "cfdfde613ef9c357"
        ],
        "x": 465,
        "y": 220,
        "wires": []
    },
    {
        "id": "6e1a8c35d13e048d",
        "type": "link in",
        "z": "edfc733139c7f123",
        "g": "485d94f8d1c58f47",
        "name": "Status for testdummyer ",
        "links": [
            "c1394c4b79c65683"
        ],
        "x": 175,
        "y": 340,
        "wires": [
            [
                "0c8de6727a29c8dc"
            ]
        ]
    },
    {
        "id": "082c4fe3bcd3236a",
        "type": "link in",
        "z": "edfc733139c7f123",
        "g": "485d94f8d1c58f47",
        "name": "Kjøring av dummyer",
        "links": [
            "546fc0c5875a5dd5",
            "d0b3abd744f2aa6f"
        ],
        "x": 175,
        "y": 220,
        "wires": [
            [
                "c3791c5b873cfcff"
            ]
        ]
    },
    {
        "id": "0c8de6727a29c8dc",
        "type": "function",
        "z": "edfc733139c7f123",
        "g": "485d94f8d1c58f47",
        "name": "Er teste klar",
        "func": "// Initialiser kontekstvariabler hvis de ikke finnes\nif (context.get(\"testKlar\") === undefined) {\n    context.set(\"testKlar\", false);\n}\nif (context.get(\"sisteStatus\") === undefined) {\n    context.set(\"sisteStatus\", \"Dummy må kjøres\");\n}\n\n// Hent innkommende payload og topic\nlet payload = msg.payload;\nlet topic = msg.topic;\n\n// Oppdater status basert på meldinger\nif (payload === \"Test klar\") {\n    context.set(\"testKlar\", true);\n    context.set(\"sisteStatus\", \"Test klar\");\n} else if (payload === \"Dummy må kjøres\" || payload === \"Grønn dummy må kjøres\" || payload === \"Rød dummy må kjøres\") {\n    context.set(\"testKlar\", false);\n    context.set(\"sisteStatus\", payload);\n}\n\n// Håndter \"NormalTest\"-forespørsel\nif (topic === \"NormalTest\" && payload === true) {\n    if (context.get(\"testKlar\")) {\n        // Hvis testen er klar, send `true` på utgang 1 og en tom payload på utgang 2\n        return [{ payload: true }, { payload: \"\" }];\n    } else {\n        // Hvis testen ikke er klar, send status på utgang 2\n        return [null, { payload: \"Test er ikke klar: \" + context.get(\"sisteStatus\") }];\n    }\n}\n\n// Ingen utgang sendes hvis meldingen ikke er \"NormalTest\" med payload true\nreturn null;\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 300,
        "wires": [
            [
                "c3791c5b873cfcff"
            ],
            [
                "7f23a77b9e99df22"
            ]
        ]
    },
    {
        "id": "7f23a77b9e99df22",
        "type": "link out",
        "z": "edfc733139c7f123",
        "g": "485d94f8d1c58f47",
        "name": "Test ikke klar",
        "mode": "link",
        "links": [
            "4679a3800a3f7aca"
        ],
        "x": 795,
        "y": 300,
        "wires": []
    },
    {
        "id": "3481c9bdba9bd564",
        "type": "comment",
        "z": "edfc733139c7f123",
        "name": "Kjør test",
        "info": "End of Line (EOL) Sluttkontroll for motorvarmere\n\n## Detaljert beskrivelse av Node-RED-flyt: \"Kjør test\"\n\nFlyten er en sentral del av EOL-testoppsettet for motorvarmere og benyttes for å initiere og håndtere automatiserte testsekvenser.\n\n### Flytstruktur\nFlyten består av følgende hovedkomponenter:\n\n#### 1. Brukerinput for teststart\n- **UI Button (Start Test)**: Brukes for å manuelt starte testprosessen. Når brukeren klikker denne knappen, sender den et signal som aktiverer testsekvensen.\n- **Inject-node**: Muliggjør manuell eller automatisk trigging av flyten, typisk brukt under utvikling eller ved feilsøking.\n\n#### 2. Check and Start Sequence (Funksjonsnode)\nDenne funksjonsnoden sjekker en global variabel kalt `status` for å avgjøre om en ny test kan starte:\n\n- Hvis statusen er **\"Ferdig\"**, endres statusen til **\"Kjører\"**, og tidligere globale variabler som inneholder testresultater nullstilles. Dette forbereder systemet til en ny testsyklus.\n- Dersom testen allerede er **«Kjører»**, vil ikke funksjonen starte en ny test, og ingen melding sendes videre.\n- Ved klargjøring settes payload til `true` for å indikere at testsekvensen kan begynne.\n\n#### 3. Junction-node for distribuering av testsignal\nDenne noden distribuerer startsignalet til følgende handlinger:\n- **Tøm display:** Nullstiller brukergrensesnittet før ny test.\n- **Luftsylindere:** Aktiverer pneumatiske sylindere for fysisk håndtering av produktet under testforløpet.\n\n#### 4. Overvåking og klargjøring av testdummyer (`function 29`)\nDenne funksjonen:\n- Holder styr på om testsystemet er klart eller ikke gjennom kontekstvariabler `testKlar` og `sisteStatus`.\n- Oppdaterer status avhengig av meldinger mottatt fra dummy-testene:\n  - Meldinger som kan mottas inkluderer **«Test klar»**, **«Dummy må kjøres»**, **«Grønn dummy må kjøres»** og **«Rød dummy må kjøres»**.\n- Når det mottas en forespørsel med topic `NormalTest` og payload `true`, kontrolleres testklar-status:\n  - Dersom testen er klar (`testKlar = true`), starter testsekvensen.\n  - Dersom testen ikke er klar, sendes en melding tilbake med informasjon om hvorfor testen ikke kan starte, f.eks. «Dummy må kjøres».\n\n#### 5. Link-noder (Kommunikasjon mellom moduler)\nLinker brukes til å kommunisere og trigge handlinger mellom forskjellige deler av flyten og systemet:\n- **«Start måling»**: Starter den faktiske måleprosedyren.\n- **«Tøm display»**: Nullstiller alle verdier på brukergrensesnittet før ny test.\n- **«Luftsylindere»**: Aktiverer pneumatiske sylindere som brukes i testprosessen.\n- **«Test ikke klar»**: Informerer operatør eller systemet om hvorfor testen ikke kan starte.\n\n### Brukergrensesnitt\nFlyten er knyttet til et Node-RED-basert dashboard under fanen **\"Element-test\"** og gruppen **«Målte verdier»**, som viser resultater og gir mulighet for operatørinteraksjon, som start av tester.\n\n### Sammenheng med systemets øvrige komponenter\nFlyten inngår som en del av det helhetlige EOL-systemet, som inkluderer:\n- Docker-containere for isolasjon og drift av testmoduler.\n- PostgreSQL-database for lagring av testresultater og status.\n- MQTT-kommunikasjon for generering og publisering av serienummer.\n- Bruk av kalibrerte måleinstrumenter (GPT-9802 og RS PRO RSDM3055).\n\nFlyten sikrer en trygg, effektiv og strukturert gjennomføring av automatiserte elektriske tester i produksjonsmiljøet, med tydelig statusrapportering og feil-håndtering.\n\n",
        "x": 1100,
        "y": 80,
        "wires": []
    },
    {
        "id": "155f7235381515cc",
        "type": "link in",
        "z": "a164a29c09894167",
        "g": "448f433ee797fb12",
        "name": "Gjør måling 2",
        "links": [
            "92f543bbf30b2830"
        ],
        "x": 245,
        "y": 1020,
        "wires": [
            [
                "db2826e9982ace62",
                "4f8ea2a2eaeb5239"
            ]
        ]
    },
    {
        "id": "29b993bf6b667c3c",
        "type": "link out",
        "z": "a164a29c09894167",
        "g": "448f433ee797fb12",
        "name": "Resultat Måling 2",
        "mode": "link",
        "links": [
            "592a50d937add3e5",
            "53952a7d07e4035c",
            "e4e6b130a939260d"
        ],
        "x": 1005,
        "y": 940,
        "wires": []
    },
    {
        "id": "db2826e9982ace62",
        "type": "tcp request",
        "z": "a164a29c09894167",
        "g": "448f433ee797fb12",
        "name": "Multimeter",
        "server": "192.168.1.215",
        "port": "5025",
        "out": "char",
        "ret": "string",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 450,
        "y": 940,
        "wires": [
            [
                "29b993bf6b667c3c",
                "d700e658a943757f"
            ]
        ]
    },
    {
        "id": "989c8683ce02ad31",
        "type": "link in",
        "z": "a164a29c09894167",
        "g": "459111a7eb7f7b2e",
        "name": "Komando til Kbus",
        "links": [
            "046f14ab3dfcf900",
            "1b2777fd4acdf1d5",
            "1c18e935ddc826e6",
            "62c209e78eea1acd",
            "70ab6f895cb94f13",
            "ac939dc23e5bdad6",
            "585a107242c91590",
            "0fba96270f74fab8"
        ],
        "x": 245,
        "y": 460,
        "wires": [
            [
                "f6d81d12b2f3941a"
            ]
        ]
    },
    {
        "id": "4d5ae259a222f84b",
        "type": "link in",
        "z": "a164a29c09894167",
        "g": "73bef4b24dc05b7e",
        "name": "Gjør måling 3",
        "links": [
            "b5c0f09090a1aac0"
        ],
        "x": 245,
        "y": 1260,
        "wires": [
            [
                "6c8d82fda0453b6c",
                "d630090a4b59bead"
            ]
        ]
    },
    {
        "id": "ff64f9cf976422cc",
        "type": "link out",
        "z": "a164a29c09894167",
        "g": "73bef4b24dc05b7e",
        "name": "Resultat Måling 3",
        "mode": "link",
        "links": [
            "608e461650376ae6",
            "0661ea6652f7b633",
            "2fcd261e6f08cea1"
        ],
        "x": 1015,
        "y": 1220,
        "wires": []
    },
    {
        "id": "6c8d82fda0453b6c",
        "type": "tcp request",
        "z": "a164a29c09894167",
        "g": "73bef4b24dc05b7e",
        "name": "Multimeter",
        "server": "192.168.1.215",
        "port": "5025",
        "out": "char",
        "ret": "string",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 450,
        "y": 1220,
        "wires": [
            [
                "ff64f9cf976422cc",
                "dd64d87fa930f616"
            ]
        ]
    },
    {
        "id": "b13f09a4d7b34138",
        "type": "link in",
        "z": "a164a29c09894167",
        "g": "1e35df3d233f470b",
        "name": "Gjør Måling1",
        "links": [
            "7520bed71846b68a"
        ],
        "x": 245,
        "y": 740,
        "wires": [
            [
                "78828f4a471394ef",
                "c46a498e6d5b9dd8"
            ]
        ]
    },
    {
        "id": "41f8ef400b4514c6",
        "type": "link out",
        "z": "a164a29c09894167",
        "g": "1e35df3d233f470b",
        "name": "Resultat Måling 1",
        "mode": "link",
        "links": [
            "b434a8644c2ca06e",
            "e7c1b2d079ccae32",
            "d6e210a445909fa9"
        ],
        "x": 995,
        "y": 700,
        "wires": []
    },
    {
        "id": "78828f4a471394ef",
        "type": "tcp request",
        "z": "a164a29c09894167",
        "g": "1e35df3d233f470b",
        "name": "Multimeter",
        "server": "192.168.1.215",
        "port": "5025",
        "out": "char",
        "ret": "string",
        "splitc": "\\n",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 470,
        "y": 700,
        "wires": [
            [
                "1c6b1c8686a7fe8c",
                "b50839a346fd1f66"
            ]
        ]
    },
    {
        "id": "f76b6ff9166da2c3",
        "type": "link in",
        "z": "a164a29c09894167",
        "g": "7fdd724fb2c6d5e7",
        "name": "resett multimeter",
        "links": [
            "422c8f8af79fdbc1",
            "b5ef13660d06a0c8"
        ],
        "x": 245,
        "y": 560,
        "wires": [
            [
                "feedf6288c36d447"
            ]
        ]
    },
    {
        "id": "feedf6288c36d447",
        "type": "tcp request",
        "z": "a164a29c09894167",
        "g": "7fdd724fb2c6d5e7",
        "name": "Multimeter",
        "server": "192.168.1.215",
        "port": "5025",
        "out": "immed",
        "ret": "string",
        "splitc": " ",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 580,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "b71bd6ecb6df73d5",
        "type": "comment",
        "z": "a164a29c09894167",
        "g": "7fdd724fb2c6d5e7",
        "name": "Standard komandoer",
        "info": "",
        "x": 1180,
        "y": 600,
        "wires": []
    },
    {
        "id": "1b8230d5b8ec3a6f",
        "type": "comment",
        "z": "a164a29c09894167",
        "g": "1e35df3d233f470b",
        "name": "Måling 1",
        "info": "",
        "x": 1220,
        "y": 700,
        "wires": []
    },
    {
        "id": "8d471cb18ae871a1",
        "type": "comment",
        "z": "a164a29c09894167",
        "g": "448f433ee797fb12",
        "name": "Måling 2",
        "info": "",
        "x": 1220,
        "y": 940,
        "wires": []
    },
    {
        "id": "dd859e0c8e0f64cf",
        "type": "comment",
        "z": "a164a29c09894167",
        "g": "73bef4b24dc05b7e",
        "name": "Måling 3",
        "info": "",
        "x": 1220,
        "y": 1180,
        "wires": []
    },
    {
        "id": "998672e064af0926",
        "type": "link in",
        "z": "a164a29c09894167",
        "g": "ed0fd4cd280b994e",
        "name": "ACW tester",
        "links": [
            "a51397dd546c9386",
            "24a3d0a66d47c23d"
        ],
        "x": 245,
        "y": 1700,
        "wires": [
            [
                "070c9775a900d4da"
            ]
        ]
    },
    {
        "id": "7614414c84f03eaa",
        "type": "link out",
        "z": "a164a29c09894167",
        "g": "ed0fd4cd280b994e",
        "name": "Resultat  Måling 6 ACW",
        "mode": "link",
        "links": [
            "07f6e65bee5f48cd",
            "2d2cd9381974bff7",
            "8ac8d1ee244a984e",
            "9965d5b0f5e9291e",
            "d91e4cec97e953f1"
        ],
        "x": 1515,
        "y": 1680,
        "wires": []
    },
    {
        "id": "c46a498e6d5b9dd8",
        "type": "trigger",
        "z": "a164a29c09894167",
        "g": "1e35df3d233f470b",
        "name": "Start timeout",
        "op1": "",
        "op2": "Multimeter svarer ikke",
        "op1type": "nul",
        "op2type": "str",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "reset",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 420,
        "y": 840,
        "wires": [
            [
                "94b72455af2360f7"
            ]
        ]
    },
    {
        "id": "94b72455af2360f7",
        "type": "function",
        "z": "a164a29c09894167",
        "g": "1e35df3d233f470b",
        "name": "Send feilmelding",
        "func": "msg.payload = \"Multimeter svarer ikke\";\nnode.error(msg.payload, msg);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 840,
        "wires": [
            [
                "41f8ef400b4514c6"
            ]
        ]
    },
    {
        "id": "1c6b1c8686a7fe8c",
        "type": "change",
        "z": "a164a29c09894167",
        "g": "1e35df3d233f470b",
        "name": "Reset Timeout",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 780,
        "wires": [
            [
                "c46a498e6d5b9dd8"
            ]
        ]
    },
    {
        "id": "d3279de9a2b462e5",
        "type": "function",
        "z": "a164a29c09894167",
        "g": "448f433ee797fb12",
        "name": "Send feilmelding",
        "func": "msg.payload = \"Multimeter svarer ikke\";\nnode.error(msg.payload, msg);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1080,
        "wires": [
            [
                "29b993bf6b667c3c"
            ]
        ]
    },
    {
        "id": "4f8ea2a2eaeb5239",
        "type": "trigger",
        "z": "a164a29c09894167",
        "g": "448f433ee797fb12",
        "name": "Start timeout",
        "op1": "",
        "op2": "Multimeter svarer ikke",
        "op1type": "nul",
        "op2type": "str",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "reset",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 420,
        "y": 1080,
        "wires": [
            [
                "d3279de9a2b462e5"
            ]
        ]
    },
    {
        "id": "d700e658a943757f",
        "type": "change",
        "z": "a164a29c09894167",
        "g": "448f433ee797fb12",
        "name": "Reset Timeout",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 1020,
        "wires": [
            [
                "4f8ea2a2eaeb5239"
            ]
        ]
    },
    {
        "id": "63b6e3b8a4542648",
        "type": "function",
        "z": "a164a29c09894167",
        "g": "73bef4b24dc05b7e",
        "name": "Send feilmelding",
        "func": "msg.payload = \"Multimeter svarer ikke\";\nnode.error(msg.payload, msg);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1340,
        "wires": [
            [
                "ff64f9cf976422cc"
            ]
        ]
    },
    {
        "id": "d630090a4b59bead",
        "type": "trigger",
        "z": "a164a29c09894167",
        "g": "73bef4b24dc05b7e",
        "name": "Start timeout",
        "op1": "",
        "op2": "Multimeter svarer ikke",
        "op1type": "nul",
        "op2type": "str",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "reset",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 440,
        "y": 1340,
        "wires": [
            [
                "63b6e3b8a4542648"
            ]
        ]
    },
    {
        "id": "dd64d87fa930f616",
        "type": "change",
        "z": "a164a29c09894167",
        "g": "73bef4b24dc05b7e",
        "name": "Reset Timeout",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1260,
        "wires": [
            [
                "d630090a4b59bead"
            ]
        ]
    },
    {
        "id": "72458ed980ac314b",
        "type": "link in",
        "z": "a164a29c09894167",
        "g": "ed0fd4cd280b994e",
        "name": "IR test",
        "links": [
            "439c1d02c1c93f69"
        ],
        "x": 245,
        "y": 1620,
        "wires": [
            [
                "070c9775a900d4da"
            ]
        ]
    },
    {
        "id": "4d49a66465583972",
        "type": "trigger",
        "z": "a164a29c09894167",
        "g": "ed0fd4cd280b994e",
        "name": "Start timeout",
        "op1": "",
        "op2": "Isulasjonstester svarer ikke",
        "op1type": "nul",
        "op2type": "str",
        "duration": "70",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "reset",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 610,
        "y": 1720,
        "wires": [
            [
                "a151ad727e94d19f"
            ]
        ]
    },
    {
        "id": "8c73643b77bd695e",
        "type": "change",
        "z": "a164a29c09894167",
        "g": "ed0fd4cd280b994e",
        "name": "Reset Timeout",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 1640,
        "wires": [
            [
                "4d49a66465583972"
            ]
        ]
    },
    {
        "id": "a151ad727e94d19f",
        "type": "function",
        "z": "a164a29c09894167",
        "g": "ed0fd4cd280b994e",
        "name": "Send feilmelding",
        "func": "msg.payload = \"Isulasjonstester svarer ikke\";\nnode.error(msg.payload, msg);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1720,
        "wires": [
            [
                "c5eb9b581508078d"
            ]
        ]
    },
    {
        "id": "36e8de507c2de478",
        "type": "link in",
        "z": "a164a29c09894167",
        "g": "ed0fd4cd280b994e",
        "name": "GB tester",
        "links": [
            "d793493720b37add"
        ],
        "x": 245,
        "y": 1660,
        "wires": [
            [
                "070c9775a900d4da"
            ]
        ]
    },
    {
        "id": "c5eb9b581508078d",
        "type": "link out",
        "z": "a164a29c09894167",
        "g": "ed0fd4cd280b994e",
        "name": "Resultat Måling 4 ir",
        "mode": "link",
        "links": [
            "0a92304b39aacdd4",
            "2653776fef55cb8d",
            "2bd18ab2af15cf38",
            "8242e0d376f9e854",
            "d5f30147866fc36a"
        ],
        "x": 1515,
        "y": 1600,
        "wires": []
    },
    {
        "id": "195bdd0dbfe7298e",
        "type": "link out",
        "z": "a164a29c09894167",
        "g": "ed0fd4cd280b994e",
        "name": "Resultat Måling 5 GB",
        "mode": "link",
        "links": [
            "0661ea6652f7b633",
            "2fcd261e6f08cea1",
            "3cc0bb15506fe6e0",
            "632eed675fb38ac0",
            "719235fcee402e5b",
            "7239b5f985e9e561",
            "8e505cdda3ce52a7"
        ],
        "x": 1515,
        "y": 1640,
        "wires": []
    },
    {
        "id": "81a647f7740732be",
        "type": "comment",
        "z": "a164a29c09894167",
        "g": "ed0fd4cd280b994e",
        "name": "Isolasjons tester",
        "info": "",
        "x": 1580,
        "y": 1520,
        "wires": []
    },
    {
        "id": "f3113fc0ca0a4a67",
        "type": "link in",
        "z": "a164a29c09894167",
        "g": "ed0fd4cd280b994e",
        "name": "Standard komandoer til isulasjons tester",
        "links": [
            "fc754c2f35792d4a",
            "24a3d0a66d47c23d"
        ],
        "x": 245,
        "y": 1580,
        "wires": [
            [
                "070c9775a900d4da"
            ]
        ]
    },
    {
        "id": "b3d15459d7eea671",
        "type": "tcp in",
        "z": "a164a29c09894167",
        "d": true,
        "g": "ed0fd4cd280b994e",
        "name": "",
        "server": "server",
        "host": "",
        "port": "8232",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "",
        "topic": "IR",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 740,
        "y": 1540,
        "wires": [
            [
                "b9f67f93dc14c63d"
            ]
        ]
    },
    {
        "id": "388fee0c6e0a3957",
        "type": "tcp out",
        "z": "a164a29c09894167",
        "d": true,
        "g": "ed0fd4cd280b994e",
        "name": "",
        "host": "192.168.1.1",
        "port": "8232",
        "beserver": "client",
        "base64": false,
        "end": true,
        "tls": "",
        "x": 520,
        "y": 1540,
        "wires": []
    },
    {
        "id": "c68dd64815a6e5e9",
        "type": "function",
        "z": "a164a29c09894167",
        "g": "ed0fd4cd280b994e",
        "name": "Returner en array med tre elementer for de tre utgangene",
        "func": "// Konverter payload til streng (dersom den ikke allerede er det)\nvar payloadStr = msg.payload.toString();\n\n// Initialiser utgangsmeldinger til null\nvar outIR = null;\nvar outGB = null;\nvar outACW = null;\n\n// Sjekk hvilken type test som er angitt i payloaden\nif (payloadStr.indexOf(\"IR\") !== -1) {\n    outIR = msg;      // Send til utgang 1 for IR\n} else if (payloadStr.indexOf(\"GB\") !== -1) {\n    outGB = msg;      // Send til utgang 2 for GB\n} else if (payloadStr.indexOf(\"ACW\") !== -1) {\n    outACW = msg;     // Send til utgang 3 for ACW\n}\n\n// Returner en array med tre elementer for de tre utgangene\nreturn [outIR, outGB, outACW];\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1600,
        "wires": [
            [
                "c5eb9b581508078d"
            ],
            [
                "195bdd0dbfe7298e"
            ],
            [
                "7614414c84f03eaa"
            ]
        ],
        "outputLabels": [
            "ir",
            "gb",
            "acw"
        ]
    },
    {
        "id": "d2226581c8a76998",
        "type": "comment",
        "z": "a164a29c09894167",
        "name": "Detaljert beskrivelse av Node-RED-flyt: \"Setup\"",
        "info": "\n\nDetaljert beskrivelse av Node-RED-flyt: \"Setup\"\n\nFlyten \"Setup\" i Node-RED benyttes for å initialisere og konfigurere måleinstrumenter og utstyr før automatisert testing av motorvarmere starter.\n\nFlytstruktur\n\nFlyten inneholder følgende hovedkomponenter:\n\n1. Initialisering og konfigurering av instrumenter\n\nFlyten inkluderer kommandoer for å nullstille og forberede testutstyr før målingene utføres.\n\nMåleinstrument-konfigurasjon (TCP)\n\nTCP-noder etablerer kommunikasjon med multimeteret (RS PRO RSDM3055) og GPT-9802 testinstrumentene.\n\nKommunikasjon skjer via TCP/IP på angitte IP-adresser og porter (f.eks. 192.168.1.215 port 5025).\n\nHovedkomponenter og funksjonalitet\n\n1. Reset og initialisering av måleinstrumenter\n\nTCP Request-node (Multimeter): Sender standardkommandoer via TCP for å tilbakestille og konfigurere multimeteret før testing starter.\n\nFeilhåndtering med tidsavbrudd (timeout) på kommunikasjon med instrumentene, og funksjoner for å sende klare feilmeldinger tilbake dersom instrumentet ikke svarer innen forventet tid.\n\nMålinger\n\nMåling 1-3\n\nHver måling håndteres separat og involverer:\n\nInnkommende linker som initierer hver måling.\n\nTCP-kommunikasjon med multimeteret som utfører målingene.\n\nResultatene sendes tilbake via spesifikke linker til andre deler av systemet.\n\nEksempel på flyt for målinger:\n\nGjør Måling (1-3): Starter målingen.\n\nMultimeter (TCP request-node): Utfører måling og returnerer resultater.\n\nResultat Måling (1-3): Sender resultatet videre til analyse og visning.\n\nMåling 4 (ACW/GB tester)\n\nACW/GB tester: Håndteres av GPT-9802-instrumentet via en egen TCP-forbindelse.\n\nInstrumentet mottar kommandoer, utfører testen og returnerer resultater.\n\nMålingen inkluderer også filtrering av spesifikke meldinger som inneholder \"TEST\", som ignoreres for å unngå feilregistreringer.\n\nFeilmeldinger sendes tydelig tilbake til operatør dersom instrumentet ikke svarer innen definert tidsperiode.\n\nStandardkommandoer\n\nEn dedikert del av flyten håndterer standardkommandoer, som \"resett multimeter\", og sikrer at instrumentet alltid er i kjent, stabil tilstand før nye målinger begynner.\n\nSikkerhet og feilhåndtering\n\nFlyten inkluderer robust tidsavbruddshåndtering (timeouts) for alle instrumenter, med standardiserte feilmeldinger som kommuniseres til operatøren gjennom Node-RED dashboardet.\n\nKommunikasjon og linker\n\nFlyten benytter linker effektivt for å kommunisere og koordinere mellom forskjellige moduler:\n\nLinker inn: Tar imot startkommandoer og klargjøringssignaler fra andre deler av systemet.\n\nLink ut: Resultatene av målinger sendes ut til spesifikke lenker for videre analyse og rapportering.\n\nBrukergrensesnitt\n\nFlyten støtter og er integrert med Node-RED dashboardet for å vise statusmeldinger og resultater tydelig og i sanntid.\n\nIntegrasjon med øvrige systemkomponenter\n\nFlyten inngår som del av det samlede EOL-systemet med Docker-containere, PostgreSQL-databaser, MQTT-kommunikasjon og kalibrerte måleinstrumenter, og sørger for at systemet alltid er klart og kalibrert for nøyaktige og pålitelige testresultater.\n\n",
        "x": 1880,
        "y": 660,
        "wires": []
    },
    {
        "id": "ae4a717d7332e1e7",
        "type": "debug",
        "z": "a164a29c09894167",
        "g": "ed0fd4cd280b994e",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 1640,
        "wires": []
    },
    {
        "id": "1ebc38573110ae3b",
        "type": "debug",
        "z": "a164a29c09894167",
        "g": "ed0fd4cd280b994e",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 1540,
        "wires": []
    },
    {
        "id": "b50839a346fd1f66",
        "type": "delay",
        "z": "a164a29c09894167",
        "g": "1e35df3d233f470b",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 800,
        "y": 700,
        "wires": [
            [
                "41f8ef400b4514c6"
            ]
        ]
    },
    {
        "id": "aefecbcda29b0b87",
        "type": "function",
        "z": "a164a29c09894167",
        "name": "function 28",
        "func": "// Setter MQTT‐topic og payload for å be om WAN‐IP\nmsg.topic = \"VolvoEOL/get\";\nmsg.payload = \"wan\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 3040,
        "wires": [
            [
                "1d01edf6bc590321",
                "dc6088d4cf885b90"
            ]
        ]
    },
    {
        "id": "1d01edf6bc590321",
        "type": "mqtt out",
        "z": "a164a29c09894167",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b97f5f6fd05a187a",
        "x": 870,
        "y": 3040,
        "wires": []
    },
    {
        "id": "23ee06054706b4c0",
        "type": "inject",
        "z": "a164a29c09894167",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 480,
        "y": 3040,
        "wires": [
            [
                "aefecbcda29b0b87"
            ]
        ]
    },
    {
        "id": "209ddecf0ff6a1bc",
        "type": "mqtt in",
        "z": "a164a29c09894167",
        "name": "",
        "topic": "VolvoEOL/wan",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "b97f5f6fd05a187a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1040,
        "y": 3040,
        "wires": [
            [
                "fc3bb9c8eacd723c"
            ]
        ]
    },
    {
        "id": "fc3bb9c8eacd723c",
        "type": "debug",
        "z": "a164a29c09894167",
        "name": "debug 62",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1240,
        "y": 3040,
        "wires": []
    },
    {
        "id": "dc6088d4cf885b90",
        "type": "debug",
        "z": "a164a29c09894167",
        "name": "debug 63",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 2980,
        "wires": []
    },
    {
        "id": "0c1e250860cf09ee",
        "type": "serial in",
        "z": "a164a29c09894167",
        "g": "ed0fd4cd280b994e",
        "name": "",
        "serial": "43feefdd46225efb",
        "x": 720,
        "y": 1580,
        "wires": [
            [
                "b9f67f93dc14c63d"
            ]
        ]
    },
    {
        "id": "838e4bd8afe7a17b",
        "type": "serial out",
        "z": "a164a29c09894167",
        "g": "ed0fd4cd280b994e",
        "name": "",
        "serial": "43feefdd46225efb",
        "x": 550,
        "y": 1580,
        "wires": []
    },
    {
        "id": "f6d81d12b2f3941a",
        "type": "kbus out",
        "z": "a164a29c09894167",
        "g": "459111a7eb7f7b2e",
        "name": "",
        "topic": "PFC200",
        "qos": "2",
        "broker": "b97f5f6fd05a187a",
        "ignoreempty": true,
        "removemqttconfig": false,
        "x": 1220,
        "y": 460,
        "wires": []
    },
    {
        "id": "62c209e78eea1acd",
        "type": "link out",
        "z": "79e43544a55126cd",
        "g": "21183b958e99d20b",
        "name": "Sett rele for Måling 1",
        "mode": "link",
        "links": [
            "989c8683ce02ad31"
        ],
        "x": 945,
        "y": 200,
        "wires": []
    },
    {
        "id": "741fe6190c24ac9c",
        "type": "link in",
        "z": "79e43544a55126cd",
        "g": "21183b958e99d20b",
        "name": "Start 1.",
        "links": [
            "fd3f8987fdce1616"
        ],
        "x": 125,
        "y": 200,
        "wires": [
            [
                "e8aa7b46e26966e5"
            ]
        ]
    },
    {
        "id": "b434a8644c2ca06e",
        "type": "link in",
        "z": "79e43544a55126cd",
        "g": "c64a54a778a149a8",
        "name": "Målt verdi 1",
        "links": [
            "41f8ef400b4514c6",
            "3211f67eb0d22769"
        ],
        "x": 115,
        "y": 380,
        "wires": [
            [
                "702aea51c22878b6"
            ]
        ]
    },
    {
        "id": "bd31c5a0d65dcedf",
        "type": "link out",
        "z": "79e43544a55126cd",
        "g": "21183b958e99d20b",
        "name": "Gjør Måling 1",
        "mode": "link",
        "links": [
            "5a0a44fb42b01098",
            "d6e210a445909fa9"
        ],
        "x": 945,
        "y": 100,
        "wires": []
    },
    {
        "id": "dd22a5e18c138d00",
        "type": "link out",
        "z": "79e43544a55126cd",
        "g": "c64a54a778a149a8",
        "name": "Måling 1 Ferdig",
        "mode": "link",
        "links": [
            "e0b5a72e06f22a63"
        ],
        "x": 865,
        "y": 360,
        "wires": []
    },
    {
        "id": "615574d9be964553",
        "type": "switch",
        "z": "79e43544a55126cd",
        "g": "21183b958e99d20b",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 570,
        "y": 100,
        "wires": [
            [
                "bd31c5a0d65dcedf"
            ]
        ]
    },
    {
        "id": "702aea51c22878b6",
        "type": "switch",
        "z": "79e43544a55126cd",
        "g": "c64a54a778a149a8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 260,
        "y": 380,
        "wires": [
            [
                "47322b283cce9a82"
            ],
            [
                "75a1ea134a8627d6"
            ]
        ]
    },
    {
        "id": "47322b283cce9a82",
        "type": "change",
        "z": "79e43544a55126cd",
        "g": "c64a54a778a149a8",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "payload",
                "fromt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 360,
        "wires": [
            [
                "2a7a91ba0a0f1fbd",
                "21faaece687e0264"
            ]
        ]
    },
    {
        "id": "75a1ea134a8627d6",
        "type": "change",
        "z": "79e43544a55126cd",
        "g": "c64a54a778a149a8",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "payload",
                "fromt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "2a7a91ba0a0f1fbd",
        "type": "trigger",
        "z": "79e43544a55126cd",
        "g": "c64a54a778a149a8",
        "name": "",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "1",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 700,
        "y": 360,
        "wires": [
            [
                "dd22a5e18c138d00"
            ]
        ]
    },
    {
        "id": "21faaece687e0264",
        "type": "trigger",
        "z": "79e43544a55126cd",
        "g": "c64a54a778a149a8",
        "name": "",
        "op1": "",
        "op2": "false",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 460,
        "y": 320,
        "wires": [
            [
                "75dc80334c3eba72"
            ]
        ]
    },
    {
        "id": "fd6c124060d609a1",
        "type": "inject",
        "z": "79e43544a55126cd",
        "g": "c64a54a778a149a8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 320,
        "wires": [
            [
                "702aea51c22878b6"
            ]
        ]
    },
    {
        "id": "d7dc61871629c407",
        "type": "inject",
        "z": "79e43544a55126cd",
        "g": "21183b958e99d20b",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "75dc80334c3eba72"
            ]
        ]
    },
    {
        "id": "e8aa7b46e26966e5",
        "type": "trigger",
        "z": "79e43544a55126cd",
        "g": "21183b958e99d20b",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 220,
        "y": 200,
        "wires": [
            [
                "75dc80334c3eba72"
            ]
        ]
    },
    {
        "id": "d07287d56ff88859",
        "type": "digital output",
        "z": "79e43544a55126cd",
        "g": "21183b958e99d20b",
        "module": "2",
        "channel": "1",
        "name": "DO1",
        "x": 570,
        "y": 160,
        "wires": [
            [
                "4b37121262a79263"
            ]
        ]
    },
    {
        "id": "e110df1916ece408",
        "type": "digital output",
        "z": "79e43544a55126cd",
        "g": "21183b958e99d20b",
        "module": "2",
        "channel": "3",
        "name": "DO3",
        "x": 570,
        "y": 220,
        "wires": [
            [
                "4b37121262a79263"
            ]
        ]
    },
    {
        "id": "8956ff124892fd81",
        "type": "link out",
        "z": "7a6a1365ec90b6de",
        "g": "81bf6f92d77fe47e",
        "name": "Gjør Måling 2",
        "mode": "link",
        "links": [
            "930e49c5ead1d2af",
            "53952a7d07e4035c"
        ],
        "x": 1325,
        "y": 80,
        "wires": []
    },
    {
        "id": "e4e6b130a939260d",
        "type": "link in",
        "z": "7a6a1365ec90b6de",
        "g": "2f46185639a3a572",
        "name": "Målt verdi 2",
        "links": [
            "29b993bf6b667c3c",
            "3211f67eb0d22769"
        ],
        "x": 95,
        "y": 360,
        "wires": [
            [
                "bb4aa247d05ef589"
            ]
        ]
    },
    {
        "id": "70ab6f895cb94f13",
        "type": "link out",
        "z": "7a6a1365ec90b6de",
        "g": "81bf6f92d77fe47e",
        "name": "Sett rele for Måling 2",
        "mode": "link",
        "links": [
            "989c8683ce02ad31"
        ],
        "x": 1325,
        "y": 180,
        "wires": []
    },
    {
        "id": "e0b5a72e06f22a63",
        "type": "link in",
        "z": "7a6a1365ec90b6de",
        "g": "81bf6f92d77fe47e",
        "name": "Start 2. Måling",
        "links": [
            "dd22a5e18c138d00"
        ],
        "x": 95,
        "y": 140,
        "wires": [
            [
                "377534ed4fae9964"
            ]
        ]
    },
    {
        "id": "31a40f345fd07fbd",
        "type": "switch",
        "z": "7a6a1365ec90b6de",
        "g": "81bf6f92d77fe47e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 80,
        "wires": [
            [
                "8956ff124892fd81"
            ]
        ]
    },
    {
        "id": "bb4aa247d05ef589",
        "type": "switch",
        "z": "7a6a1365ec90b6de",
        "g": "2f46185639a3a572",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 360,
        "wires": [
            [
                "b93d5544c0216d0b"
            ],
            [
                "c8b0e7856a993104"
            ]
        ]
    },
    {
        "id": "b93d5544c0216d0b",
        "type": "change",
        "z": "7a6a1365ec90b6de",
        "g": "2f46185639a3a572",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "payload",
                "fromt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 340,
        "wires": [
            [
                "6dc95696f7307d8a",
                "cfa0bf9feeb8fed6"
            ]
        ]
    },
    {
        "id": "c8b0e7856a993104",
        "type": "change",
        "z": "7a6a1365ec90b6de",
        "g": "2f46185639a3a572",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "payload",
                "fromt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "6dc95696f7307d8a",
        "type": "trigger",
        "z": "7a6a1365ec90b6de",
        "g": "2f46185639a3a572",
        "name": "",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "1",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 660,
        "y": 340,
        "wires": [
            [
                "dbc3c136a5d50e11"
            ]
        ]
    },
    {
        "id": "cfa0bf9feeb8fed6",
        "type": "trigger",
        "z": "7a6a1365ec90b6de",
        "g": "2f46185639a3a572",
        "name": "",
        "op1": "",
        "op2": "false",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 400,
        "y": 300,
        "wires": [
            [
                "377534ed4fae9964"
            ]
        ]
    },
    {
        "id": "e04b8a30c66468c5",
        "type": "inject",
        "z": "7a6a1365ec90b6de",
        "g": "2f46185639a3a572",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Fail",
        "payloadType": "str",
        "x": 150,
        "y": 300,
        "wires": [
            [
                "bb4aa247d05ef589"
            ]
        ]
    },
    {
        "id": "aa1215db9b85250f",
        "type": "link out",
        "z": "7a6a1365ec90b6de",
        "g": "2f46185639a3a572",
        "name": "Måling 2 ferdig <50V",
        "mode": "link",
        "links": [
            "b484233fdef2630d"
        ],
        "x": 1335,
        "y": 340,
        "wires": []
    },
    {
        "id": "dbc3c136a5d50e11",
        "type": "function",
        "z": "7a6a1365ec90b6de",
        "g": "2f46185639a3a572",
        "name": "Velger om skall GND skal sjekkes",
        "func": "// Hent spenning fra global kontekst\nvar voltage = global.get('input_voltage');\n\n// Sjekk om verdien er et gyldig tall\nif (typeof voltage !== 'number' || isNaN(voltage)) {    \n    node.error(\"Feil: 'input_voltage' er ikke et gyldig tall!\");\n    return null; // Avslutter hvis verdien er feil\n}\n\n// Variabler for lagring\nvar phaseGndValue;\n\n// Sjekk spenning og lagre riktig verdi i global kontekst\nif (voltage < 50) {\n    phaseGndValue = \"skall/gnd: NA\";\n} else {\n    phaseGndValue = voltage + \" V\";\n}\n\n// Lagre i global kontekst\nglobal.set(\"fase_gnd\", phaseGndValue);\n\n// Opprett meldinger for hver utgang\nvar msgBelow = { payload: (voltage < 50) };\nvar msgAbove = { payload: (voltage > 50) };\n\n// Logg verdiene for debugging\nnode.log(`Spenning: ${voltage} V`);\nnode.log(`Lagrer i global kontekst: ${phaseGndValue}`);\n\n// Ruter meldingen til riktig utgang\nif (voltage < 50) {   \n    return [msgBelow, null]; // Utgang 1 aktiv\n} else if (voltage > 50) {    \n    return [null, msgAbove]; // Utgang 2 aktiv\n} else {    \n    return [null, null]; // Ingen utgang aktiv\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 340,
        "wires": [
            [
                "8c827051b1fa10bb",
                "aa1215db9b85250f"
            ],
            [
                "9385580688e4567f"
            ]
        ],
        "outputLabels": [
            "< 50",
            "> 50"
        ]
    },
    {
        "id": "8c827051b1fa10bb",
        "type": "change",
        "z": "7a6a1365ec90b6de",
        "g": "2f46185639a3a572",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NA",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 300,
        "wires": [
            [
                "964b05880196c92b"
            ]
        ]
    },
    {
        "id": "9385580688e4567f",
        "type": "link out",
        "z": "7a6a1365ec90b6de",
        "g": "2f46185639a3a572",
        "name": "Måling 2 ferdig >50V",
        "mode": "link",
        "links": [
            "ae320ec5cd321a02"
        ],
        "x": 1335,
        "y": 400,
        "wires": []
    },
    {
        "id": "964b05880196c92b",
        "type": "link out",
        "z": "7a6a1365ec90b6de",
        "g": "2f46185639a3a572",
        "name": "Måling 2 >50 V na",
        "mode": "link",
        "links": [
            "a581433753d36c15",
            "0661ea6652f7b633",
            "2fcd261e6f08cea1"
        ],
        "x": 1335,
        "y": 300,
        "wires": []
    },
    {
        "id": "c2656c4a27472995",
        "type": "digital output",
        "z": "7a6a1365ec90b6de",
        "g": "81bf6f92d77fe47e",
        "module": "2",
        "channel": "2",
        "name": "DO2",
        "x": 510,
        "y": 140,
        "wires": [
            [
                "9ebd2ec7b71f6aec"
            ]
        ]
    },
    {
        "id": "c9d202c3bf9f6c26",
        "type": "digital output",
        "z": "7a6a1365ec90b6de",
        "g": "81bf6f92d77fe47e",
        "module": "2",
        "channel": "3",
        "name": "DO3",
        "x": 510,
        "y": 200,
        "wires": [
            [
                "9ebd2ec7b71f6aec"
            ]
        ]
    },
    {
        "id": "d62af9fdc151ecd1",
        "type": "switch",
        "z": "3265f7565c740786",
        "g": "e3f132158f728bda",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 440,
        "wires": [
            [
                "ce34395a5a3ef244"
            ],
            [
                "a277d27a849ca3c4"
            ]
        ]
    },
    {
        "id": "ce34395a5a3ef244",
        "type": "change",
        "z": "3265f7565c740786",
        "g": "e3f132158f728bda",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "payload",
                "fromt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 400,
        "wires": [
            [
                "0fc75f54cd93fc1f",
                "e47fbf503f750a77"
            ]
        ]
    },
    {
        "id": "a277d27a849ca3c4",
        "type": "change",
        "z": "3265f7565c740786",
        "g": "e3f132158f728bda",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "payload",
                "fromt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "0fc75f54cd93fc1f",
        "type": "delay",
        "z": "3265f7565c740786",
        "g": "e3f132158f728bda",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 890,
        "y": 400,
        "wires": [
            [
                "e8386fdd4013733c"
            ]
        ]
    },
    {
        "id": "47b4a2c2e0bb1c0c",
        "type": "switch",
        "z": "3265f7565c740786",
        "g": "b9449972491f9d4a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 610,
        "y": 120,
        "wires": [
            [
                "7c8a27f82b5ec0ac"
            ]
        ]
    },
    {
        "id": "585a107242c91590",
        "type": "link out",
        "z": "3265f7565c740786",
        "g": "b9449972491f9d4a",
        "name": "Sett rele for Måling 3",
        "mode": "link",
        "links": [
            "989c8683ce02ad31"
        ],
        "x": 1015,
        "y": 180,
        "wires": []
    },
    {
        "id": "7c8a27f82b5ec0ac",
        "type": "link out",
        "z": "3265f7565c740786",
        "g": "b9449972491f9d4a",
        "name": "Gjør Måling 3",
        "mode": "link",
        "links": [
            "4fe83af50843c195"
        ],
        "x": 1015,
        "y": 120,
        "wires": []
    },
    {
        "id": "608e461650376ae6",
        "type": "link in",
        "z": "3265f7565c740786",
        "g": "e3f132158f728bda",
        "name": "Målt verdi 3",
        "links": [
            "3211f67eb0d22769",
            "ff64f9cf976422cc"
        ],
        "x": 315,
        "y": 440,
        "wires": [
            [
                "d62af9fdc151ecd1"
            ]
        ]
    },
    {
        "id": "ae320ec5cd321a02",
        "type": "link in",
        "z": "3265f7565c740786",
        "g": "b9449972491f9d4a",
        "name": "Start 3. Måling",
        "links": [
            "9385580688e4567f"
        ],
        "x": 315,
        "y": 180,
        "wires": [
            [
                "eb125b681c34abab"
            ]
        ]
    },
    {
        "id": "e8386fdd4013733c",
        "type": "link out",
        "z": "3265f7565c740786",
        "g": "e3f132158f728bda",
        "name": "Måling 3 ferdig",
        "mode": "link",
        "links": [
            "b484233fdef2630d"
        ],
        "x": 1015,
        "y": 400,
        "wires": []
    },
    {
        "id": "e47fbf503f750a77",
        "type": "trigger",
        "z": "3265f7565c740786",
        "g": "e3f132158f728bda",
        "name": "",
        "op1": "",
        "op2": "false",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 610,
        "y": 280,
        "wires": [
            [
                "eb125b681c34abab"
            ]
        ]
    },
    {
        "id": "9a6b61b8d3cc034a",
        "type": "inject",
        "z": "3265f7565c740786",
        "g": "e3f132158f728bda",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Fail",
        "payloadType": "str",
        "x": 370,
        "y": 340,
        "wires": [
            [
                "d62af9fdc151ecd1"
            ]
        ]
    },
    {
        "id": "5bf15c80339d6107",
        "type": "digital output",
        "z": "3265f7565c740786",
        "g": "b9449972491f9d4a",
        "module": "2",
        "channel": "2",
        "name": "DO2",
        "x": 610,
        "y": 180,
        "wires": [
            [
                "585a107242c91590"
            ]
        ]
    },
    {
        "id": "79c50bdaa56d7e27",
        "type": "switch",
        "z": "4ec0d6e860859eec",
        "g": "abf006b215ab11f3",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 360,
        "wires": [
            [
                "7638f0bf3688a366"
            ],
            [
                "b9ced3500b2dc751"
            ]
        ]
    },
    {
        "id": "7638f0bf3688a366",
        "type": "change",
        "z": "4ec0d6e860859eec",
        "g": "abf006b215ab11f3",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "payload",
                "fromt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 340,
        "wires": [
            [
                "83b63852e6a4995a",
                "a54dadd01e2fb731"
            ]
        ]
    },
    {
        "id": "b9ced3500b2dc751",
        "type": "change",
        "z": "4ec0d6e860859eec",
        "g": "abf006b215ab11f3",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "payload",
                "fromt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "83b63852e6a4995a",
        "type": "delay",
        "z": "4ec0d6e860859eec",
        "g": "abf006b215ab11f3",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 830,
        "y": 320,
        "wires": [
            [
                "1175635223d32f0b"
            ]
        ]
    },
    {
        "id": "099d1f686bded5d0",
        "type": "switch",
        "z": "4ec0d6e860859eec",
        "g": "d1f626e7e5f9bf2d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 100,
        "wires": [
            [
                "0bbea7debdea2ef3"
            ]
        ]
    },
    {
        "id": "1c18e935ddc826e6",
        "type": "link out",
        "z": "4ec0d6e860859eec",
        "g": "d1f626e7e5f9bf2d",
        "name": "Sett rele for Måling 4",
        "mode": "link",
        "links": [
            "989c8683ce02ad31"
        ],
        "x": 1095,
        "y": 160,
        "wires": []
    },
    {
        "id": "0bbea7debdea2ef3",
        "type": "link out",
        "z": "4ec0d6e860859eec",
        "g": "d1f626e7e5f9bf2d",
        "name": "Gjør Måling 4",
        "mode": "link",
        "links": [
            "327c882b17b04efd"
        ],
        "x": 1095,
        "y": 100,
        "wires": []
    },
    {
        "id": "07f6e65bee5f48cd",
        "type": "link in",
        "z": "4ec0d6e860859eec",
        "g": "abf006b215ab11f3",
        "name": "Målt verdi 4 acw",
        "links": [
            "3211f67eb0d22769",
            "7614414c84f03eaa"
        ],
        "x": 245,
        "y": 360,
        "wires": [
            [
                "79c50bdaa56d7e27"
            ]
        ]
    },
    {
        "id": "b484233fdef2630d",
        "type": "link in",
        "z": "4ec0d6e860859eec",
        "g": "d1f626e7e5f9bf2d",
        "name": "Start 4. ACW Måling",
        "links": [
            "e8386fdd4013733c",
            "aa1215db9b85250f"
        ],
        "x": 245,
        "y": 160,
        "wires": [
            [
                "2fc05a0aee28a495"
            ]
        ]
    },
    {
        "id": "7bd4b2948a7f898e",
        "type": "trigger",
        "z": "4ec0d6e860859eec",
        "g": "abf006b215ab11f3",
        "name": "",
        "op1": "",
        "op2": "false",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 540,
        "y": 280,
        "wires": [
            [
                "2fc05a0aee28a495"
            ]
        ]
    },
    {
        "id": "64c3a343624efa4f",
        "type": "link out",
        "z": "4ec0d6e860859eec",
        "g": "abf006b215ab11f3",
        "name": "Test 4 Ferdig2",
        "mode": "link",
        "links": [
            "d91e4cec97e953f1"
        ],
        "x": 1105,
        "y": 400,
        "wires": []
    },
    {
        "id": "a54dadd01e2fb731",
        "type": "change",
        "z": "4ec0d6e860859eec",
        "g": "abf006b215ab11f3",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "test 4 (acw) ferdig",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 400,
        "wires": [
            [
                "64c3a343624efa4f"
            ]
        ]
    },
    {
        "id": "1175635223d32f0b",
        "type": "link out",
        "z": "4ec0d6e860859eec",
        "g": "abf006b215ab11f3",
        "name": "Test 4 Ferdig",
        "mode": "link",
        "links": [
            "a027a967f3adf856"
        ],
        "x": 1105,
        "y": 320,
        "wires": []
    },
    {
        "id": "8405b5bf5db75323",
        "type": "inject",
        "z": "4ec0d6e860859eec",
        "g": "abf006b215ab11f3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Fail",
        "payloadType": "str",
        "x": 350,
        "y": 280,
        "wires": [
            [
                "79c50bdaa56d7e27"
            ]
        ]
    },
    {
        "id": "fdfd9916d5e5a23c",
        "type": "digital output",
        "z": "4ec0d6e860859eec",
        "g": "d1f626e7e5f9bf2d",
        "module": "2",
        "channel": "4",
        "name": "DO4",
        "x": 650,
        "y": 160,
        "wires": [
            [
                "1c18e935ddc826e6"
            ]
        ]
    },
    {
        "id": "dec6597f79ca21cc",
        "type": "switch",
        "z": "139bddc3063942e8",
        "g": "68714daa9ae240e8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 690,
        "y": 120,
        "wires": [
            [
                "52a28a71be283246"
            ]
        ]
    },
    {
        "id": "ac939dc23e5bdad6",
        "type": "link out",
        "z": "139bddc3063942e8",
        "g": "68714daa9ae240e8",
        "name": "Sett rele for Måling 4 ir",
        "mode": "link",
        "links": [
            "989c8683ce02ad31"
        ],
        "x": 1525,
        "y": 180,
        "wires": []
    },
    {
        "id": "52a28a71be283246",
        "type": "link out",
        "z": "139bddc3063942e8",
        "g": "68714daa9ae240e8",
        "name": "Gjør Måling 4 ir",
        "mode": "link",
        "links": [
            "33ed0f98ad655135"
        ],
        "x": 1525,
        "y": 120,
        "wires": []
    },
    {
        "id": "a027a967f3adf856",
        "type": "link in",
        "z": "139bddc3063942e8",
        "g": "68714daa9ae240e8",
        "name": "Start 5 ir måling",
        "links": [
            "1175635223d32f0b"
        ],
        "x": 225,
        "y": 160,
        "wires": [
            [
                "3af0d659a4a6c302"
            ]
        ]
    },
    {
        "id": "c7b859704062e4b5",
        "type": "switch",
        "z": "139bddc3063942e8",
        "g": "67d91e1bbf0bd4f8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 380,
        "wires": [
            [
                "059aa6a5d5853e58"
            ],
            [
                "0bf5306902e2a453"
            ]
        ]
    },
    {
        "id": "059aa6a5d5853e58",
        "type": "change",
        "z": "139bddc3063942e8",
        "g": "67d91e1bbf0bd4f8",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "payload",
                "fromt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 360,
        "wires": [
            [
                "b14d45648cb65908",
                "763a91fe8d7c1e80",
                "a2814a68f8ac7881"
            ]
        ]
    },
    {
        "id": "0bf5306902e2a453",
        "type": "change",
        "z": "139bddc3063942e8",
        "g": "67d91e1bbf0bd4f8",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "payload",
                "fromt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "b14d45648cb65908",
        "type": "delay",
        "z": "139bddc3063942e8",
        "g": "67d91e1bbf0bd4f8",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 800,
        "y": 360,
        "wires": [
            [
                "96e8379648839f2a"
            ]
        ]
    },
    {
        "id": "0a92304b39aacdd4",
        "type": "link in",
        "z": "139bddc3063942e8",
        "g": "67d91e1bbf0bd4f8",
        "name": "Målt verdi 5 ir",
        "links": [
            "3211f67eb0d22769",
            "c5eb9b581508078d"
        ],
        "x": 225,
        "y": 380,
        "wires": [
            [
                "c7b859704062e4b5"
            ]
        ]
    },
    {
        "id": "763a91fe8d7c1e80",
        "type": "trigger",
        "z": "139bddc3063942e8",
        "g": "67d91e1bbf0bd4f8",
        "name": "",
        "op1": "",
        "op2": "false",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 520,
        "y": 300,
        "wires": [
            [
                "9bd6ccc9cda37c2e"
            ]
        ]
    },
    {
        "id": "3867a38dc6f1ec80",
        "type": "link out",
        "z": "139bddc3063942e8",
        "g": "67d91e1bbf0bd4f8",
        "name": "Test 4 Ferdig2",
        "mode": "link",
        "links": [
            "d5f30147866fc36a"
        ],
        "x": 1085,
        "y": 420,
        "wires": []
    },
    {
        "id": "a2814a68f8ac7881",
        "type": "change",
        "z": "139bddc3063942e8",
        "g": "67d91e1bbf0bd4f8",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "test 5 (ir) ferdig",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 420,
        "wires": [
            [
                "3867a38dc6f1ec80"
            ]
        ]
    },
    {
        "id": "d008696e7bb05ec1",
        "type": "link out",
        "z": "139bddc3063942e8",
        "g": "67d91e1bbf0bd4f8",
        "name": "Test 5 Ferdig >50V",
        "mode": "link",
        "links": [
            "b3d593538c4fe969"
        ],
        "x": 1535,
        "y": 420,
        "wires": []
    },
    {
        "id": "2a0fca30a2153bf4",
        "type": "inject",
        "z": "139bddc3063942e8",
        "g": "67d91e1bbf0bd4f8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Fail",
        "payloadType": "str",
        "x": 290,
        "y": 320,
        "wires": [
            [
                "c7b859704062e4b5"
            ]
        ]
    },
    {
        "id": "2c173dd93cb6dd6b",
        "type": "link out",
        "z": "139bddc3063942e8",
        "g": "67d91e1bbf0bd4f8",
        "name": "Test 5 ir Ferdig <50V",
        "mode": "link",
        "links": [
            "7d33b95be9f81b50",
            "9271502f7bfd8eb4"
        ],
        "x": 1535,
        "y": 360,
        "wires": []
    },
    {
        "id": "96e8379648839f2a",
        "type": "function",
        "z": "139bddc3063942e8",
        "g": "67d91e1bbf0bd4f8",
        "name": "Velger om GB skal måles",
        "func": "// Hent spenning fra global context\nvar voltage = global.get('input_voltage');\n\n// Sjekker om verdien er et gyldig tall\nif (typeof voltage !== 'number' || isNaN(voltage)) {    \n    return null; // Avslutter hvis verdien er feil\n}\n\n// Opprett meldinger for hver utgang\nvar msgBelow = { payload: (voltage < 50) };\nvar msgAbove = { payload: (voltage > 50) };\n\n// Ruter meldingen til riktig utgang\nif (voltage < 50) {   \n    return [msgBelow, null];\n} else if (voltage > 50) {    \n    return [null, msgAbove];\n} else {    \n    return [null, null];\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 360,
        "wires": [
            [
                "fb806daf4ebcaca5",
                "2c173dd93cb6dd6b"
            ],
            [
                "d008696e7bb05ec1"
            ]
        ],
        "outputLabels": [
            "< 50",
            "> 50"
        ]
    },
    {
        "id": "fb806daf4ebcaca5",
        "type": "change",
        "z": "139bddc3063942e8",
        "g": "67d91e1bbf0bd4f8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NA",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 300,
        "wires": [
            [
                "1033270452506701"
            ]
        ]
    },
    {
        "id": "1033270452506701",
        "type": "link out",
        "z": "139bddc3063942e8",
        "g": "67d91e1bbf0bd4f8",
        "name": "Måling 5 ir <50V NA",
        "mode": "link",
        "links": [
            "632eed675fb38ac0",
            "7239b5f985e9e561",
            "f1e2a3bdd0c1e7e2"
        ],
        "x": 1535,
        "y": 300,
        "wires": []
    },
    {
        "id": "215aebf35ad83da4",
        "type": "inject",
        "z": "139bddc3063942e8",
        "g": "68714daa9ae240e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 430,
        "y": 200,
        "wires": [
            [
                "9bd6ccc9cda37c2e"
            ]
        ]
    },
    {
        "id": "9bd6ccc9cda37c2e",
        "type": "digital output",
        "z": "139bddc3063942e8",
        "g": "68714daa9ae240e8",
        "module": "2",
        "channel": "4",
        "name": "DO4",
        "x": 690,
        "y": 180,
        "wires": [
            [
                "ac939dc23e5bdad6"
            ]
        ]
    },
    {
        "id": "d03de6476ca68784",
        "type": "switch",
        "z": "f22f63a4be31664b",
        "g": "5d69eb69667cb342",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 710,
        "y": 60,
        "wires": [
            [
                "f6b048048ec0196e"
            ]
        ]
    },
    {
        "id": "046f14ab3dfcf900",
        "type": "link out",
        "z": "f22f63a4be31664b",
        "g": "5d69eb69667cb342",
        "name": "Sett rele for Måling 4",
        "mode": "link",
        "links": [
            "989c8683ce02ad31"
        ],
        "x": 1165,
        "y": 180,
        "wires": []
    },
    {
        "id": "f6b048048ec0196e",
        "type": "link out",
        "z": "f22f63a4be31664b",
        "g": "5d69eb69667cb342",
        "name": "Gjør Måling 5",
        "mode": "link",
        "links": [
            "230ae5010c121d79"
        ],
        "x": 1165,
        "y": 60,
        "wires": []
    },
    {
        "id": "b3d593538c4fe969",
        "type": "link in",
        "z": "f22f63a4be31664b",
        "g": "5d69eb69667cb342",
        "name": "Start 6. Måling GB",
        "links": [
            "d008696e7bb05ec1"
        ],
        "x": 225,
        "y": 140,
        "wires": [
            [
                "1f33f5c44b740844"
            ]
        ]
    },
    {
        "id": "3532456be73a4ee6",
        "type": "switch",
        "z": "f22f63a4be31664b",
        "g": "122679febfcce024",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 440,
        "wires": [
            [
                "9dd24e411738072a"
            ],
            [
                "aadc766593712140"
            ]
        ]
    },
    {
        "id": "9dd24e411738072a",
        "type": "change",
        "z": "f22f63a4be31664b",
        "g": "122679febfcce024",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "payload",
                "fromt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 420,
        "wires": [
            [
                "82092eb178bf8897",
                "ee068254a4099a49",
                "2f2f4467c5ccc5ac"
            ]
        ]
    },
    {
        "id": "aadc766593712140",
        "type": "change",
        "z": "f22f63a4be31664b",
        "g": "122679febfcce024",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "payload",
                "fromt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "82092eb178bf8897",
        "type": "delay",
        "z": "f22f63a4be31664b",
        "g": "122679febfcce024",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 810,
        "y": 400,
        "wires": [
            [
                "2a7a1a47d9a49ea8"
            ]
        ]
    },
    {
        "id": "8e505cdda3ce52a7",
        "type": "link in",
        "z": "f22f63a4be31664b",
        "g": "122679febfcce024",
        "name": "Målt verdi 6 gb",
        "links": [
            "195bdd0dbfe7298e",
            "3211f67eb0d22769"
        ],
        "x": 225,
        "y": 440,
        "wires": [
            [
                "3532456be73a4ee6"
            ]
        ]
    },
    {
        "id": "ee068254a4099a49",
        "type": "trigger",
        "z": "f22f63a4be31664b",
        "g": "122679febfcce024",
        "name": "",
        "op1": "",
        "op2": "false",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 530,
        "y": 360,
        "wires": [
            [
                "1f33f5c44b740844"
            ]
        ]
    },
    {
        "id": "f8d65e4770d0d3c4",
        "type": "link out",
        "z": "f22f63a4be31664b",
        "g": "122679febfcce024",
        "name": "Test 6 Ferdig2",
        "mode": "link",
        "links": [
            "3cc0bb15506fe6e0"
        ],
        "x": 1165,
        "y": 480,
        "wires": []
    },
    {
        "id": "2f2f4467c5ccc5ac",
        "type": "change",
        "z": "f22f63a4be31664b",
        "g": "122679febfcce024",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "test 4 (gb) ferdig",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 480,
        "wires": [
            [
                "f8d65e4770d0d3c4"
            ]
        ]
    },
    {
        "id": "2a7a1a47d9a49ea8",
        "type": "link out",
        "z": "f22f63a4be31664b",
        "g": "122679febfcce024",
        "name": "Test 6 gb Ferdig",
        "mode": "link",
        "links": [
            "9271502f7bfd8eb4"
        ],
        "x": 1165,
        "y": 400,
        "wires": []
    },
    {
        "id": "469258dccb2a456d",
        "type": "inject",
        "z": "f22f63a4be31664b",
        "g": "122679febfcce024",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Fail",
        "payloadType": "str",
        "x": 330,
        "y": 340,
        "wires": [
            [
                "3532456be73a4ee6"
            ]
        ]
    },
    {
        "id": "512d8b70c617e9db",
        "type": "digital output",
        "z": "f22f63a4be31664b",
        "g": "5d69eb69667cb342",
        "module": "2",
        "channel": "2",
        "name": "DO2",
        "x": 670,
        "y": 140,
        "wires": [
            [
                "046f14ab3dfcf900"
            ]
        ]
    },
    {
        "id": "7a984875a4138efc",
        "type": "digital output",
        "z": "f22f63a4be31664b",
        "g": "5d69eb69667cb342",
        "module": "2",
        "channel": "3",
        "name": "DO3",
        "x": 670,
        "y": 200,
        "wires": [
            [
                "046f14ab3dfcf900"
            ]
        ]
    },
    {
        "id": "2d8b6caaf1d377de",
        "type": "inject",
        "z": "54b75e119ba9be7c",
        "g": "fdb5e2deebdb1ce9",
        "name": "Prepere 4W",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 250,
        "y": 180,
        "wires": [
            [
                "564b6d90eb9e8bc7"
            ]
        ]
    },
    {
        "id": "564b6d90eb9e8bc7",
        "type": "function",
        "z": "54b75e119ba9be7c",
        "g": "fdb5e2deebdb1ce9",
        "name": "Prepare CONF:FRES",
        "func": "msg.payload = 'CONF:FRES AUTO\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 180,
        "wires": [
            [
                "7520bed71846b68a",
                "1a1dd763eaf7e7fe"
            ]
        ]
    },
    {
        "id": "7520bed71846b68a",
        "type": "link out",
        "z": "54b75e119ba9be7c",
        "g": "fdb5e2deebdb1ce9",
        "name": "Multimeter Ut 1",
        "mode": "link",
        "links": [
            "b13f09a4d7b34138"
        ],
        "x": 965,
        "y": 180,
        "wires": []
    },
    {
        "id": "5a0a44fb42b01098",
        "type": "link in",
        "z": "54b75e119ba9be7c",
        "g": "fdb5e2deebdb1ce9",
        "name": "Start 1.Måling",
        "links": [
            "bd31c5a0d65dcedf"
        ],
        "x": 225,
        "y": 120,
        "wires": [
            [
                "564b6d90eb9e8bc7"
            ]
        ]
    },
    {
        "id": "1a1dd763eaf7e7fe",
        "type": "trigger",
        "z": "54b75e119ba9be7c",
        "g": "fdb5e2deebdb1ce9",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "700",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 460,
        "y": 240,
        "wires": [
            [
                "dc13ef794d6949f2"
            ]
        ]
    },
    {
        "id": "dc13ef794d6949f2",
        "type": "function",
        "z": "54b75e119ba9be7c",
        "g": "fdb5e2deebdb1ce9",
        "name": "Prepare INIT",
        "func": "msg.payload += 'INIT\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 240,
        "wires": [
            [
                "7520bed71846b68a",
                "3bedd2a879cb6cd8"
            ]
        ]
    },
    {
        "id": "3bedd2a879cb6cd8",
        "type": "trigger",
        "z": "54b75e119ba9be7c",
        "g": "fdb5e2deebdb1ce9",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 580,
        "y": 320,
        "wires": [
            [
                "c404243d064afbd1"
            ]
        ]
    },
    {
        "id": "c404243d064afbd1",
        "type": "function",
        "z": "54b75e119ba9be7c",
        "g": "fdb5e2deebdb1ce9",
        "name": "Prepare READ?",
        "func": "msg.payload = 'READ?\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 320,
        "wires": [
            [
                "7520bed71846b68a"
            ]
        ]
    },
    {
        "id": "717abec631cea7b9",
        "type": "comment",
        "z": "54b75e119ba9be7c",
        "g": "fdb5e2deebdb1ce9",
        "name": "Måling 1",
        "info": "",
        "x": 1300,
        "y": 160,
        "wires": []
    },
    {
        "id": "ad5c8ac90358e85a",
        "type": "inject",
        "z": "54b75e119ba9be7c",
        "g": "cfd112f98cdfcb1e",
        "name": "Prepere 4W",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 330,
        "y": 480,
        "wires": [
            [
                "41f7264902fe5174",
                "be5355b62d86d28f"
            ]
        ]
    },
    {
        "id": "41f7264902fe5174",
        "type": "function",
        "z": "54b75e119ba9be7c",
        "g": "cfd112f98cdfcb1e",
        "name": "Prepare CONF:FRES",
        "func": "msg.payload = 'CONF:FRES AUTO\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 480,
        "wires": [
            [
                "92f543bbf30b2830"
            ]
        ]
    },
    {
        "id": "92f543bbf30b2830",
        "type": "link out",
        "z": "54b75e119ba9be7c",
        "g": "cfd112f98cdfcb1e",
        "name": "Multimeter Ut 2",
        "mode": "link",
        "links": [
            "155f7235381515cc"
        ],
        "x": 965,
        "y": 480,
        "wires": []
    },
    {
        "id": "930e49c5ead1d2af",
        "type": "link in",
        "z": "54b75e119ba9be7c",
        "g": "cfd112f98cdfcb1e",
        "name": "Start 2.Måling",
        "links": [
            "8956ff124892fd81"
        ],
        "x": 275,
        "y": 420,
        "wires": [
            [
                "41f7264902fe5174",
                "be5355b62d86d28f"
            ]
        ]
    },
    {
        "id": "be5355b62d86d28f",
        "type": "trigger",
        "z": "54b75e119ba9be7c",
        "g": "cfd112f98cdfcb1e",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 440,
        "y": 540,
        "wires": [
            [
                "04071cc85e38a233",
                "a36fb7ee6c3803e8"
            ]
        ]
    },
    {
        "id": "04071cc85e38a233",
        "type": "function",
        "z": "54b75e119ba9be7c",
        "g": "cfd112f98cdfcb1e",
        "name": "Prepare INIT",
        "func": "msg.payload += 'INIT\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 540,
        "wires": [
            [
                "92f543bbf30b2830"
            ]
        ]
    },
    {
        "id": "a36fb7ee6c3803e8",
        "type": "trigger",
        "z": "54b75e119ba9be7c",
        "g": "cfd112f98cdfcb1e",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 580,
        "y": 620,
        "wires": [
            [
                "6f1d6cc41843c54a"
            ]
        ]
    },
    {
        "id": "6f1d6cc41843c54a",
        "type": "function",
        "z": "54b75e119ba9be7c",
        "g": "cfd112f98cdfcb1e",
        "name": "Prepare READ?",
        "func": "msg.payload = 'READ?\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 620,
        "wires": [
            [
                "92f543bbf30b2830"
            ]
        ]
    },
    {
        "id": "c8c79540faa280f6",
        "type": "comment",
        "z": "54b75e119ba9be7c",
        "g": "cfd112f98cdfcb1e",
        "name": "Måling 2",
        "info": "",
        "x": 720,
        "y": 420,
        "wires": []
    },
    {
        "id": "ddd4596656ab1f44",
        "type": "inject",
        "z": "54b75e119ba9be7c",
        "g": "7987c16faceac8eb",
        "name": "Prepere 4W",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 330,
        "y": 780,
        "wires": [
            [
                "f7e6cd6e548a336d",
                "74b3160efcf194e5"
            ]
        ]
    },
    {
        "id": "f7e6cd6e548a336d",
        "type": "function",
        "z": "54b75e119ba9be7c",
        "g": "7987c16faceac8eb",
        "name": "Prepare CONF:FRES",
        "func": "msg.payload = 'CONF:FRES AUTO\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 780,
        "wires": [
            [
                "b5c0f09090a1aac0"
            ]
        ]
    },
    {
        "id": "b5c0f09090a1aac0",
        "type": "link out",
        "z": "54b75e119ba9be7c",
        "g": "7987c16faceac8eb",
        "name": "Multimeter Ut 3",
        "mode": "link",
        "links": [
            "4d5ae259a222f84b"
        ],
        "x": 965,
        "y": 780,
        "wires": []
    },
    {
        "id": "4fe83af50843c195",
        "type": "link in",
        "z": "54b75e119ba9be7c",
        "g": "7987c16faceac8eb",
        "name": "Start 3.Måling",
        "links": [
            "7c8a27f82b5ec0ac"
        ],
        "x": 265,
        "y": 720,
        "wires": [
            [
                "f7e6cd6e548a336d",
                "74b3160efcf194e5"
            ]
        ]
    },
    {
        "id": "74b3160efcf194e5",
        "type": "trigger",
        "z": "54b75e119ba9be7c",
        "g": "7987c16faceac8eb",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "500",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 460,
        "y": 840,
        "wires": [
            [
                "8ae4c8dac4526557",
                "556324975731b319"
            ]
        ]
    },
    {
        "id": "8ae4c8dac4526557",
        "type": "function",
        "z": "54b75e119ba9be7c",
        "g": "7987c16faceac8eb",
        "name": "Prepare INIT",
        "func": "msg.payload += 'INIT\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 840,
        "wires": [
            [
                "b5c0f09090a1aac0"
            ]
        ]
    },
    {
        "id": "556324975731b319",
        "type": "trigger",
        "z": "54b75e119ba9be7c",
        "g": "7987c16faceac8eb",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 580,
        "y": 920,
        "wires": [
            [
                "3fa1c7acb83ec764"
            ]
        ]
    },
    {
        "id": "3fa1c7acb83ec764",
        "type": "function",
        "z": "54b75e119ba9be7c",
        "g": "7987c16faceac8eb",
        "name": "Prepare READ?",
        "func": "msg.payload = 'READ?\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 920,
        "wires": [
            [
                "b5c0f09090a1aac0"
            ]
        ]
    },
    {
        "id": "3b44d1f51b651f4a",
        "type": "comment",
        "z": "54b75e119ba9be7c",
        "g": "7987c16faceac8eb",
        "name": "Måling 3",
        "info": "",
        "x": 720,
        "y": 720,
        "wires": []
    },
    {
        "id": "b1c1fdb1283f6c86",
        "type": "trigger",
        "z": "54b75e119ba9be7c",
        "g": "fdb5e2deebdb1ce9",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 410,
        "y": 100,
        "wires": [
            [
                "564b6d90eb9e8bc7"
            ]
        ]
    },
    {
        "id": "9071fc1cecdde6b6",
        "type": "inject",
        "z": "54b75e119ba9be7c",
        "g": "fdb5e2deebdb1ce9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 300,
        "wires": [
            [
                "dc13ef794d6949f2"
            ]
        ]
    },
    {
        "id": "b908419e119dbab2",
        "type": "inject",
        "z": "54b75e119ba9be7c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 370,
        "y": 1080,
        "wires": [
            [
                "ae39a527bad07622",
                "9c5cf495e387f020"
            ]
        ]
    },
    {
        "id": "731ea39badd6ae62",
        "type": "inject",
        "z": "54b75e119ba9be7c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 370,
        "y": 1140,
        "wires": [
            [
                "ae39a527bad07622",
                "9c5cf495e387f020"
            ]
        ]
    },
    {
        "id": "ec0f281c9f305240",
        "type": "function",
        "z": "54b75e119ba9be7c",
        "name": "Prepare *RST",
        "func": "msg.payload = '*RST\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1240,
        "wires": [
            [
                "422c8f8af79fdbc1"
            ]
        ]
    },
    {
        "id": "422c8f8af79fdbc1",
        "type": "link out",
        "z": "54b75e119ba9be7c",
        "name": "Standar komandoer",
        "mode": "link",
        "links": [
            "f76b6ff9166da2c3"
        ],
        "x": 1085,
        "y": 1240,
        "wires": []
    },
    {
        "id": "c62ada75abb108fe",
        "type": "function",
        "z": "54b75e119ba9be7c",
        "name": "Prepare CAL",
        "func": "msg.payload = 'CALC:FUNC REL\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1020,
        "wires": [
            [
                "422c8f8af79fdbc1"
            ]
        ]
    },
    {
        "id": "251a3b1a49d0a002",
        "type": "trigger",
        "z": "54b75e119ba9be7c",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 810,
        "y": 1020,
        "wires": [
            [
                "c62ada75abb108fe",
                "535acdc22b8c8e90"
            ]
        ]
    },
    {
        "id": "a3ac9137356d3d1d",
        "type": "function",
        "z": "54b75e119ba9be7c",
        "name": "Prepare STAT ON",
        "func": "msg.payload = 'CALC:STAT ON\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1060,
        "wires": [
            [
                "422c8f8af79fdbc1"
            ]
        ]
    },
    {
        "id": "535acdc22b8c8e90",
        "type": "trigger",
        "z": "54b75e119ba9be7c",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 840,
        "y": 1060,
        "wires": [
            [
                "a3ac9137356d3d1d"
            ]
        ]
    },
    {
        "id": "8d2baa0102da0357",
        "type": "function",
        "z": "54b75e119ba9be7c",
        "name": "Prepare STAT OFF",
        "func": "msg.payload = 'CALC:STAT OFF\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1180,
        "wires": [
            [
                "422c8f8af79fdbc1"
            ]
        ]
    },
    {
        "id": "ba0bcb9eb1de8fd0",
        "type": "inject",
        "z": "54b75e119ba9be7c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1260,
        "wires": [
            [
                "ec0f281c9f305240"
            ]
        ]
    },
    {
        "id": "0fba96270f74fab8",
        "type": "link out",
        "z": "54b75e119ba9be7c",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "989c8683ce02ad31"
        ],
        "x": 665,
        "y": 1120,
        "wires": []
    },
    {
        "id": "ae39a527bad07622",
        "type": "digital output",
        "z": "54b75e119ba9be7c",
        "module": "2",
        "channel": "1",
        "name": "DO1",
        "x": 530,
        "y": 1080,
        "wires": [
            [
                "0fba96270f74fab8"
            ]
        ]
    },
    {
        "id": "9c5cf495e387f020",
        "type": "digital output",
        "z": "54b75e119ba9be7c",
        "module": "2",
        "channel": "3",
        "name": "DO3",
        "x": 530,
        "y": 1140,
        "wires": [
            [
                "0fba96270f74fab8"
            ]
        ]
    },
    {
        "id": "760558de6ac9cf20",
        "type": "trigger",
        "z": "be1c897ac7845326",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 400,
        "y": 320,
        "wires": [
            [
                "5ba1ab478490bd1c",
                "3c3d9beac058f88b"
            ]
        ]
    },
    {
        "id": "5ba1ab478490bd1c",
        "type": "function",
        "z": "be1c897ac7845326",
        "name": "Sett testspenning",
        "func": "var voltage = global.get(\"ir_input_voltage\") || 1000; // standard 1000 V hvis ikke definert\nvar testVoltage = voltage / 1000; // konverter til kV\n\nnode.log(\"IR Testspenning: \" + testVoltage + \" kV\");\n\nmsg.payload = \"MANU:IR:VOLT \" + testVoltage + \"\\n\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 320,
        "wires": [
            [
                "f2be366628fd8f9a"
            ]
        ]
    },
    {
        "id": "af31d5708b863f6a",
        "type": "function",
        "z": "be1c897ac7845326",
        "name": "Sett LO SET motstandsgrense",
        "func": "// Hent verdi fra global kontekst\nvar mode = global.get(\"test_produksjon\") || \"test\"; // Standardverdi er \"test\"\n\n// Sett loResistance basert på global kontekst\nvar loResistance = (mode === \"production\") ? 10 : 2; // i MΩ\n\n// Opprett payload\nmsg.payload = \"MANU:IR:RLOS \" + loResistance + \"\\n\";\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 440,
        "wires": [
            [
                "f2be366628fd8f9a"
            ]
        ]
    },
    {
        "id": "33ed0f98ad655135",
        "type": "link in",
        "z": "be1c897ac7845326",
        "name": "Kjør IR",
        "links": [
            "52a28a71be283246"
        ],
        "x": 375,
        "y": 80,
        "wires": [
            [
                "2187eb20950fae96"
            ]
        ]
    },
    {
        "id": "439c1d02c1c93f69",
        "type": "link out",
        "z": "be1c897ac7845326",
        "name": "link out 15",
        "mode": "link",
        "links": [
            "72458ed980ac314b"
        ],
        "x": 1295,
        "y": 200,
        "wires": []
    },
    {
        "id": "ir-start",
        "type": "function",
        "z": "be1c897ac7845326",
        "name": "Start IR Test",
        "func": "msg.payload = 'FUNC:TEST ON\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 720,
        "wires": [
            [
                "f2be366628fd8f9a",
                "259ef73171afa0fc"
            ]
        ]
    },
    {
        "id": "1e695d82bb424628",
        "type": "function",
        "z": "be1c897ac7845326",
        "name": "Sett testmodus til IR",
        "func": "msg.payload = \"MANU:EDIT:MODE IR\\n\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 260,
        "wires": [
            [
                "f2be366628fd8f9a"
            ]
        ]
    },
    {
        "id": "d26e767683158342",
        "type": "function",
        "z": "be1c897ac7845326",
        "name": "Sett testtid",
        "func": "var testTime = 2.0; // i sekunder\nmsg.payload = \"MANU:IR:TTIM \" + testTime + \"\\n\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 500,
        "wires": [
            [
                "f2be366628fd8f9a"
            ]
        ]
    },
    {
        "id": "c0609d20b1fb9598",
        "type": "function",
        "z": "be1c897ac7845326",
        "name": "Sett referanseverdi",
        "func": "// Hent verdi fra global kontekst\nvar mode = global.get(\"test_produksjon\") || \"test\";\n\n// Hent dummy-verdien fra global kontekst\nvar dummy = global.get(\"dummy\");\n\n// Sett refValue basert på betingelsene:\n// Hvis \"test_produksjon\" er \"production\" eller \"dummy\" er \"Ingen\", settes refValue til 9999.\nvar refValue = (mode === \"production\" || dummy === \"Ingen\") ? 999 : 1; // i MΩ\n\n// Opprett payload\nmsg.payload = \"MANU:IR:REF \" + refValue + \"\\n\";\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 560,
        "wires": [
            [
                "f2be366628fd8f9a"
            ]
        ]
    },
    {
        "id": "8d2a2d5884a345ba",
        "type": "function",
        "z": "be1c897ac7845326",
        "name": "Sende spørring for resultat",
        "func": "msg.payload = \"MEAS?\\n\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 780,
        "wires": [
            [
                "f2be366628fd8f9a"
            ]
        ]
    },
    {
        "id": "1cebdf7c3d29a5f7",
        "type": "trigger",
        "z": "be1c897ac7845326",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 400,
        "y": 440,
        "wires": [
            [
                "af31d5708b863f6a",
                "20f5355fbcf295f1"
            ]
        ]
    },
    {
        "id": "20f5355fbcf295f1",
        "type": "trigger",
        "z": "be1c897ac7845326",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 400,
        "y": 500,
        "wires": [
            [
                "d26e767683158342",
                "a0665c14b0d82852"
            ]
        ]
    },
    {
        "id": "a0665c14b0d82852",
        "type": "trigger",
        "z": "be1c897ac7845326",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 400,
        "y": 560,
        "wires": [
            [
                "c0609d20b1fb9598",
                "1e55a5d044b01427"
            ]
        ]
    },
    {
        "id": "e3a8b277a0b0c582",
        "type": "trigger",
        "z": "be1c897ac7845326",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 400,
        "y": 720,
        "wires": [
            [
                "ir-start",
                "b5effa6b5f754ced"
            ]
        ]
    },
    {
        "id": "b5effa6b5f754ced",
        "type": "trigger",
        "z": "be1c897ac7845326",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 380,
        "y": 780,
        "wires": [
            [
                "8d2a2d5884a345ba"
            ]
        ]
    },
    {
        "id": "2187eb20950fae96",
        "type": "function",
        "z": "be1c897ac7845326",
        "name": "Nullstill gammle meldinger",
        "func": "msg.payload = '*CLS\\n';\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 140,
        "wires": [
            [
                "1ce64bcd1256e3b5",
                "f2be366628fd8f9a"
            ]
        ]
    },
    {
        "id": "711f80e2e02870d1",
        "type": "trigger",
        "z": "be1c897ac7845326",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 400,
        "y": 260,
        "wires": [
            [
                "1e695d82bb424628",
                "760558de6ac9cf20"
            ]
        ]
    },
    {
        "id": "50ed9bc03cdac94f",
        "type": "inject",
        "z": "be1c897ac7845326",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 780,
        "wires": [
            [
                "b5effa6b5f754ced"
            ]
        ]
    },
    {
        "id": "7c050c6af1157c1f",
        "type": "inject",
        "z": "be1c897ac7845326",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 140,
        "wires": [
            [
                "2187eb20950fae96",
                "1ce64bcd1256e3b5"
            ]
        ]
    },
    {
        "id": "8f07a4e84df18262",
        "type": "function",
        "z": "be1c897ac7845326",
        "name": "Sett HI SET motstandsgrense",
        "func": "var HiResistance = 9999; // eksempelverdi i MΩ\nmsg.payload = \"MANU:IR:RHIS \" + HiResistance + \"\\n\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 380,
        "wires": [
            [
                "f2be366628fd8f9a"
            ]
        ]
    },
    {
        "id": "3c3d9beac058f88b",
        "type": "trigger",
        "z": "be1c897ac7845326",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 400,
        "y": 380,
        "wires": [
            [
                "8f07a4e84df18262",
                "1cebdf7c3d29a5f7"
            ]
        ]
    },
    {
        "id": "1c7261ff476ab9c0",
        "type": "function",
        "z": "be1c897ac7845326",
        "name": "ramp tid",
        "func": "msg.payload = \"MANU:RTIM 0.5\\n\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 200,
        "wires": [
            [
                "f2be366628fd8f9a"
            ]
        ]
    },
    {
        "id": "1ce64bcd1256e3b5",
        "type": "trigger",
        "z": "be1c897ac7845326",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "300",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 400,
        "y": 200,
        "wires": [
            [
                "1c7261ff476ab9c0",
                "711f80e2e02870d1"
            ]
        ]
    },
    {
        "id": "e69df45fab49c8dc",
        "type": "link out",
        "z": "be1c897ac7845326",
        "name": "IR Start",
        "mode": "link",
        "links": [
            "adfd1e178c6af64e"
        ],
        "x": 1295,
        "y": 720,
        "wires": []
    },
    {
        "id": "259ef73171afa0fc",
        "type": "change",
        "z": "be1c897ac7845326",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "IR kjører",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 720,
        "wires": [
            [
                "e69df45fab49c8dc"
            ]
        ]
    },
    {
        "id": "796d181d0ff00200",
        "type": "function",
        "z": "be1c897ac7845326",
        "name": "Sende save",
        "func": "msg.payload = \"EDIT:SAVE\\n\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 640,
        "wires": [
            [
                "f2be366628fd8f9a"
            ]
        ]
    },
    {
        "id": "1e55a5d044b01427",
        "type": "trigger",
        "z": "be1c897ac7845326",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 400,
        "y": 640,
        "wires": [
            [
                "e3a8b277a0b0c582",
                "796d181d0ff00200"
            ]
        ]
    },
    {
        "id": "4ddd4bd706b06909",
        "type": "function",
        "z": "8bb246f336d46cee",
        "name": "Sett GB teststrøm",
        "func": "msg.payload = \"MANU:GB:CURRent 10.00\\n\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 180,
        "wires": [
            [
                "d793493720b37add"
            ]
        ]
    },
    {
        "id": "87213d3fdd10a709",
        "type": "function",
        "z": "8bb246f336d46cee",
        "name": "Start GB-testen",
        "func": "msg.payload = \"MANU:GB:START\\n\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 360,
        "wires": [
            [
                "d793493720b37add"
            ]
        ]
    },
    {
        "id": "d793493720b37add",
        "type": "link out",
        "z": "8bb246f336d46cee",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "36e8de507c2de478"
        ],
        "x": 1265,
        "y": 120,
        "wires": []
    },
    {
        "id": "230ae5010c121d79",
        "type": "link in",
        "z": "8bb246f336d46cee",
        "name": "Start GB",
        "links": [
            "f6b048048ec0196e"
        ],
        "x": 205,
        "y": 120,
        "wires": [
            [
                "082635794de55125",
                "0d553db6b27cbf1e"
            ]
        ]
    },
    {
        "id": "082635794de55125",
        "type": "function",
        "z": "8bb246f336d46cee",
        "name": "Sett GB modus til ON",
        "func": "msg.payload = \"MANU:GB:MODE ON\\n\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 120,
        "wires": [
            [
                "d793493720b37add"
            ]
        ]
    },
    {
        "id": "e4dde0ff9bd1d257",
        "type": "function",
        "z": "8bb246f336d46cee",
        "name": "Sett GB grense (LIM)",
        "func": "msg.payload = \"MANU:GB:LIM 150M\\n\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 240,
        "wires": [
            [
                "d793493720b37add"
            ]
        ]
    },
    {
        "id": "34018a680b0aaf85",
        "type": "function",
        "z": "8bb246f336d46cee",
        "name": "Sett GB testtid",
        "func": "msg.payload = \"MANU:GB:TTIMe 2\\n\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 300,
        "wires": [
            [
                "d793493720b37add"
            ]
        ]
    },
    {
        "id": "33adae995fd34869",
        "type": "function",
        "z": "8bb246f336d46cee",
        "name": "Sende spørring for resultat",
        "func": "msg.payload = \"MANU:GB:RES?\\n\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 420,
        "wires": [
            [
                "d793493720b37add"
            ]
        ]
    },
    {
        "id": "0d553db6b27cbf1e",
        "type": "trigger",
        "z": "8bb246f336d46cee",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 400,
        "y": 180,
        "wires": [
            [
                "4ddd4bd706b06909",
                "e4ef2ab151bba305"
            ]
        ]
    },
    {
        "id": "e4ef2ab151bba305",
        "type": "trigger",
        "z": "8bb246f336d46cee",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 400,
        "y": 240,
        "wires": [
            [
                "e4dde0ff9bd1d257",
                "198c55f2cad547bf"
            ]
        ]
    },
    {
        "id": "198c55f2cad547bf",
        "type": "trigger",
        "z": "8bb246f336d46cee",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 400,
        "y": 300,
        "wires": [
            [
                "34018a680b0aaf85",
                "1b79c241ead684e8"
            ]
        ]
    },
    {
        "id": "1b79c241ead684e8",
        "type": "trigger",
        "z": "8bb246f336d46cee",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 400,
        "y": 360,
        "wires": [
            [
                "87213d3fdd10a709",
                "4bff88b05fd0f281"
            ]
        ]
    },
    {
        "id": "4bff88b05fd0f281",
        "type": "trigger",
        "z": "8bb246f336d46cee",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 400,
        "y": 420,
        "wires": [
            [
                "33adae995fd34869"
            ]
        ]
    },
    {
        "id": "a51397dd546c9386",
        "type": "link out",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "998672e064af0926"
        ],
        "x": 1205,
        "y": 460,
        "wires": []
    },
    {
        "id": "327c882b17b04efd",
        "type": "link in",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "Kjør ACW",
        "links": [
            "0bbea7debdea2ef3"
        ],
        "x": 365,
        "y": 80,
        "wires": [
            [
                "10c929b8ac4468b1"
            ]
        ]
    },
    {
        "id": "0d41bf30347234ea",
        "type": "trigger",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 410,
        "y": 420,
        "wires": [
            [
                "1ea15b843f42c7ef"
            ]
        ]
    },
    {
        "id": "95f181c152e92318",
        "type": "trigger",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 410,
        "y": 600,
        "wires": [
            [
                "bd80abd43400e065"
            ]
        ]
    },
    {
        "id": "873233c2a1d5397e",
        "type": "function",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "konfigurasjonskommandoene for ACW test",
        "func": "msg.payload = \"*CLS\\nMANU:EDIT:MODE ACW\\n\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 240,
        "wires": [
            [
                "a51397dd546c9386",
                "81a8c338c59c29bd"
            ]
        ]
    },
    {
        "id": "bd80abd43400e065",
        "type": "function",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "testtidsinnstilling for ACW",
        "func": "// Hent testtid fra flow-konteksten\nvar testDuration = flow.get('acw_test_duration');\n\n// Sjekk om testDuration er definert og gyldig\nif (!testDuration || isNaN(testDuration) || testDuration <= 0) {\n    node.error(\"Feil: Ugyldig testtid lagret i flow!\");\n    return null;  // Stopp videre prosessering\n}\n\n// Formater testtid kommandoen til testutstyret\nmsg.payload = `MANU:ACW:TTIMe ${testDuration}\\n`;\n\nnode.log(`Test Duration Set to: ${testDuration} sec`);\n\n// Returner meldingen med riktig kommando\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 600,
        "wires": [
            [
                "7cd5ce1db77a5fae",
                "a51397dd546c9386"
            ]
        ]
    },
    {
        "id": "1ea15b843f42c7ef",
        "type": "function",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "høy grenseverdi for ACW",
        "func": "var highCurrentLimit = flow.get('acw_current_high');\nif (!highCurrentLimit || isNaN(highCurrentLimit)) {\n    node.error(\"Feil: 'acw_current_high' er ikke satt eller ugyldig!\");\n    return null;\n}\nmsg.payload = \"MANU:ACW:CHIS \" + highCurrentLimit + \"\\n\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 420,
        "wires": [
            [
                "a51397dd546c9386",
                "16f7a684a579e9f1"
            ]
        ]
    },
    {
        "id": "af7d2f5e80834c63",
        "type": "trigger",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 410,
        "y": 540,
        "wires": [
            [
                "b31d6d09fdc4932e"
            ]
        ]
    },
    {
        "id": "7cd5ce1db77a5fae",
        "type": "trigger",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 410,
        "y": 660,
        "wires": [
            [
                "7e31ab804749766f",
                "17c123b97d1bbf8f"
            ]
        ]
    },
    {
        "id": "9a20e276a37962e6",
        "type": "function",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "lav grenseverdi for ACW",
        "func": "// Hent grenseverdi for lekkasjestrøm fra flow-konteksten\nvar currentHigh = flow.get(\"acw_current_high\");\n\n// Sjekk at currentHigh er definert og gyldig, fallback til 0.05 mA hvis ikke satt\nif (!currentHigh || isNaN(currentHigh)) {\n    node.warn(\"ACW lekkasjestrømgrense ikke satt! Bruker standard 0.05 mA.\");\n    currentHigh = 0.05; // Standard fallback-verdi\n}\n\n// Logg verdiene\nnode.log(`Satt lekkasjestrømgrense: ${currentHigh} mA`);\n\n// Send kommando til instrumentet\nmsg.payload = `MANU:ACW:CLOS ${currentHigh}\\n`;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 480,
        "wires": [
            [
                "a51397dd546c9386",
                "af7d2f5e80834c63"
            ]
        ]
    },
    {
        "id": "b31d6d09fdc4932e",
        "type": "function",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "frekvensinnstilling for ACW",
        "func": "msg.payload = \"MANU:ACW:FREQ 50\\n\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 540,
        "wires": [
            [
                "a51397dd546c9386",
                "95f181c152e92318"
            ]
        ]
    },
    {
        "id": "7e31ab804749766f",
        "type": "function",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "Start ACW Test",
        "func": "msg.payload = \"FUNC:TEST ON\\n\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 660,
        "wires": [
            [
                "a51397dd546c9386",
                "0e05220f4646a38a"
            ]
        ]
    },
    {
        "id": "4a58c8c3a1a2af6b",
        "type": "trigger",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 410,
        "y": 360,
        "wires": [
            [
                "cc972f88a225448a"
            ]
        ]
    },
    {
        "id": "855798caca85c7f0",
        "type": "link in",
        "z": "0543e302ca10708e",
        "g": "e46d3a13a35e7b9b",
        "name": "Spenning",
        "links": [
            "95cb1693aa6d71de"
        ],
        "x": 285,
        "y": 1080,
        "wires": [
            [
                "54ebb3e3151ed289"
            ]
        ]
    },
    {
        "id": "9f8e6f557429ad66",
        "type": "link in",
        "z": "0543e302ca10708e",
        "g": "e46d3a13a35e7b9b",
        "name": "Effekt",
        "links": [
            "b0d24c3b31297dbe"
        ],
        "x": 285,
        "y": 1140,
        "wires": [
            [
                "39589b3267376980"
            ]
        ]
    },
    {
        "id": "54ebb3e3151ed289",
        "type": "function",
        "z": "0543e302ca10708e",
        "g": "e46d3a13a35e7b9b",
        "name": "Lagrer spenningen i flow-kontekst",
        "func": "var voltageStr = msg.payload;\n\n// Sjekker at msg.payload er en streng før vi prøver å splitte\nif (typeof voltageStr !== 'string') {\n    node.warn(\"Ugyldig payload-type: \" + typeof voltageStr);\n    return null;\n}\n\n// Henter første del av strengen og konverterer til tall\nvar voltage = parseFloat(voltageStr.split(' ')[0]);\n\n// Sjekker om konverteringen var vellykket\nif (isNaN(voltage)) {\n    node.warn(\"Kunne ikke konvertere spenning: \" + voltageStr);\n    return null;\n}\n\n// Lagre kun gyldige verdier i flow- og global-kontekst\nflow.set('input_voltage', voltage);\nglobal.set('input_voltage', voltage);\n\nnode.log(\"Spenning lagret: \" + voltage + \" V\");  // For debugging\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "e5552059f011da22",
        "type": "function",
        "z": "0543e302ca10708e",
        "g": "e46d3a13a35e7b9b",
        "name": "Lagrer effekten i flow-kontekst og beregner strømmen",
        "func": "// Logg innkommende payload for feilsøking\nnode.log(`Full payload mottatt: ${JSON.stringify(msg.payload)}`);\n\n// Sjekk at msg.payload er et objekt\nif (typeof msg.payload !== \"object\" || msg.payload === null) {\n    node.error(\"Feil: 'msg.payload' er ikke et objekt!\");\n    return null;\n}\n\n// Hent effektverdi fra payload og fjern enhet\nvar powerStr = msg.payload[\"data inn\"] ? msg.payload[\"data inn\"].toString().trim() : null;\n\nif (!powerStr || powerStr === \"\") {\n    node.error(\"Feil: 'data inn' mangler eller er tom!\");\n    return null;\n}\n\nvar power = parseFloat(powerStr.split(' ')[0]);\n\nif (isNaN(power) || power <= 0) {\n    node.error(`Feil: Ugyldig effektverdi mottatt (${powerStr})!`);\n    return null;\n}\n\n// Hent inputspenning (driftsspenning) fra flow-kontekst\nvar inputVoltage = flow.get('input_voltage');\n\nif (!inputVoltage || isNaN(inputVoltage)) {\n    node.error(\"Feil: 'input_voltage' er ikke satt eller ugyldig!\");\n    return null;\n}\n\n// Sjekk om ACW 60sek er aktivert fra global kontekst\nvar acw60sek = global.get('acw_60sek_resultat') === true;\n\n// Sett testparametre\nvar testDuration = acw60sek ? 60.0 : 1.0;\nvar testVoltage = (inputVoltage * 1.2) + 1200;\nvar testResult = \"Målt lekkasjestrøm vil avgjøre godkjenning\";\n\n// Grenseverdier for lekkasjestrøm\nvar currentLow = 0;\nvar currentHigh = (inputVoltage <= 250) ? 0.50 : 0.75;\n\n// Lagre verdier i flow-kontekst\nflow.set('acw_current_low', currentLow);\nflow.set('acw_current_high', currentHigh);\nflow.set('acw_voltage', testVoltage / 1000);\nflow.set('acw_test_duration', testDuration);\n\n// Logg info\nnode.log(`ACW 60sek modus: ${acw60sek ? \"JA (60s)\" : \"NEI (1s)\"}`);\nnode.log(`Test Voltage: ${testVoltage / 1000} kV`);\nnode.log(`Strømgrense: ${currentHigh} mA`);\nnode.log(`Test Duration: ${testDuration} sek`);\n\nmsg.payload = [\n    `MANU:ACW:TTIMe ${testDuration}`,\n    `MANU:ACW:VOLTage ${testVoltage / 1200}`,\n    `MANU:ACW:RESULT ${testResult}`\n];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "3666c8b2ab21afd4",
        "type": "function",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "Sett volt",
        "func": "// Hent testspenning fra flow-konteksten\nvar voltage = flow.get(\"acw_voltage\");\n\n// Sjekk at voltage er definert og gyldig, fallback til 2000V hvis ikke satt\nif (!voltage || isNaN(voltage)) {\n    node.warn(\"ACW testspenning ikke satt! Bruker standard 2000V.\");\n    voltage = 2000; // Standard fallback-verdi\n}\n\n// Konverter til kV\nvar voltageKV = voltage;\n\n// Logg verdiene\nnode.log(`Satt testspenning: ${voltageKV} kV`);\n\n// Send spenning til instrumentet\nmsg.payload = `MANU:ACW:VOLT ${voltageKV}\\n`;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 300,
        "wires": [
            [
                "a51397dd546c9386",
                "4a58c8c3a1a2af6b"
            ]
        ]
    },
    {
        "id": "16f7a684a579e9f1",
        "type": "trigger",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 410,
        "y": 480,
        "wires": [
            [
                "9a20e276a37962e6"
            ]
        ]
    },
    {
        "id": "81a8c338c59c29bd",
        "type": "trigger",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 410,
        "y": 300,
        "wires": [
            [
                "3666c8b2ab21afd4"
            ]
        ]
    },
    {
        "id": "5ddd5a9b6a42ec94",
        "type": "link out",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "ACW Start",
        "mode": "link",
        "links": [
            "eac229924cfac1af"
        ],
        "x": 1205,
        "y": 660,
        "wires": []
    },
    {
        "id": "0e05220f4646a38a",
        "type": "change",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ACW kjører",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 660,
        "wires": [
            [
                "5ddd5a9b6a42ec94"
            ]
        ]
    },
    {
        "id": "b387f47de5f33114",
        "type": "link in",
        "z": "0543e302ca10708e",
        "g": "e46d3a13a35e7b9b",
        "name": "link in 17",
        "links": [
            "811a74cd7f11cb52"
        ],
        "x": 285,
        "y": 1180,
        "wires": [
            [
                "aaaef4d4e1a45923"
            ]
        ]
    },
    {
        "id": "39589b3267376980",
        "type": "change",
        "z": "0543e302ca10708e",
        "g": "e46d3a13a35e7b9b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "data inn",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 1140,
        "wires": [
            [
                "aaaef4d4e1a45923"
            ]
        ]
    },
    {
        "id": "aaaef4d4e1a45923",
        "type": "join",
        "z": "0543e302ca10708e",
        "g": "e46d3a13a35e7b9b",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 580,
        "y": 1160,
        "wires": [
            [
                "e5552059f011da22"
            ]
        ]
    },
    {
        "id": "cc972f88a225448a",
        "type": "function",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "Sett testtid (ACW)",
        "func": "var testDuration = parseFloat(flow.get('acw_test_duration')) || 1.0;  // 1 sekund som standard\nmsg.payload = \"MANU:ACW:TTIM \" + testDuration + \"\\n\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 360,
        "wires": [
            [
                "0d41bf30347234ea"
            ]
        ]
    },
    {
        "id": "fa26b97579f173e9",
        "type": "inject",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 210,
        "y": 120,
        "wires": [
            [
                "10c929b8ac4468b1"
            ]
        ]
    },
    {
        "id": "8afbf2fd8c6efa4c",
        "type": "trigger",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 700,
        "y": 740,
        "wires": [
            [
                "5c600e8116a540cb"
            ]
        ]
    },
    {
        "id": "5c600e8116a540cb",
        "type": "function",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "Sende spørring for resultat",
        "func": "msg.payload = \"MEAS?\\n\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 760,
        "wires": [
            [
                "a51397dd546c9386"
            ]
        ]
    },
    {
        "id": "3a20557f0ac65a4a",
        "type": "function",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "ramp tid",
        "func": "msg.payload = \"MANU:RTIM 1\\n\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 180,
        "wires": [
            [
                "1aa0a07e23c2288e",
                "a51397dd546c9386"
            ]
        ]
    },
    {
        "id": "aef23335f3e40154",
        "type": "trigger",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "300",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 440,
        "y": 180,
        "wires": [
            [
                "3a20557f0ac65a4a"
            ]
        ]
    },
    {
        "id": "10c929b8ac4468b1",
        "type": "function",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "Nullstill gammle meldinger",
        "func": "msg.payload = \"*CLS\\n\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 120,
        "wires": [
            [
                "aef23335f3e40154"
            ]
        ]
    },
    {
        "id": "1aa0a07e23c2288e",
        "type": "trigger",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "100",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 420,
        "y": 240,
        "wires": [
            [
                "873233c2a1d5397e"
            ]
        ]
    },
    {
        "id": "17c123b97d1bbf8f",
        "type": "function",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "Sjekk testmodus og send til riktig utgang",
        "func": "// Hent ACW 60sek status fra global kontekst\nvar acw60sek = global.get(\"acw_60sek_resultat\") === true;\n\n// Hvis true → send til utgang 2, hvis false → send til utgang 1\nif (acw60sek) {\n    return [null, msg];  // utgang 2\n} else {\n    return [msg, null];  // utgang 1\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 760,
        "wires": [
            [
                "8afbf2fd8c6efa4c"
            ],
            [
                "7b2e65df2d8360dd"
            ]
        ]
    },
    {
        "id": "7b2e65df2d8360dd",
        "type": "trigger",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "61",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 710,
        "y": 780,
        "wires": [
            [
                "5c600e8116a540cb"
            ]
        ]
    },
    {
        "id": "8a3b4a7e69818670",
        "type": "inject",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 960,
        "y": 840,
        "wires": [
            [
                "5c600e8116a540cb"
            ]
        ]
    },
    {
        "id": "9bf0233b8ddc50a5",
        "type": "trigger",
        "z": "0543e302ca10708e",
        "g": "93e76f916187144f",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 720,
        "y": 840,
        "wires": [
            [
                "5c600e8116a540cb"
            ]
        ]
    },
    {
        "id": "db98bccc7593112f",
        "type": "inject",
        "z": "0543e302ca10708e",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 210,
        "y": 1360,
        "wires": [
            [
                "f0d4efe16c21dc54"
            ]
        ]
    },
    {
        "id": "22a0a6c4bc94a933",
        "type": "function",
        "z": "0543e302ca10708e",
        "name": "function 1",
        "func": "// Forventet input: msg.payload = true eller false\n\n// Lagre resultatet i global kontekst\nglobal.set('acw_60sek_resultat', msg.payload);\n\n// Du kan logge for feilsøking hvis ønskelig\nnode.status({fill: \"blue\", shape: \"dot\", text: \"ACW 60sek: \" + msg.payload});\n\nreturn msg; // Send videre om ønskelig, eller return null hvis ikke\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "f8eb2d263d196278",
        "type": "link in",
        "z": "0543e302ca10708e",
        "name": "Resett ACW 60 sek",
        "links": [
            "6230aa4c6c4804b8"
        ],
        "x": 105,
        "y": 1300,
        "wires": [
            [
                "6e27d0110ec6acef"
            ]
        ]
    },
    {
        "id": "6e27d0110ec6acef",
        "type": "change",
        "z": "0543e302ca10708e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 1300,
        "wires": [
            [
                "f0d4efe16c21dc54"
            ]
        ]
    },
    {
        "id": "f0d4efe16c21dc54",
        "type": "ui_switch",
        "z": "0543e302ca10708e",
        "name": "ACW 60sek ",
        "label": "ACW 60sek ",
        "tooltip": "",
        "group": "18cc9cb264bf256a",
        "order": 63,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 430,
        "y": 1360,
        "wires": [
            [
                "22a0a6c4bc94a933"
            ]
        ]
    },
    {
        "id": "906add3b7599a294",
        "type": "change",
        "z": "a3312be352519813",
        "g": "a15ef975fcb81451",
        "name": "Set Topic to Resistance",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "resistance",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 200,
        "wires": [
            [
                "93a5655aaa0febb0",
                "23af95cc68cb0e11"
            ]
        ]
    },
    {
        "id": "36a4fe96d06c3e2d",
        "type": "change",
        "z": "a3312be352519813",
        "g": "a15ef975fcb81451",
        "name": "Set Topic to Voltage",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "voltage",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 260,
        "wires": [
            [
                "93a5655aaa0febb0"
            ]
        ]
    },
    {
        "id": "93a5655aaa0febb0",
        "type": "join",
        "z": "a3312be352519813",
        "g": "a15ef975fcb81451",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": true,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 990,
        "y": 200,
        "wires": [
            [
                "c03fa05bf912f98a"
            ]
        ]
    },
    {
        "id": "c03fa05bf912f98a",
        "type": "function",
        "z": "a3312be352519813",
        "g": "a15ef975fcb81451",
        "name": "Calculate Power",
        "func": "// Hent motstand og spenning fra msg.payload\nlet resistanceValue = msg.payload.resistance; // Forventet 19.2317633\nlet voltageString = msg.payload.voltage; // Forventet \"24 V\"\n\n// Konverter spenningen fra streng til tall\nlet voltageValue = parseFloat(voltageString);\n\n// Beregn effekt (watt) med formel: V^2 / R\nlet power = Math.pow(voltageValue, 2) / resistanceValue;\n\n// Beregn strøm (ampere) ved å bruke Ohms lov: V / R\nlet current = voltageValue / resistanceValue;\n\n// Avrund verdiene til 3 desimaler\nresistanceValue = parseFloat(resistanceValue.toFixed(3));\nvoltageValue = parseFloat(voltageValue.toFixed(3));\npower = parseFloat(power.toFixed(3));\ncurrent = parseFloat(current.toFixed(3));\n\n// Lag separate meldinger for motstand, spenning, effekt og strøm med betegnelse\nlet msgResistance = { payload: resistanceValue + ' Ω', topic: 'resistance' };\nlet msgVoltage = { payload: voltageValue + ' V', topic: 'voltage' };\nlet msgPower = { payload: power + ' W', topic: 'power' };\nlet msgCurrent = { payload: current + ' A', topic: 'current' };\n\n// Lagre de beregnede verdiene i global kontekst med enhet for watt\nglobal.set(\"wattValue\", power + ' W');\nglobal.set(\"current\", current);\n\nreturn [msgResistance, msgVoltage, msgPower, msgCurrent];\n",
        "outputs": 4,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 200,
        "wires": [
            [],
            [],
            [
                "38db026eee5a5a62"
            ],
            [
                "974d8c81aaf73aad"
            ]
        ],
        "info": "Funksjonen mottar motstand og spenning fra en måling, og bruker disse til å:\r\n\r\nBeregne effekt (Watt) og strøm (Ampere)\r\n\r\nFormatere og sende ut verdier for visning eller videre bruk\r\n\r\nLagre effekt og strøm globalt for andre noder\r\n\r\n📥 Forventet innkommende data (msg.payload)\r\njson\r\nCopy\r\nEdit\r\n{\r\n  \"resistance\": 19.2317633,  // Målt motstand i ohm (Ω)\r\n  \"voltage\": \"24 V\"          // Påtrykt spenning som streng (f.eks. \"24 V\")\r\n}\r\n🔍 Stegvis forklaring\r\n1. Hent verdier fra meldingen\r\njs\r\nCopy\r\nEdit\r\nlet resistanceValue = msg.payload.resistance;\r\nlet voltageString = msg.payload.voltage;\r\nLeser motstand som tall.\r\n\r\nLeser spenning som streng (må konverteres).\r\n\r\n2. Konverter spenningen til tall\r\njs\r\nCopy\r\nEdit\r\nlet voltageValue = parseFloat(voltageString);\r\nFjerner \" V\" og gjør om til tall, f.eks. \"24 V\" → 24.\r\n\r\n3. Beregn effekt og strøm\r\njs\r\nCopy\r\nEdit\r\nlet power = Math.pow(voltageValue, 2) / resistanceValue;\r\nlet current = voltageValue / resistanceValue;\r\nEffekt (Watt): P = V² / R\r\n\r\nStrøm (Ampere): I = V / R\r\n\r\n4. Avrund alle verdier til 3 desimaler\r\njs\r\nCopy\r\nEdit\r\nresistanceValue = parseFloat(resistanceValue.toFixed(3));\r\nGjør tallene mer lesbare ved å vise bare 3 desimaler.\r\n\r\n5. Lag meldinger for utganger\r\njs\r\nCopy\r\nEdit\r\nlet msgResistance = { payload: \"19.232 Ω\", topic: \"resistance\" };\r\nlet msgVoltage    = { payload: \"24.000 V\", topic: \"voltage\" };\r\nlet msgPower      = { payload: \"29.950 W\", topic: \"power\" };\r\nlet msgCurrent    = { payload: \"1.248 A\", topic: \"current\" };\r\nFire meldinger, én for hver målt/beregnet verdi.\r\n\r\ntopic brukes for å skille dem i videre behandling.\r\n\r\n6. Lagre til global kontekst\r\njs\r\nCopy\r\nEdit\r\nglobal.set(\"wattValue\", \"29.950 W\");\r\nglobal.set(\"current\", 1.248);\r\nLagrer effekt (som tekst) og strøm (som tall) globalt, slik at andre noder kan hente dem.\r\n\r\n7. Send data til fire utganger\r\njs\r\nCopy\r\nEdit\r\nreturn [msgResistance, msgVoltage, msgPower, msgCurrent];\r\nÉn verdi per utgang. Dette gjør det lett å koble til ulike visualiseringer.\r\n\r\n📤 Utganger\r\nUtgang\tInnhold\tEksempelverdi\r\n1\tMotstand (Ω)\t19.232 Ω\r\n2\tSpenning (V)\t24.000 V\r\n3\tEffekt (W)\t29.950 W\r\n4\tStrøm (A)\t1.248 A\r\n📘 Oppsummering\r\nDette er en enkel og presis funksjon for å:\r\n\r\nBeregne strøm og effekt fra målinger.\r\n\r\nFormatere verdier med enhet.\r\n\r\nGjøre dem tilgjengelig for dashbord eller logging.\r\n\r\n"
    },
    {
        "id": "e7c1b2d079ccae32",
        "type": "link in",
        "z": "a3312be352519813",
        "g": "a15ef975fcb81451",
        "name": "Målt verdi 1",
        "links": [
            "41f8ef400b4514c6"
        ],
        "x": 105,
        "y": 200,
        "wires": [
            [
                "73a6c4103d4ad727"
            ]
        ]
    },
    {
        "id": "73a6c4103d4ad727",
        "type": "function",
        "z": "a3312be352519813",
        "g": "a15ef975fcb81451",
        "name": "Målt motstand på ellement",
        "func": "// Feilmargin basert på historiske målinger\nconst RESISTANCE_CORRECTION = 0.0005;  // Korrigering for lav målt motstand\n\n// Sjekk først om meldingen indikerer at multimeteret ikke svarer\nif (msg.payload === \"Multimeter svarer ikke\") {\n    return msg;  // Returner meldingen uendret\n}\n\n// Logg original payload for debugging\n//node.warn(\"Original payload: \" + msg.payload);\n\n// Konverter payload til numerisk verdi\nlet resistanceValue = Number(msg.payload); // Sikrer at det forblir et tall\n\n// Sjekk om verdien er gyldig\nif (isNaN(resistanceValue)) {\n    node.error(\"Payload inneholder ugyldig tallformat: \" + msg.payload, msg);\n    return null;\n}\n\n// Juster verdien uten å endre datatype\nlet correctedResistance = resistanceValue + RESISTANCE_CORRECTION;\n\n// Oppdater payload med den korrigerte verdien\nmsg.payload = correctedResistance; // Beholder som Number\n\n// Logg den korrigerte verdien for feilsøking\n//node.warn(\"Korrigert payload: \" + msg.payload);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 200,
        "wires": [
            [
                "906add3b7599a294"
            ]
        ]
    },
    {
        "id": "592a50d937add3e5",
        "type": "link in",
        "z": "a3312be352519813",
        "g": "9695cfc09f2c805b",
        "name": "Målt verdi 2",
        "links": [
            "29b993bf6b667c3c"
        ],
        "x": 895,
        "y": 680,
        "wires": [
            [
                "2d8c455f7e06867a"
            ]
        ]
    },
    {
        "id": "2d8c455f7e06867a",
        "type": "function",
        "z": "a3312be352519813",
        "g": "9695cfc09f2c805b",
        "name": "Motstand fase/GND",
        "func": "// Logg den innkommende payloaden for debugging\nnode.log(`RAW payload mottatt: ${msg.payload}`);\n\n// Sjekk først om meldingen indikerer at multimeteret ikke svarer\nif (msg.payload === \"Multimeter svarer ikke\") {\n    return [msg, null];  // Sender meldingen til utgang 1, ingen vurdering i utgang 2\n}\n\n// Fjern eventuelle ekstra linjeskift eller whitespace\nlet measurementStr = msg.payload.trim();\n\n// Konverter strengen til et tall\nlet resistance = parseFloat(measurementStr);\n\n// Sjekk om målingen er gyldig\nif (isNaN(resistance)) {\n    node.error(`Feil: 'payload' inneholder ikke et gyldig tall! Verdi: ${measurementStr}`, msg);\n    return [null, null]; // Stopp videre behandling\n}\n\n// Hent testmodus fra global kontekst (standard: production)\nvar testMode = global.get(\"test_produksjon\") || \"production\";\n\n// Bestem grenseverdien basert på testmodus\nlet limit = (testMode === \"test\") ? 1 : 10; // 1MΩ for test, 10MΩ for production\n\n// Formater målingen med riktige enheter: ohm, kΩ eller MΩ\nlet resistanceDisplay;\nif (resistance >= 9.9e+31) {\n    resistanceDisplay = \"∞ Ω\";\n} else if (resistance < 1e3) {\n    // Under 1 000 ohm - vises i ohm (avrundet til null desimaler)\n    resistanceDisplay = resistance.toFixed(0) + \" Ω\";\n} else if (resistance < 1e6) {\n    // Fra 1 000 til 1 000 000 ohm - vises i kiloohm (kΩ)\n    let resistanceKohm = resistance / 1_000;\n    resistanceDisplay = resistanceKohm.toFixed(3) + \" kΩ\";\n} else {\n    // Over 1 000 000 ohm - vises i megaohm (MΩ)\n    let resistanceMohm = resistance / 1_000_000;\n    resistanceDisplay = resistanceMohm.toFixed(3) + \" MΩ\";\n}\n\n// Bestem status (godkjent/fail) basert på grenseverdien\nlet status = (resistance >= limit * 1_000_000) ? \"godkjent\" : \"fail\";\n\n// Lagre status og den formaterte verdien i global kontekst\nglobal.set(\"status_Fase/GND\", status);\nglobal.set(\"measuredResistanceFaseGND\", resistanceDisplay);\n\n// Logg verdiene både lokalt og slik de lagres i global kontekst for å verifisere\nnode.log(`Modus: ${testMode}`);\nnode.log(`Målt verdi (lokal): ${resistanceDisplay}`);\nnode.log(`Målt verdi (global): ${global.get(\"measuredResistanceFaseGND\")}`);\nnode.log(`Grense: ${limit} MΩ`);\nnode.log(`Status: ${status}`);\n\n// Opprett meldinger for hver utgang\nlet msgValue = { payload: resistanceDisplay };  // Utgang 1 – viser målt verdi (eller ∞ Ω)\nlet msgStatus = { payload: status };              // Utgang 2 – viser \"godkjent\" eller \"fail\"\n\nreturn [msgValue, msgStatus];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 680,
        "wires": [
            [
                "e5b51d788ef20207"
            ],
            [
                "2e182f018666eee7"
            ]
        ],
        "outputLabels": [
            "Verdi",
            "Status"
        ]
    },
    {
        "id": "e5b51d788ef20207",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "9695cfc09f2c805b",
        "name": "Til visning av resultat Måling 2",
        "mode": "link",
        "links": [
            "e7ba2f1c4cc5dcca",
            "fbb9356c64b2093a"
        ],
        "x": 1695,
        "y": 680,
        "wires": []
    },
    {
        "id": "0661ea6652f7b633",
        "type": "link in",
        "z": "a3312be352519813",
        "g": "2202219e2937f891",
        "name": "Målt verdi 3",
        "links": [
            "195bdd0dbfe7298e",
            "964b05880196c92b",
            "ff64f9cf976422cc"
        ],
        "x": 895,
        "y": 900,
        "wires": [
            [
                "e4a3397c5dd0b11a"
            ]
        ]
    },
    {
        "id": "e4a3397c5dd0b11a",
        "type": "function",
        "z": "a3312be352519813",
        "g": "2202219e2937f891",
        "name": "Motstand Skall GND",
        "func": "// Hent målingene som en streng fra msg.payload\nlet measurementsStr = msg.payload.trim();\n\n// Sjekk om \"NA\" finnes i payload\nif (measurementsStr.includes(\"NA\")) {\n    node.log(\"NA oppdaget i payload, sender NA til begge utganger.\");\n\n    // Lagre \"NA\" i global kontekst\n    global.set(\"measuredResistance_SkallGND\", \"NA\");\n    global.set(\"measuredResistanceDisplay\", \"NA\");\n    // Sett status for Skall/GND slik at den stemmer med evalueringen\n    global.set(\"status_Skall/GND\", \"status_Skall/GND: NA\");\n\n    let msgValue = { payload: \"NA\" };  // Utgang 1 – NA\n    let msgStatus = { payload: \"NA\" }; // Utgang 2 – NA\n    return [msgValue, msgStatus];\n}\n\n// Del strengen inn i en liste ved å bruke komma som separator\nlet measurementsArr = measurementsStr.split(',');\n\n// Konverter alle elementene i listen til flyttall\nlet measurements = measurementsArr.map(Number);\n\n// Kontroller at alle elementene er gyldige tall\nif (measurements.every(n => !isNaN(n))) {\n    // Beregn gjennomsnittet\n    let sum = measurements.reduce((acc, value) => acc + value, 0);\n    let average = sum / measurements.length;\n\n    // Bestem status basert på grensen (under 1 Ω er \"godkjent\", ellers \"fail\")\n    let status = (average < 1) ? \"godkjent\" : \"fail\";\n\n    // Funksjon for å formatere verdien med riktig enhet (Ω, kΩ, MΩ)\n    function formatOhms(value) {\n        if (value >= 1e6) {\n            return (value / 1e6).toFixed(3) + \" MΩ\";\n        } else if (value >= 1e3) {\n            return (value / 1e3).toFixed(3) + \" kΩ\";\n        } else {\n            return value.toFixed(3) + \" Ω\";\n        }\n    }\n\n    let formattedValue = formatOhms(average);\n\n    // Lagre den målte verdien og statusen i global kontekst\n    global.set(\"Motstand_fase/gnd\", formattedValue);\n    global.set(\"statusFaseGND\", status);\n\n    node.log(`Målt gjennomsnitt: ${formattedValue}`);\n    node.log(`Status: ${status}`);\n\n    let msgValue = { payload: formattedValue };  // Utgang 1 – viser formatert verdi\n    let msgStatus = { payload: status };           // Utgang 2 – viser status (\"godkjent\"/\"fail\")\n    return [msgValue, msgStatus];\n} else {\n    node.error(\"Payload contains non-numeric values\", msg);\n    return [null, null];\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 900,
        "wires": [
            [
                "440ba3140e0e1bdc"
            ],
            [
                "7082e1ae5fc393fe"
            ]
        ],
        "outputLabels": [
            "Verdi",
            "Status"
        ]
    },
    {
        "id": "440ba3140e0e1bdc",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "2202219e2937f891",
        "name": "Til visning av resultat Måling 3",
        "mode": "link",
        "links": [
            "a581433753d36c15",
            "eaf4df1af8ceda7d"
        ],
        "x": 1695,
        "y": 880,
        "wires": []
    },
    {
        "id": "b462ef762fee66be",
        "type": "link in",
        "z": "a3312be352519813",
        "g": "83e6939378fe41f7",
        "name": "Volt og Watt",
        "links": [],
        "x": 105,
        "y": 440,
        "wires": [
            [
                "a1cdec8bf64e5e76"
            ]
        ]
    },
    {
        "id": "a1cdec8bf64e5e76",
        "type": "function",
        "z": "a3312be352519813",
        "g": "83e6939378fe41f7",
        "name": "Test parameter uten å hente fra database",
        "func": "// Hent verdier fra payload og konverter til tall (Retrieve values from payload and convert to numbers)\nvar voltage = Number(msg.payload.volt.trim());\nvar power = Number(msg.payload.watt.trim());\nvar tolerance_upper = Number(msg.payload[\"tolerance_upper \"].trim());\nvar tolerance_lower = Number(msg.payload.tolerance_lower.trim());\n\n// Sjekk at verdiene er definert og er tall (Check if values are defined and are numbers)\nif (isNaN(voltage) || isNaN(power) || isNaN(tolerance_upper) || isNaN(tolerance_lower)) {\n    return [{ payload: \"Feil: Mangler nødvendig verdi i payload eller verdier er ikke tall.\" }];\n}\n\n// Beregn strøm (I) (Calculate current (I))\nvar current = power / voltage;\n\n// Beregn motstand (R) (Calculate resistance (R))\nvar resistance = (voltage * voltage) / power;\n\n// Opprett separate meldinger med enkel tekstverdi for hver verdi (Create separate messages with simple text value for each value)\nvar voltageMsg = { payload: voltage + \" V\" };\nvar powerMsg = { payload: power + \" W\" };\nvar currentMsg = { payload: current.toFixed(2) + \" A\" };\nvar resistanceMsg = { payload: resistance.toFixed(2) + \" Ω\" };\nvar tolerance_upperMsg = { payload: tolerance_upper + \" Ω\" };\nvar tolerance_lowerMsg = { payload: tolerance_lower + \" Ω\" };\n\n// Returner de separate meldingene som et array (Return the separate messages as an array)\nreturn [voltageMsg, powerMsg, currentMsg, resistanceMsg, tolerance_upperMsg, tolerance_lowerMsg];\n",
        "outputs": 6,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 440,
        "wires": [
            [
                "95cb1693aa6d71de",
                "36a4fe96d06c3e2d"
            ],
            [
                "b0d24c3b31297dbe"
            ],
            [],
            [
                "cce06906fca86a79",
                "4248240b7e483aa1"
            ],
            [
                "638896ec52f0faf9",
                "a9b27d120efded49"
            ],
            [
                "346db99b9738b485",
                "6977ba45e4ebc8ad"
            ]
        ]
    },
    {
        "id": "cce06906fca86a79",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "83e6939378fe41f7",
        "name": "Motstand",
        "mode": "link",
        "links": [
            "2d13a12685cbb78a"
        ],
        "x": 245,
        "y": 540,
        "wires": []
    },
    {
        "id": "95cb1693aa6d71de",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "83e6939378fe41f7",
        "name": "Spenning",
        "mode": "link",
        "links": [
            "6f0789f5b971cd29",
            "855798caca85c7f0"
        ],
        "x": 695,
        "y": 400,
        "wires": []
    },
    {
        "id": "b0d24c3b31297dbe",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "83e6939378fe41f7",
        "name": "Effekt",
        "mode": "link",
        "links": [
            "34f2a3aa8a152c47",
            "9f8e6f557429ad66"
        ],
        "x": 695,
        "y": 440,
        "wires": []
    },
    {
        "id": "38db026eee5a5a62",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "a15ef975fcb81451",
        "name": "Målt effekt",
        "mode": "link",
        "links": [
            "53ef93ba50a97cad",
            "ba6d7714acec3d81"
        ],
        "x": 1745,
        "y": 220,
        "wires": []
    },
    {
        "id": "2e182f018666eee7",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "9695cfc09f2c805b",
        "name": "Motstand GND < 3M",
        "mode": "link",
        "links": [
            "6a6934b8167249da",
            "9e8b289eba044393"
        ],
        "x": 1695,
        "y": 740,
        "wires": []
    },
    {
        "id": "7082e1ae5fc393fe",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "2202219e2937f891",
        "name": "Motstand Skall <1",
        "mode": "link",
        "links": [
            "ad79ffcdcd8fba7e",
            "a581433753d36c15"
        ],
        "x": 1695,
        "y": 940,
        "wires": []
    },
    {
        "id": "23af95cc68cb0e11",
        "type": "change",
        "z": "a3312be352519813",
        "g": "d0e5080b599e0a39",
        "name": "Set Topic to Measured Resistance",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "measured_resistance",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 420,
        "wires": [
            [
                "39fbcc2e1c04a178"
            ]
        ]
    },
    {
        "id": "39fbcc2e1c04a178",
        "type": "join",
        "z": "a3312be352519813",
        "g": "d0e5080b599e0a39",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": true,
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1290,
        "y": 460,
        "wires": [
            [
                "b1d0ce95c401fc4a"
            ]
        ]
    },
    {
        "id": "b1d0ce95c401fc4a",
        "type": "function",
        "z": "a3312be352519813",
        "g": "d0e5080b599e0a39",
        "name": "Compare Resistances",
        "func": "// Sjekk om payloaden er \"Multimeter svarer ikke\"\nif (typeof msg.payload === \"string\" && msg.payload.trim() === \"Multimeter svarer ikke\") {\n    node.warn(\"Multimeter svarer ikke mottatt, sender feilmelding videre.\");\n    var out1 = { payload: \"Multimeter svarer ikke\" };\n    var out2 = { payload: \"Feil!!!\" };\n    var out3 = { payload: \"Multimeter svarer ikke\" };\n    return [out1, out2, out3];\n}\n\n// Hent den innstilte motstanden (som streng) og målte motstanden fra msg.payload\nvar instilt_motstand_str = msg.payload.resistance;\nvar malt_motstand = msg.payload.measured_resistance;\n\n// Konverter den innstilte motstanden til et tall (fjerner \" Ω\")\nvar instilt_motstand = parseFloat(instilt_motstand_str.replace(\" Ω\", \"\"));\n\n// Hent toleranseverdier fra payload og fjern eventuelle \" Ω\"\nvar toleranse_ovre = msg.payload.tolerance_upper;\nvar toleranse_nedre = msg.payload[\"set topic to tolerance_lower\"];\nif (typeof toleranse_ovre === \"string\") {\n    toleranse_ovre = parseFloat(toleranse_ovre.replace(\" Ω\", \"\"));\n}\nif (typeof toleranse_nedre === \"string\") {\n    toleranse_nedre = parseFloat(toleranse_nedre.replace(\" Ω\", \"\"));\n}\n\n// Beregn forskjellen mellom innstilt og målt motstand\nvar forskjell = instilt_motstand - malt_motstand;\n\n// Sjekk om den målte motstanden er innenfor toleransegrensene\nvar status, melding;\nif (malt_motstand < toleranse_nedre || malt_motstand > toleranse_ovre) {\n    status = \"Advarsel\";\n    melding = \"Forskjellen mellom den innstilte og målte motstanden er utenfor toleransegrensene.\";\n} else {\n    status = \"OK\";\n    melding = \"Forskjellen mellom den innstilte og målte motstanden er innenfor toleransegrensene.\";\n}\n\n// Funksjon for å formatere ohm med riktig enhet (opp til 3 desimaler)\nfunction formatOhms(value) {\n    if (value >= 1e6) {\n        return (value / 1e6).toFixed(3) + \" MΩ\";\n    } else if (value >= 1e3) {\n        return (value / 1e3).toFixed(3) + \" kΩ\";\n    } else {\n        return value.toFixed(3) + \" Ω\";\n    }\n}\n\n// Formater de numeriske verdiene\nvar instilt_motstand_formatted = formatOhms(instilt_motstand);\nvar malt_motstand_formatted = formatOhms(malt_motstand);\nvar forskjell_formatted = formatOhms(forskjell);\nvar toleranse_ovre_formatted = formatOhms(toleranse_ovre);\nvar toleranse_nedre_formatted = formatOhms(toleranse_nedre);\n\n// Opprett resultatobjekt med både rå- og formaterte verdier\nvar resultat = {\n    status: status,\n    melding: melding,\n    instilt_motstand: instilt_motstand,\n    instilt_motstand_formatted: instilt_motstand_formatted,\n    malt_motstand: malt_motstand,\n    malt_motstand_formatted: malt_motstand_formatted,\n    forskjell: forskjell,\n    forskjell_formatted: forskjell_formatted,\n    toleranse_ovre: toleranse_ovre,\n    toleranse_ovre_formatted: toleranse_ovre_formatted,\n    toleranse_nedre: toleranse_nedre,\n    toleranse_nedre_formatted: toleranse_nedre_formatted\n};\n\n// Lagre resultatobjektet i global kontekst under nøkkelen \"motstand_status\"\nglobal.set(\"motstand_status\", resultat);\n\n// Forbered tre utganger:\n// Utgang 1: Sendes den formaterte målte motstandsverdien (med 3 desimaler og enhet)\n// Utgang 2: Sender teststatus (\"OK\" eller \"Advarsel\")\n// Utgang 3: Sender hele resultatobjektet med detaljer\nvar outMsg1 = { payload: malt_motstand_formatted };\nvar outMsg2 = { payload: status };\nvar outMsg3 = { payload: resultat };\n\nreturn [outMsg1, outMsg2, outMsg3];\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 460,
        "wires": [
            [
                "0fa48ab128d0d122"
            ],
            [
                "c745c4fe2938b106"
            ],
            [
                "fc69a4147a4280f6"
            ]
        ],
        "outputLabels": [
            "malt_motstand",
            "status ",
            "resultat "
        ],
        "info": "Denne funksjonen brukes for å:\r\n\r\nValidere om den målte motstanden fra et multimeter ligger innenfor definerte toleransegrenser.\r\n\r\nGi beskjed dersom multimeteret ikke svarer.\r\n\r\nReturnere formaterte resultater til visning, videre bruk eller logging.\r\n\r\n⚙️ Forutsetninger\r\nForventet innkommende msg.payload må inneholde følgende data:\r\n\r\njson\r\nCopy\r\nEdit\r\n{\r\n  \"resistance\": \"100 Ω\",                     // Innstilt motstand som streng med enhet\r\n  \"measured_resistance\": 98.5,              // Målt motstand (nummer)\r\n  \"tolerance_upper\": \"105 Ω\",               // Øvre toleransegrense (som streng med enhet eller tall)\r\n  \"set topic to tolerance_lower\": \"95 Ω\"    // Nedre toleransegrense (samme format)\r\n}\r\nEller hvis multimeteret feiler, kan msg.payload være en streng:\r\n\r\njson\r\nCopy\r\nEdit\r\n\"Multimeter svarer ikke\"\r\n📤 Utganger\r\nFunksjonen returnerer data til tre utganger:\r\n\r\nUtgang\tBeskrivelse\r\n1\tFormaterte målt motstand (f.eks. \"98.500 Ω\").\r\n2\tStatus: \"OK\" eller \"Advarsel\", avhengig av om verdien er innenfor toleransen.\r\n3\tEt detaljert JSON-objekt med alle rå- og formaterte verdier, samt status og forklarende melding.\r\n🔍 Eksempelresultat på utgang 3\r\njson\r\nCopy\r\nEdit\r\n{\r\n  \"status\": \"OK\",\r\n  \"melding\": \"Forskjellen mellom den innstilte og målte motstanden er innenfor toleransegrensene.\",\r\n  \"instilt_motstand\": 100,\r\n  \"instilt_motstand_formatted\": \"100.000 Ω\",\r\n  \"malt_motstand\": 98.5,\r\n  \"malt_motstand_formatted\": \"98.500 Ω\",\r\n  \"forskjell\": 1.5,\r\n  \"forskjell_formatted\": \"1.500 Ω\",\r\n  \"toleranse_ovre\": 105,\r\n  \"toleranse_ovre_formatted\": \"105.000 Ω\",\r\n  \"toleranse_nedre\": 95,\r\n  \"toleranse_nedre_formatted\": \"95.000 Ω\"\r\n}\r\n⚠️ Feilhåndtering\r\nHvis multimeteret ikke svarer og sender \"Multimeter svarer ikke\":\r\n\r\nUtgang 1: \"Multimeter svarer ikke\"\r\n\r\nUtgang 2: \"Feil!!!\"\r\n\r\nUtgang 3: \"Multimeter svarer ikke\"\r\n\r\n🧠 Andre funksjoner\r\nFunksjonen formaterer motstandsverdier automatisk til riktig enhet:\r\n\r\n0–999 → Ω\r\n\r\n1 000–999 999 → kΩ\r\n\r\nOver 1 000 000 → MΩ\r\n\r\nResultatet lagres også i global.set(\"motstand_status\", ...) slik at det kan brukes andre steder i flyten.\r\n\r\n🛠️ Tips for bruk i Node-RED\r\nKoble utgang 1 til en tekstboks i dashboard for visning.\r\n\r\nKoble utgang 2 til statusindikator (grønn/rød) eller tekst.\r\n\r\nKoble utgang 3 til en debug node eller funksjon for videre behandling eller logging."
    },
    {
        "id": "4248240b7e483aa1",
        "type": "change",
        "z": "a3312be352519813",
        "g": "d0e5080b599e0a39",
        "name": "set topic to resistance",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "resistance",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 460,
        "wires": [
            [
                "39fbcc2e1c04a178"
            ]
        ]
    },
    {
        "id": "c745c4fe2938b106",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "d0e5080b599e0a39",
        "name": "Motstad status",
        "mode": "link",
        "links": [
            "b36bae71f9781b51"
        ],
        "x": 1745,
        "y": 480,
        "wires": []
    },
    {
        "id": "638896ec52f0faf9",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "83e6939378fe41f7",
        "name": "tolerance_upper",
        "mode": "link",
        "links": [
            "0e26cf84710d936b"
        ],
        "x": 695,
        "y": 480,
        "wires": []
    },
    {
        "id": "346db99b9738b485",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "83e6939378fe41f7",
        "name": "tolerance_lower",
        "mode": "link",
        "links": [
            "78eba4bfc7b5be6e"
        ],
        "x": 695,
        "y": 520,
        "wires": []
    },
    {
        "id": "6977ba45e4ebc8ad",
        "type": "change",
        "z": "a3312be352519813",
        "g": "d0e5080b599e0a39",
        "name": "set topic to tolerance_lower",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "set topic to tolerance_lower",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 540,
        "wires": [
            [
                "39fbcc2e1c04a178"
            ]
        ]
    },
    {
        "id": "a9b27d120efded49",
        "type": "change",
        "z": "a3312be352519813",
        "g": "d0e5080b599e0a39",
        "name": "set topic to tolerance_upper",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "tolerance_upper",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 500,
        "wires": [
            [
                "39fbcc2e1c04a178"
            ]
        ]
    },
    {
        "id": "ce299d13039572b1",
        "type": "link in",
        "z": "a3312be352519813",
        "g": "ced0e750c875007a",
        "name": "link in 3",
        "links": [
            "bd7a22da3b98031a"
        ],
        "x": 105,
        "y": 780,
        "wires": [
            [
                "d1f8b6e5aab9a260",
                "9f8ef25da523c59c"
            ]
        ]
    },
    {
        "id": "19939690ab169fa6",
        "type": "comment",
        "z": "a3312be352519813",
        "g": "d0e5080b599e0a39",
        "name": "Sjekk av motstand",
        "info": "",
        "x": 1550,
        "y": 360,
        "wires": []
    },
    {
        "id": "bd15e31e5fa207f2",
        "type": "comment",
        "z": "a3312be352519813",
        "g": "9695cfc09f2c805b",
        "name": "Sjekk motstan -> GND",
        "info": "",
        "x": 1660,
        "y": 640,
        "wires": []
    },
    {
        "id": "201221e967989b32",
        "type": "link in",
        "z": "a3312be352519813",
        "g": "ced0e750c875007a",
        "name": "Start måling",
        "links": [
            "fd3f8987fdce1616"
        ],
        "x": 115,
        "y": 960,
        "wires": [
            [
                "67983006891d4f4f"
            ]
        ]
    },
    {
        "id": "67983006891d4f4f",
        "type": "switch",
        "z": "a3312be352519813",
        "g": "ced0e750c875007a",
        "name": "Check true",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 960,
        "wires": [
            [
                "198fc9e2305f23aa"
            ]
        ]
    },
    {
        "id": "198fc9e2305f23aa",
        "type": "change",
        "z": "a3312be352519813",
        "g": "ced0e750c875007a",
        "name": "Set payload to flow.objekt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "objekt",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 960,
        "wires": [
            [
                "9f8ef25da523c59c"
            ]
        ]
    },
    {
        "id": "d1f8b6e5aab9a260",
        "type": "change",
        "z": "a3312be352519813",
        "g": "ced0e750c875007a",
        "name": "Store object in flow",
        "rules": [
            {
                "t": "set",
                "p": "objekt",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "12c902a7b0c8391d",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "ced0e750c875007a",
        "name": "Strøm",
        "mode": "link",
        "links": [
            "b931cc2c4280566a"
        ],
        "x": 685,
        "y": 880,
        "wires": []
    },
    {
        "id": "974d8c81aaf73aad",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "a15ef975fcb81451",
        "name": "Målt Strøm",
        "mode": "link",
        "links": [
            "4b48525d6916ef58"
        ],
        "x": 1745,
        "y": 260,
        "wires": []
    },
    {
        "id": "69ed789687b3c868",
        "type": "comment",
        "z": "a3312be352519813",
        "g": "2202219e2937f891",
        "name": "Sjekk motstan -> GND / skall",
        "info": "",
        "x": 1640,
        "y": 840,
        "wires": []
    },
    {
        "id": "600e391087ac14b1",
        "type": "comment",
        "z": "a3312be352519813",
        "g": "a15ef975fcb81451",
        "name": "måling ogutregning av motstand, effekt og strøm",
        "info": "",
        "x": 1440,
        "y": 120,
        "wires": []
    },
    {
        "id": "47518008169f20ec",
        "type": "comment",
        "z": "a3312be352519813",
        "g": "ced0e750c875007a",
        "name": "Verdier i fra database",
        "info": "",
        "x": 700,
        "y": 640,
        "wires": []
    },
    {
        "id": "86833fb33f33e109",
        "type": "comment",
        "z": "a3312be352519813",
        "g": "83e6939378fe41f7",
        "name": "Manuell inntasting av verdier",
        "info": "",
        "x": 680,
        "y": 360,
        "wires": []
    },
    {
        "id": "7103bf503d9fa40c",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "ced0e750c875007a",
        "name": "element nr",
        "mode": "link",
        "links": [
            "f890f723d067be97"
        ],
        "x": 685,
        "y": 680,
        "wires": []
    },
    {
        "id": "d932c7fa939d28f7",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "ced0e750c875007a",
        "name": "Minimum ohm",
        "mode": "link",
        "links": [],
        "x": 685,
        "y": 720,
        "wires": []
    },
    {
        "id": "bd9b4a459f817247",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "ced0e750c875007a",
        "name": "Makimum ohm",
        "mode": "link",
        "links": [],
        "x": 685,
        "y": 760,
        "wires": []
    },
    {
        "id": "9f8ef25da523c59c",
        "type": "function",
        "z": "a3312be352519813",
        "g": "ced0e750c875007a",
        "name": "Artikkel parameter",
        "func": "// Hent verdier fra payload og konverter til tall\nvar id = Number(msg.payload[0].id);\nvar elementnr1 = msg.payload[0].elementnr1 ? msg.payload[0].elementnr1.toString() : \"\";\nvar elementnr2 = msg.payload[0].elementnr2 ? msg.payload[0].elementnr2.toString() : \"\";\n\n// Sjekk om 'elementnr' er til stede og bruk den i stedet for 'elementnr1' hvis den finnes\nif (msg.payload[0].elementnr) {\n    elementnr1 = msg.payload[0].elementnr.toString();\n}\n\nvar nominellMotstand = Number(msg.payload[0].nominell);\nvar minMotstand = Number(msg.payload[0].min);\nvar maxMotstand = Number(msg.payload[0].max);\nvar spenning = Number(msg.payload[0].spenning);\nvar toleranseNegativ = Number(msg.payload[0].toleransenegativ);\nvar toleransePositiv = Number(msg.payload[0].toleransepositiv);\n\n// Sjekk om 'artikkelnr' finnes, hvis ikke, sett det til en tom streng\nvar artikkelnr = msg.payload[0].artikkelnr ? msg.payload[0].artikkelnr.toString() : \"\";\n\n// Sjekk at verdiene er definert og er tall\nif (isNaN(id) || isNaN(nominellMotstand) || isNaN(minMotstand) || isNaN(maxMotstand) || isNaN(spenning) || isNaN(toleranseNegativ) || isNaN(toleransePositiv)) {\n    return [{ payload: \"Feil: Mangler nødvendig verdi i payload eller verdier er ikke tall.\" }];\n}\n\n// Kombiner elementnr1 og elementnr2\nvar combinedElementnr = elementnr1;\nif (elementnr2) {\n    combinedElementnr += \"/\" + elementnr2;\n}\n\n// Beregn motstand ved toleranse\nvar motstandNegativToleranse = nominellMotstand - toleranseNegativ;\nvar motstandPositivToleranse = nominellMotstand + toleransePositiv;\n\n// Beregn effekt (P) ved forskjellige motstandsverdier\nvar nominellEffekt = (spenning * spenning) / nominellMotstand;\nvar minEffekt = (spenning * spenning) / minMotstand;\nvar maxEffekt = (spenning * spenning) / maxMotstand;\n\n// Beregn strøm (I) ved nominell motstand\nvar nominellStrøm = spenning / nominellMotstand;\n\n// Opprett separate meldinger med enkel tekstverdi for hver verdi\nvar idMsg = { payload: id };\nvar elementnrMsg = { payload: combinedElementnr };\nvar nominellMotstandMsg = { payload: nominellMotstand.toFixed(2) + \" Ω\" };\nvar minMotstandMsg = { payload: minMotstand.toFixed(2) + \" Ω\" };\nvar maxMotstandMsg = { payload: maxMotstand.toFixed(2) + \" Ω\" };\nvar spenningMsg = { payload: spenning + \" V\" };\nvar nominellEffektMsg = { payload: nominellEffekt.toFixed(2) + \" W\" };\nvar minEffektMsg = { payload: minEffekt.toFixed(2) + \" W\" };\nvar maxEffektMsg = { payload: maxEffekt.toFixed(2) + \" W\" };\nvar motstandNegativToleranseMsg = { payload: motstandNegativToleranse.toFixed(2) + \" Ω\" };\nvar motstandPositivToleranseMsg = { payload: motstandPositivToleranse.toFixed(2) + \" Ω\" };\nvar nominellStrømMsg = { payload: nominellStrøm.toFixed(2) + \" A\" };\n\n// Legg til melding for artikkelnr\nvar artikkelnrMsg = { payload: artikkelnr };\n\n\n// Lagre artikkelnrMsg og elementnrMsg i den globale konteksten\nglobal.set(\"artikkelnr\", artikkelnrMsg.payload);\nglobal.set(\"elementnr\", elementnrMsg.payload);\n\n// Returner de separate meldingene som et array\nreturn [\n    idMsg,\n    elementnrMsg,\n    nominellMotstandMsg,\n    minMotstandMsg,\n    maxMotstandMsg,\n    spenningMsg,\n    nominellEffektMsg,\n    minEffektMsg,\n    maxEffektMsg,\n    motstandNegativToleranseMsg,\n    motstandPositivToleranseMsg,\n    nominellStrømMsg,\n    artikkelnrMsg\n];\n",
        "outputs": 13,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 780,
        "wires": [
            [],
            [
                "7103bf503d9fa40c"
            ],
            [
                "cce06906fca86a79",
                "4248240b7e483aa1"
            ],
            [
                "d932c7fa939d28f7"
            ],
            [
                "bd9b4a459f817247"
            ],
            [
                "36a4fe96d06c3e2d",
                "95cb1693aa6d71de"
            ],
            [
                "b0d24c3b31297dbe"
            ],
            [
                "ad43c7eb9bafb1b0"
            ],
            [
                "935dcadeb439a3c2"
            ],
            [
                "346db99b9738b485",
                "6977ba45e4ebc8ad"
            ],
            [
                "638896ec52f0faf9",
                "a9b27d120efded49"
            ],
            [
                "12c902a7b0c8391d"
            ],
            [
                "49bfaa6cb8e5805b"
            ]
        ],
        "outputLabels": [
            "idMsg",
            "elementnrMsg",
            "nominellMotstandMsg",
            "minMotstandMsg",
            "maxMotstandMsg",
            "spenningMsg",
            "nominellEffektMsg",
            "minEffektMsg",
            "maxEffektMsg",
            "motstandNegativToleranseMsg",
            "motstandPositivToleranseMsg",
            "nominellStrømMsg",
            "artikkelnrMsg"
        ],
        "info": "🔹 1. Hent og konverter input-verdier\r\njs\r\nCopy\r\nEdit\r\nvar id = Number(msg.payload[0].id);\r\nvar elementnr1 = msg.payload[0].elementnr1 ? msg.payload[0].elementnr1.toString() : \"\";\r\nvar elementnr2 = msg.payload[0].elementnr2 ? msg.payload[0].elementnr2.toString() : \"\";\r\nLeser ut id, elementnr1 og elementnr2.\r\n\r\nSørger for at elementnr1 og elementnr2 alltid er strenger (brukes senere til visning).\r\n\r\n🔸 2. Sjekk for alternativ felt: elementnr\r\njs\r\nCopy\r\nEdit\r\nif (msg.payload[0].elementnr) {\r\n    elementnr1 = msg.payload[0].elementnr.toString();\r\n}\r\nHvis elementnr finnes, bruker den denne verdien i stedet for elementnr1.\r\n\r\n🔹 3. Hent tekniske data\r\njs\r\nCopy\r\nEdit\r\nvar nominellMotstand = Number(msg.payload[0].nominell);\r\nvar minMotstand = Number(msg.payload[0].min);\r\nvar maxMotstand = Number(msg.payload[0].max);\r\nvar spenning = Number(msg.payload[0].spenning);\r\nvar toleranseNegativ = Number(msg.payload[0].toleransenegativ);\r\nvar toleransePositiv = Number(msg.payload[0].toleransepositiv);\r\nLeser inn alle nødvendige tallverdier for beregninger.\r\n\r\n🔸 4. Artikkelnummer (valgfri verdi)\r\njs\r\nCopy\r\nEdit\r\nvar artikkelnr = msg.payload[0].artikkelnr ? msg.payload[0].artikkelnr.toString() : \"\";\r\nSetter artikkelnr hvis det finnes, ellers tom streng.\r\n\r\n🛑 5. Validering\r\njs\r\nCopy\r\nEdit\r\nif (isNaN(...)) {\r\n    return [{ payload: \"Feil: Mangler nødvendig verdi i payload eller verdier er ikke tall.\" }];\r\n}\r\nHvis noen av verdiene er ugyldige (ikke tall), stopp og gi feilmelding.\r\n\r\n🔹 6. Kombiner elementnummer\r\njs\r\nCopy\r\nEdit\r\nvar combinedElementnr = elementnr1;\r\nif (elementnr2) {\r\n    combinedElementnr += \"/\" + elementnr2;\r\n}\r\nLager én samlet streng med f.eks. 1234/5678 for visning.\r\n\r\n🔸 7. Beregninger\r\nMotstandstoleranser:\r\njs\r\nCopy\r\nEdit\r\nvar motstandNegativToleranse = nominellMotstand - toleranseNegativ;\r\nvar motstandPositivToleranse = nominellMotstand + toleransePositiv;\r\nEffekt (P = U² / R):\r\njs\r\nCopy\r\nEdit\r\nvar nominellEffekt = (spenning * spenning) / nominellMotstand;\r\nvar minEffekt = (spenning * spenning) / minMotstand;\r\nvar maxEffekt = (spenning * spenning) / maxMotstand;\r\nStrøm (I = U / R):\r\njs\r\nCopy\r\nEdit\r\nvar nominellStrøm = spenning / nominellMotstand;\r\n📤 8. Lag meldinger med tekstformat\r\nHver målt verdi lages som en egen melding (msg = { payload: \"verdi\" }).\r\n\r\nEksempel:\r\n\r\njs\r\nCopy\r\nEdit\r\nvar nominellMotstandMsg = { payload: nominellMotstand.toFixed(2) + \" Ω\" };\r\nAlle verdier får passende enheter: Ω, V, W, A.\r\n\r\n🌍 9. Lagre i global kontekst\r\njs\r\nCopy\r\nEdit\r\nglobal.set(\"artikkelnr\", artikkelnrMsg.payload);\r\nglobal.set(\"elementnr\", elementnrMsg.payload);\r\nGjør artikkelnummer og elementnummer tilgjengelig i andre noder i flowen.\r\n\r\n📦 10. Returner alle meldinger som array\r\njs\r\nCopy\r\nEdit\r\nreturn [\r\n    idMsg,\r\n    elementnrMsg,\r\n    nominellMotstandMsg,\r\n    ...\r\n    artikkelnrMsg\r\n];\r\nNode-RED sender disse meldingene videre som separate utganger."
    },
    {
        "id": "49bfaa6cb8e5805b",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "ced0e750c875007a",
        "name": "Artikkel  nr",
        "mode": "link",
        "links": [
            "e3307533596a0944",
            "0c40558caedffebc"
        ],
        "x": 685,
        "y": 920,
        "wires": []
    },
    {
        "id": "ad43c7eb9bafb1b0",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "ced0e750c875007a",
        "name": "Minimum Watt",
        "mode": "link",
        "links": [
            "301b01843c5ae52a"
        ],
        "x": 685,
        "y": 800,
        "wires": []
    },
    {
        "id": "935dcadeb439a3c2",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "ced0e750c875007a",
        "name": "Makimum Watt",
        "mode": "link",
        "links": [
            "3bb77f9aeb5411d2"
        ],
        "x": 685,
        "y": 840,
        "wires": []
    },
    {
        "id": "2bd18ab2af15cf38",
        "type": "link in",
        "z": "a3312be352519813",
        "g": "b1936f390bb06852",
        "name": "ACW",
        "links": [
            "c5eb9b581508078d"
        ],
        "x": 895,
        "y": 1040,
        "wires": [
            [
                "7840a08767b45b8c"
            ]
        ]
    },
    {
        "id": "7840a08767b45b8c",
        "type": "function",
        "z": "a3312be352519813",
        "g": "b1936f390bb06852",
        "name": "IR Check Result",
        "func": "var result = msg.payload;\nvar status;\n\n// Sjekk om meldingen indikerer at Isulasjonstester ikke svarer\nif (result === \"Isulasjonstester svarer ikke\") {\n    status = \"ir failed\";\n}\n// Sjekk om resultatet inneholder 'ERROR' eller 'FAIL'\nelse if (typeof result === \"string\" && (result.includes('ERROR') || result.includes('FAIL'))) {\n    status = \"ir failed\";\n}\n// Hvis ingen feil eller feilindikasjon, sett til 'godkjent'\nelse {\n    status = \"ir godkjent\";\n}\n\n// Lagre status i global kontekst\nglobal.set(\"ir_test_status\", status);\n\n// Lagre hele resultatet i global kontekst med en ny nøkkel\nglobal.set(\"ir_test_full\", result);\n\n// Logg verdien for debugging\nnode.log(\"Isolasjonsmotstand test status: \" + status);\n\n// Oppdater msg.payload\nmsg.payload = status;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1040,
        "wires": [
            [
                "28fd4c1538e1783b"
            ]
        ]
    },
    {
        "id": "28fd4c1538e1783b",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "b1936f390bb06852",
        "name": "ir God/Dårlig",
        "mode": "link",
        "links": [
            "0a0f7381c6b75518"
        ],
        "x": 1745,
        "y": 1040,
        "wires": []
    },
    {
        "id": "7239b5f985e9e561",
        "type": "link in",
        "z": "a3312be352519813",
        "g": "b1936f390bb06852",
        "name": "ACW",
        "links": [
            "1033270452506701",
            "195bdd0dbfe7298e"
        ],
        "x": 895,
        "y": 1140,
        "wires": [
            [
                "4d05e3e23bf4bc0c"
            ]
        ]
    },
    {
        "id": "4d05e3e23bf4bc0c",
        "type": "function",
        "z": "a3312be352519813",
        "g": "b1936f390bb06852",
        "name": "GB Check Result",
        "func": "var result = msg.payload;\nvar status;\n\n// Sjekk om meldingen indikerer at isolasjonstesteren ikke svarer\nif (result === \"Isulasjonstester svarer ikke\") {\n    status = \"gb failed\";\n}\n// Sjekk om resultatet inneholder 'FAIL'\nelse if (typeof result === \"string\" && result.includes('FAIL')) {\n    status = \"gb failed\";\n}\n// Sjekk om payload er \"NA\"\nelse if (result === \"NA\") {\n    status = \"NA\";\n}\n// Hvis ingen feil eller feilindikasjon, sett til 'godkjent'\nelse {\n    status = \"gb godkjent\";\n}\n\n// Lagre status i global kontekst\nglobal.set(\"gb_test_status\", status);\n\n// Lagre hele resultatet i global kontekst med en ny nøkkel\nglobal.set(\"gb_test_full\", result);\n\n// Logg verdien for debugging\nnode.log(`Isolasjonsmotstand test status: ${status}`);\n\n// Oppdater msg.payload\nmsg.payload = status;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1140,
        "wires": [
            [
                "3b70592399f25232"
            ]
        ]
    },
    {
        "id": "3b70592399f25232",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "b1936f390bb06852",
        "name": "gb God/Dårlig",
        "mode": "link",
        "links": [
            "81335a7c7373db09"
        ],
        "x": 1745,
        "y": 1140,
        "wires": []
    },
    {
        "id": "9965d5b0f5e9291e",
        "type": "link in",
        "z": "a3312be352519813",
        "g": "b1936f390bb06852",
        "name": "ACW",
        "links": [
            "7614414c84f03eaa"
        ],
        "x": 895,
        "y": 1240,
        "wires": [
            [
                "6e22a3d20d09c42f"
            ]
        ]
    },
    {
        "id": "6e22a3d20d09c42f",
        "type": "function",
        "z": "a3312be352519813",
        "g": "b1936f390bb06852",
        "name": "ACW Check Result",
        "func": "var result = msg.payload;\nvar status;\n\n// Sjekk om meldingen indikerer at Isolasjonsmåleren ikke svarer\nif (result === \"Isulasjonstester svarer ikke\") {\n    status = \"acw failed\";\n} \n// Sjekk om resultatet inneholder 'FAIL'\nelse if (typeof result === \"string\" && result.includes('FAIL')) {\n    status = \"acw failed\";\n} \n// Hvis ingen feil eller feilindikasjon, sett til 'godkjent'\nelse {\n    status = \"acw godkjent\";\n}\n\n// Lagre status i global kontekst\nglobal.set(\"acw_test_status\", status);\n\n// Lagre hele resultatet i global kontekst med en ny nøkkel\nglobal.set(\"acw_test_full\", result);\n\n// Logg verdien for debugging\nnode.log(`Isolasjonsmotstand test status: ${status}`);\n\n// Oppdater msg.payload\nmsg.payload = status;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1240,
        "wires": [
            [
                "8815e8a8542d534c"
            ]
        ]
    },
    {
        "id": "8815e8a8542d534c",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "b1936f390bb06852",
        "name": "ACW God/Dårlig",
        "mode": "link",
        "links": [
            "388caf295392762e"
        ],
        "x": 1745,
        "y": 1240,
        "wires": []
    },
    {
        "id": "0fa48ab128d0d122",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "d0e5080b599e0a39",
        "name": "Til visning av resultat Måling 1 Motstand",
        "mode": "link",
        "links": [
            "5415d0deb198adc8"
        ],
        "x": 1745,
        "y": 440,
        "wires": []
    },
    {
        "id": "fc69a4147a4280f6",
        "type": "link out",
        "z": "a3312be352519813",
        "g": "d0e5080b599e0a39",
        "name": "Motstand på ellement til raport",
        "mode": "link",
        "links": [
            "b1c4c07488bdac61"
        ],
        "x": 1745,
        "y": 520,
        "wires": []
    },
    {
        "id": "42fe1befdb14ff96",
        "type": "comment",
        "z": "a3312be352519813",
        "name": "Detaljert beskrivelse av Node-RED-flyt: \"Utregning\"",
        "info": "\n\nDetaljert beskrivelse av Node-RED-flyt: \"Utregning\"\n\nFlyten «Utregning» i Node-RED benyttes til å behandle, beregne og validere testresultater fra måleinstrumenter under EOL-testing av motorvarmere.\n\nFlytstruktur\n\nFlyten inneholder flere viktige delprosesser som bearbeider dataene innhentet fra måleinstrumenter og utfører sammenligninger og beregninger.\n\nHovedfunksjoner og logikk\n\n1. Måling og beregning av motstand, effekt og strøm\n\nInnhenter motstand og spenningsverdier, utfører beregninger av strøm (A) og effekt (W).\n\nData behandles og formateres med riktig enhet for oversiktlig presentasjon.\n\nResultatene sendes videre til dashboardet for visuell fremstilling.\n\n2. Sammenligning av målte og nominelle verdier\n\nInnhenter nominelle verdier fra databasen og sammenligner med målte verdier.\n\nUtfører beregninger for å avgjøre om målte verdier ligger innenfor toleransegrensene.\n\nResultatene klassifiseres som \"godkjent\", \"advarsel\", eller \"fail\", og tydelige statusmeldinger sendes tilbake til brukergrensesnittet.\n\n3. Motstandsmålinger\n\nMålingene inkluderer motstand fase/GND, motstand skall/GND og isolasjonstester.\n\nSjekker og validerer målte verdier mot forhåndsdefinerte grenser og setter en tydelig status for \"godkjent\", \"advarsel\" eller \"fail\".\n\nSender resultatene tilbake til brukergrensesnittet og lagrer statusen i global kontekst for videre behandling.\n\n3. Beregning av elektriske parametere (volt, watt, ampere)\n\nUtfører presise utregninger basert på innhentede verdier:\n\nEffekt (W), strøm (A), motstand (Ω), og toleranser.\n\nFormaterer og klargjør resultatene for enkel visning i brukergrensesnittet.\n\n3. Feilhåndtering og tidsavbrudd\n\nRobust feilhåndtering for kommunikasjon med instrumenter, inkludert håndtering av tidsavbrudd.\n\nVed problemer med kommunikasjon mottar operatøren umiddelbare varsler som tydeliggjør feilsituasjonen.\n\n4. Datahåndtering\n\nResultatene av målingene lagres systematisk i globale variabler for videre bruk i analyse og rapportering.\n\nKommunikasjon og linker\n\nFlyten benytter linker for å motta data fra andre flyter og for å sende resultatene videre til dashboard og rapporteringsmoduler.\n\nBrukergrensesnitt\n\nFlyten er tett integrert med Node-RED dashboardet og sørger for at operatørene enkelt kan overvåke testresultatene i sanntid, samt tydelig identifisere eventuelle avvik.\n\nSamhandling med øvrige systemkomponenter\n\nDenne flyten er integrert med:\n\nDatabaser for innhenting av nominelle verdier.\n\nTCP/IP-kommunikasjon med måleinstrumenter for automatisk datainnsamling.\n\nDashboard og MQTT-kommunikasjon for videre behandling, overvåking og rapportering av testresultater.\n\nFlyten sikrer en nøyaktig, rask og pålitelig vurdering av kvaliteten på motorvarmerne, noe som muliggjør umiddelbare korrigeringer og tiltak dersom avvik oppdages under testing.\n\n",
        "x": 2290,
        "y": 320,
        "wires": []
    },
    {
        "id": "e7ba2f1c4cc5dcca",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "Måling 2",
        "links": [
            "e5b51d788ef20207"
        ],
        "x": 2205,
        "y": 460,
        "wires": [
            [
                "6c6a38779b6dd262"
            ]
        ]
    },
    {
        "id": "eaf4df1af8ceda7d",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "Måling 3",
        "links": [
            "440ba3140e0e1bdc"
        ],
        "x": 2205,
        "y": 640,
        "wires": [
            [
                "31af42971b2ec94b"
            ]
        ]
    },
    {
        "id": "6f0789f5b971cd29",
        "type": "link in",
        "z": "4711e11d3b408952",
        "g": "3149a1641fb9bcee",
        "name": "Spenning",
        "links": [
            "95cb1693aa6d71de"
        ],
        "x": 365,
        "y": 3040,
        "wires": [
            [
                "23f85787f5d483df"
            ]
        ]
    },
    {
        "id": "34f2a3aa8a152c47",
        "type": "link in",
        "z": "4711e11d3b408952",
        "g": "3149a1641fb9bcee",
        "name": "Effekt",
        "links": [
            "b0d24c3b31297dbe"
        ],
        "x": 365,
        "y": 2920,
        "wires": [
            [
                "dc17eec2a604396c"
            ]
        ]
    },
    {
        "id": "b931cc2c4280566a",
        "type": "link in",
        "z": "4711e11d3b408952",
        "g": "3149a1641fb9bcee",
        "name": "Strøm",
        "links": [
            "12c902a7b0c8391d"
        ],
        "x": 365,
        "y": 2960,
        "wires": [
            [
                "ae9bf0dae041a0ae"
            ]
        ]
    },
    {
        "id": "2d13a12685cbb78a",
        "type": "link in",
        "z": "4711e11d3b408952",
        "g": "3149a1641fb9bcee",
        "name": "Motstand",
        "links": [
            "cce06906fca86a79"
        ],
        "x": 365,
        "y": 3000,
        "wires": [
            [
                "bd47557dbb096512"
            ]
        ]
    },
    {
        "id": "53ef93ba50a97cad",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "Målt effekt",
        "links": [
            "38db026eee5a5a62"
        ],
        "x": 2215,
        "y": 1600,
        "wires": [
            [
                "8afa7fa8a6fab743"
            ]
        ]
    },
    {
        "id": "8d18b3d0407418d8",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "Test kjører",
        "links": [
            "fd3f8987fdce1616"
        ],
        "x": 1535,
        "y": 1820,
        "wires": [
            [
                "468637f756465baa"
            ]
        ]
    },
    {
        "id": "9271502f7bfd8eb4",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "Test ferdig",
        "links": [
            "2a7a1a47d9a49ea8",
            "2c173dd93cb6dd6b"
        ],
        "x": 1535,
        "y": 1780,
        "wires": [
            [
                "1ad2b9e533cf15a1"
            ]
        ]
    },
    {
        "id": "1ad2b9e533cf15a1",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "Test ferdig",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Ferdig",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "EOL ferdig",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1650,
        "y": 1780,
        "wires": [
            [
                "15f8f6130c730785",
                "590d4de59f1dd660",
                "ceef7455fc82ab6d",
                "d3fb80ead966f5b0",
                "111b1c8592d804d9",
                "2b6f5e24222922d2"
            ]
        ]
    },
    {
        "id": "468637f756465baa",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "Test kjører",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "Kjører",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "EOL Kjører",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1650,
        "y": 1820,
        "wires": [
            [
                "f3d006395cea7a14",
                "0ed354236ecc6576",
                "eea677b2387cf4aa",
                "590d4de59f1dd660",
                "ceef7455fc82ab6d",
                "d3fb80ead966f5b0"
            ]
        ]
    },
    {
        "id": "2d2cd9381974bff7",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "ACW tester",
        "links": [
            "7614414c84f03eaa"
        ],
        "x": 1815,
        "y": 1320,
        "wires": [
            [
                "e981a8d3d612e2af"
            ]
        ]
    },
    {
        "id": "388caf295392762e",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "ACW God/Dårlig ",
        "links": [
            "8815e8a8542d534c"
        ],
        "x": 1815,
        "y": 1480,
        "wires": [
            [
                "74bf68981b5fb4fa"
            ]
        ]
    },
    {
        "id": "74bf68981b5fb4fa",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "acw godkjent",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "acw failed",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ACW",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 1480,
        "wires": [
            [
                "8b48ac6bcc383dd9",
                "2dd38481da95728c",
                "9cd73ce8d6f70916"
            ]
        ]
    },
    {
        "id": "6a6934b8167249da",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "Motstand GND < 3M",
        "links": [
            "2e182f018666eee7"
        ],
        "x": 1815,
        "y": 580,
        "wires": [
            [
                "e0a9a9d846b8b52b",
                "cace9592b29727c7"
            ]
        ]
    },
    {
        "id": "ad79ffcdcd8fba7e",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "Motstand Skall <1",
        "links": [
            "7082e1ae5fc393fe"
        ],
        "x": 2205,
        "y": 820,
        "wires": [
            [
                "d0d51cb05d31ac3b",
                "9a4774ffd4a060bc"
            ]
        ]
    },
    {
        "id": "b36bae71f9781b51",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "Motstad Advarsel ",
        "links": [
            "c745c4fe2938b106"
        ],
        "x": 1815,
        "y": 400,
        "wires": [
            [
                "44f17d07b26614dc",
                "10ac359b678fd17f"
            ]
        ]
    },
    {
        "id": "44f17d07b26614dc",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "Set True or False",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "OK",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Advarsel",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Feil!!!",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 400,
        "wires": [
            [
                "ad8a481f98ad68a3",
                "632a16f953f5cf10",
                "c611a655db42e6b4"
            ]
        ]
    },
    {
        "id": "0e26cf84710d936b",
        "type": "link in",
        "z": "4711e11d3b408952",
        "g": "3149a1641fb9bcee",
        "name": "tolerance_upper",
        "links": [
            "638896ec52f0faf9"
        ],
        "x": 365,
        "y": 3080,
        "wires": [
            [
                "3654d20252fdd265"
            ]
        ]
    },
    {
        "id": "78eba4bfc7b5be6e",
        "type": "link in",
        "z": "4711e11d3b408952",
        "g": "3149a1641fb9bcee",
        "name": "tolerance_lower",
        "links": [
            "346db99b9738b485"
        ],
        "x": 365,
        "y": 3120,
        "wires": [
            [
                "b2eb1b74f70ba3e6"
            ]
        ]
    },
    {
        "id": "d6e210a445909fa9",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "Test1",
        "links": [
            "bd31c5a0d65dcedf",
            "41f8ef400b4514c6"
        ],
        "x": 1805,
        "y": 300,
        "wires": [
            [
                "edcaa2f7fdfcb8d0"
            ]
        ]
    },
    {
        "id": "edcaa2f7fdfcb8d0",
        "type": "switch",
        "z": "4711e11d3b408952",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "cont",
                "v": "",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1970,
        "y": 300,
        "wires": [
            [
                "308a490ec5722c8b"
            ],
            [
                "9092ee42338a056a"
            ]
        ]
    },
    {
        "id": "9092ee42338a056a",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "test",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2160,
        "y": 340,
        "wires": [
            [
                "308a490ec5722c8b"
            ]
        ]
    },
    {
        "id": "53952a7d07e4035c",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "Test2",
        "links": [
            "29b993bf6b667c3c",
            "8956ff124892fd81"
        ],
        "x": 1815,
        "y": 500,
        "wires": [
            [
                "359e45f33892f39d"
            ]
        ]
    },
    {
        "id": "359e45f33892f39d",
        "type": "switch",
        "z": "4711e11d3b408952",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "cont",
                "v": "",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1970,
        "y": 500,
        "wires": [
            [
                "f2c41c3683f48b40"
            ],
            [
                "bda9d4b160291659"
            ]
        ]
    },
    {
        "id": "bda9d4b160291659",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "test",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2160,
        "y": 540,
        "wires": [
            [
                "f2c41c3683f48b40"
            ]
        ]
    },
    {
        "id": "2fcd261e6f08cea1",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "Test3",
        "links": [
            "195bdd0dbfe7298e",
            "964b05880196c92b",
            "ff64f9cf976422cc"
        ],
        "x": 1815,
        "y": 720,
        "wires": [
            [
                "937e5937fa132b7d"
            ]
        ]
    },
    {
        "id": "937e5937fa132b7d",
        "type": "switch",
        "z": "4711e11d3b408952",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "eq",
                "v": "NA",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1970,
        "y": 720,
        "wires": [
            [
                "336310f1b2c1618c"
            ],
            [
                "336310f1b2c1618c"
            ],
            [
                "5ff86cba089c9710"
            ]
        ]
    },
    {
        "id": "5ff86cba089c9710",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "test",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2120,
        "y": 760,
        "wires": [
            [
                "336310f1b2c1618c"
            ]
        ]
    },
    {
        "id": "d91e4cec97e953f1",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "Tes6",
        "links": [
            "64c3a343624efa4f",
            "7614414c84f03eaa"
        ],
        "x": 1815,
        "y": 1380,
        "wires": [
            [
                "f381e7106abc1db1"
            ]
        ]
    },
    {
        "id": "f381e7106abc1db1",
        "type": "switch",
        "z": "4711e11d3b408952",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "",
                "vt": "num"
            },
            {
                "t": "true"
            },
            {
                "t": "eq",
                "v": "Kjører",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "test 4 (acw) ferdig",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ACW kjører",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Isulasjonstester svarer ikke",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "null",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 1970,
        "y": 1380,
        "wires": [
            [
                "79c666d185d2e775"
            ],
            [
                "20850889fdb58bb8"
            ],
            [
                "20850889fdb58bb8"
            ],
            [
                "20850889fdb58bb8"
            ],
            [
                "20850889fdb58bb8"
            ],
            [
                "20850889fdb58bb8",
                "a09f30baf9fc9782"
            ],
            [
                "20850889fdb58bb8"
            ]
        ]
    },
    {
        "id": "79c666d185d2e775",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "henter resultat",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2130,
        "y": 1340,
        "wires": [
            [
                "20850889fdb58bb8"
            ]
        ]
    },
    {
        "id": "eac229924cfac1af",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "ACW kjører",
        "links": [
            "5ddd5a9b6a42ec94"
        ],
        "x": 1815,
        "y": 1420,
        "wires": [
            [
                "f381e7106abc1db1"
            ]
        ]
    },
    {
        "id": "2dd38481da95728c",
        "type": "link out",
        "z": "4711e11d3b408952",
        "name": "ACW Godkjent",
        "mode": "link",
        "links": [
            "9ce74c621350ed81"
        ],
        "x": 2485,
        "y": 1540,
        "wires": []
    },
    {
        "id": "4b48525d6916ef58",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "link in 5",
        "links": [
            "974d8c81aaf73aad"
        ],
        "x": 2215,
        "y": 1660,
        "wires": [
            [
                "52f86b270bfecc95"
            ]
        ]
    },
    {
        "id": "111b1c8592d804d9",
        "type": "function",
        "z": "4711e11d3b408952",
        "name": "Definer godkjente verdier",
        "func": "// Hent verdier direkte fra global kontekst\nlet motstandStatusObj = global.get(\"motstand_status\") || {};\nlet motstandStatus = motstandStatusObj.status || \"fail\";\n\nlet gbTestStatus = global.get(\"gb_test_status\") || \"fail\";\nlet acwTestStatus = global.get(\"acw_test_status\") || \"fail\";\nlet statusFaseGND = global.get(\"status_Fase/GND\") || \"fail\";\nlet faseGnd = global.get(\"status_Skall/GND\") || \"fail\";\nlet irTestStatus = global.get(\"ir_test_status\") || \"fail\";\n\n// Logg alle verdiene for debugging\nnode.log(`🔍 motstand_status: ${motstandStatus}`);\nnode.log(`🔍 gb_test_status: ${gbTestStatus}`);\nnode.log(`🔍 acw_test_status: ${acwTestStatus}`);\nnode.log(`🔍 statusFaseGND: ${statusFaseGND}`);\nnode.log(`🔍 fase_gnd: ${faseGnd}`);\nnode.log(`🔍 ir_test_status: ${irTestStatus}`);\n\n// Definer hvilke verdier som anses som godkjente for de enkelte tester\nlet validGbTest = (gbTestStatus === \"NA\" || gbTestStatus === \"godkjent\");\nlet validFaseGnd = (faseGnd === \"status_Skall/GND: NA\" || faseGnd === \"godkjent\");\n\n// Opprett en liste for å samle opp hvilke krav som ikke er oppfylt\nlet errors = [];\n\nif (motstandStatus !== \"OK\") {\n    errors.push(`motstand_status er ikke OK (finnes: ${motstandStatus})`);\n}\nif (!validGbTest) {\n    errors.push(`gb_test_status er ikke gyldig (finnes: ${gbTestStatus})`);\n}\nif (acwTestStatus !== \"acw godkjent\") {\n    errors.push(`acw_test_status er ikke 'acw godkjent' (finnes: ${acwTestStatus})`);\n}\nif (statusFaseGND !== \"godkjent\") {\n    errors.push(`status_Fase/GND er ikke 'godkjent' (finnes: ${statusFaseGND})`);\n}\nif (!validFaseGnd) {\n    errors.push(`fase_gnd er ikke gyldig (finnes: ${faseGnd})`);\n}\nif (irTestStatus !== \"ir godkjent\") {\n    errors.push(`ir_test_status er ikke 'ir godkjent' (finnes: ${irTestStatus})`);\n}\n\n// Evaluer testresultatet basert på kriteriene:\nif (errors.length === 0) {\n    msg.payload = \"Godkjent\"; // Alle krav oppfylt\n} else {\n    msg.payload = \"Feil!!!\";  // En eller flere verdier er feil\n    errors.forEach(err => node.warn(err));\n}\n\nglobal.set(\"testResult\", msg.payload)\n\nnode.log(`Resultat: ${msg.payload}`);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3270,
        "y": 1800,
        "wires": [
            [
                "44c64b125d6947f3",
                "c41951cf4a2503d8",
                "7be08c28fbc12459"
            ]
        ]
    },
    {
        "id": "cace9592b29727c7",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fase/gnd",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1960,
        "y": 800,
        "wires": [
            [
                "6aa994fb3ea940d6",
                "c611a655db42e6b4"
            ]
        ]
    },
    {
        "id": "9a4774ffd4a060bc",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "skal/gnd",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2810,
        "y": 820,
        "wires": [
            [
                "c611a655db42e6b4"
            ]
        ]
    },
    {
        "id": "f741c3e0c3e91bd6",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Kjører",
                "fromt": "str",
                "to": "Målinger gjøres nå",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2840,
        "y": 1760,
        "wires": [
            [
                "44c64b125d6947f3",
                "c41951cf4a2503d8"
            ]
        ]
    },
    {
        "id": "0c7192af31c984ee",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "resetting av tekster ",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "payload",
                "fromt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1260,
        "wires": [
            [
                "bd939b90c82cda73"
            ]
        ]
    },
    {
        "id": "d6870189e75bb68e",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "link in 6",
        "links": [
            "fa949f8f367c8c4c"
        ],
        "x": 495,
        "y": 1260,
        "wires": [
            [
                "0c7192af31c984ee"
            ]
        ]
    },
    {
        "id": "ec188053451c5db5",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "fail",
                "fromt": "str",
                "to": "Lav motstand i melleom fase og gjord",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3420,
        "y": 780,
        "wires": [
            [
                "d3fb80ead966f5b0"
            ]
        ]
    },
    {
        "id": "632a16f953f5cf10",
        "type": "switch",
        "z": "4711e11d3b408952",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3270,
        "y": 400,
        "wires": [
            [
                "ae2db1eb0e29c363"
            ]
        ]
    },
    {
        "id": "ae2db1eb0e29c363",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Er feil artikkel valgt?",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3420,
        "y": 400,
        "wires": [
            [
                "d3fb80ead966f5b0"
            ]
        ]
    },
    {
        "id": "6aa994fb3ea940d6",
        "type": "switch",
        "z": "4711e11d3b408952",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "fail",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3270,
        "y": 780,
        "wires": [
            [
                "ec188053451c5db5"
            ]
        ]
    },
    {
        "id": "9cd73ce8d6f70916",
        "type": "switch",
        "z": "4711e11d3b408952",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3250,
        "y": 1460,
        "wires": [
            [
                "706efdb0db670b9b"
            ]
        ]
    },
    {
        "id": "706efdb0db670b9b",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Mulig gjordfeil!",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3400,
        "y": 1460,
        "wires": [
            [
                "d3fb80ead966f5b0"
            ]
        ]
    },
    {
        "id": "f872af62c846b351",
        "type": "switch",
        "z": "4711e11d3b408952",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3270,
        "y": 880,
        "wires": [
            [
                "471fa09b720b5122"
            ]
        ]
    },
    {
        "id": "471fa09b720b5122",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Motstand for høy i mellom gjording og \"skall\"!",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3420,
        "y": 880,
        "wires": [
            [
                "d3fb80ead966f5b0"
            ]
        ]
    },
    {
        "id": "520c699e862f4f9e",
        "type": "comment",
        "z": "4711e11d3b408952",
        "name": "status for testing. ",
        "info": "",
        "x": 3520,
        "y": 1920,
        "wires": []
    },
    {
        "id": "7be08c28fbc12459",
        "type": "link out",
        "z": "4711e11d3b408952",
        "name": "Test godkjent / ikke godkjent",
        "mode": "link",
        "links": [
            "2d2881b5ae4df7c3"
        ],
        "x": 3505,
        "y": 1800,
        "wires": []
    },
    {
        "id": "7b896316bd89a7eb",
        "type": "link out",
        "z": "4711e11d3b408952",
        "name": "resett",
        "mode": "link",
        "links": [
            "0d0467fbf07769d2",
            "54f5942823b8cee5"
        ],
        "x": 2485,
        "y": 1260,
        "wires": []
    },
    {
        "id": "b9d67f6dfa22c881",
        "type": "function",
        "z": "4711e11d3b408952",
        "name": "Teller",
        "func": "// Initialize counter if it doesn't exist\nif (context.get('counter') === undefined) {\n    context.set('counter', 0);\n}\n\n// Check for \"reset\" payload to reset the counter\nif (msg.payload === \"reset\") {\n    context.set('counter', 0);\n    msg.payload = 0;\n} else if (msg.payload === \"Ferdig\") {\n    // Increment the counter for \"Ferdig\" payload\n    var counter = context.get('counter') + 1;\n    context.set('counter', counter);\n    msg.payload = counter;\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1470,
        "wires": [
            [
                "8ad9f34fdfdb30dd",
                "05f6ae1f9c659686"
            ]
        ]
    },
    {
        "id": "6606351889b651a9",
        "type": "inject",
        "z": "4711e11d3b408952",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "reset",
        "payloadType": "str",
        "x": 550,
        "y": 1060,
        "wires": [
            [
                "b9d67f6dfa22c881",
                "de341bd53cd0dd87"
            ]
        ]
    },
    {
        "id": "cdcbc545b413d121",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "Test Avbrutt",
        "links": [
            "81366cdd468be91a",
            "c1394c4b79c65683"
        ],
        "x": 3365,
        "y": 1620,
        "wires": [
            [
                "44c64b125d6947f3",
                "c41951cf4a2503d8"
            ]
        ]
    },
    {
        "id": "171b11995fe3ec88",
        "type": "function",
        "z": "4711e11d3b408952",
        "name": "Teller",
        "func": "// Initialize counter if it doesn't exist\nif (context.get('counter') === undefined) {\n    context.set('counter', 0);\n}\n\n// Check for \"reset\" payload to reset the counter\nif (msg.payload === \"reset\") {\n    context.set('counter', 0);\n    msg.payload = 0;\n} else if (msg.payload === \"Feil!!!\") {\n    // Increment the counter for \"Ferdig\" payload\n    var counter = context.get('counter') + 1;\n    context.set('counter', counter);\n    msg.payload = counter;\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1540,
        "wires": [
            [
                "693e7d6ced5eb56f",
                "5c6dd46d7db08805"
            ]
        ]
    },
    {
        "id": "832a1b79d9f14025",
        "type": "function",
        "z": "4711e11d3b408952",
        "name": "Teller",
        "func": "// Initialize counter if it doesn't exist\nif (context.get('counter') === undefined) {\n    context.set('counter', 0);\n}\n\n// Check for \"reset\" payload to reset the counter\nif (msg.payload === \"reset\") {\n    context.set('counter', 0);\n    msg.payload = 0;\n} else if (msg.payload === \"Godkjent\") {\n    // Increment the counter for \"Ferdig\" payload\n    var counter = context.get('counter') + 1;\n    context.set('counter', counter);\n    msg.payload = counter;\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1600,
        "wires": [
            [
                "33bb9a7bd9da951c",
                "9cfa12c9cf283577"
            ]
        ]
    },
    {
        "id": "241b0e14fe20cd39",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "link in 11",
        "links": [
            "72dc149ee0318259"
        ],
        "x": 375,
        "y": 1540,
        "wires": [
            [
                "171b11995fe3ec88",
                "52b4f03c6c608f28",
                "6b8094d1e0027cc5",
                "ee76b7d5f8c24a14"
            ]
        ]
    },
    {
        "id": "19248df3dc21f2a3",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "link in 12",
        "links": [
            "953e3325dac5ca66"
        ],
        "x": 375,
        "y": 1600,
        "wires": [
            [
                "832a1b79d9f14025",
                "ca75e031dbaa287d",
                "1a9357b237e5cd02",
                "ee76b7d5f8c24a14"
            ]
        ]
    },
    {
        "id": "15f8f6130c730785",
        "type": "switch",
        "z": "4711e11d3b408952",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "bool"
            },
            {
                "t": "eq",
                "v": "Ferdig",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 1100,
        "wires": [
            [
                "e0c944324a3bb574"
            ],
            [
                "050b1eead58e6166"
            ]
        ]
    },
    {
        "id": "e0c944324a3bb574",
        "type": "function",
        "z": "4711e11d3b408952",
        "name": "Start Timer",
        "func": "flow.set(\"startTime\", Date.now());\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "050b1eead58e6166",
        "type": "function",
        "z": "4711e11d3b408952",
        "name": "Stop Timer",
        "func": "var startTime = flow.get(\"startTime\");\nvar endTime = Date.now();\nvar duration = endTime - startTime;\nmsg.payload = \"Testen tok \" + duration + \" millisekunder.\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1140,
        "wires": [
            [
                "8e69a63925aadd5a"
            ]
        ]
    },
    {
        "id": "05f6ae1f9c659686",
        "type": "mqtt out",
        "z": "4711e11d3b408952",
        "name": "",
        "topic": "Antal testet EOL1",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f5787c290a8dd28e",
        "x": 1080,
        "y": 1470,
        "wires": []
    },
    {
        "id": "5c6dd46d7db08805",
        "type": "mqtt out",
        "z": "4711e11d3b408952",
        "name": "",
        "topic": "Antal testet som har feil EOL1",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f5787c290a8dd28e",
        "x": 1040,
        "y": 1530,
        "wires": []
    },
    {
        "id": "9cfa12c9cf283577",
        "type": "mqtt out",
        "z": "4711e11d3b408952",
        "name": "",
        "topic": "Antal testet godkjente EOL1",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f5787c290a8dd28e",
        "x": 1050,
        "y": 1590,
        "wires": []
    },
    {
        "id": "8e69a63925aadd5a",
        "type": "mqtt out",
        "z": "4711e11d3b408952",
        "name": "",
        "topic": "syklustid EOL1",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f5787c290a8dd28e",
        "x": 1400,
        "y": 1140,
        "wires": []
    },
    {
        "id": "f3d006395cea7a14",
        "type": "change",
        "z": "4711e11d3b408952",
        "g": "d991034f145ea417",
        "name": "Farge ACW test",
        "rules": [
            {
                "t": "set",
                "p": "ACW_bg_color",
                "pt": "msg",
                "to": "rgb(28, 251, 255)",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "ACW_text_color",
                "pt": "msg",
                "to": "rgb(5, 5, 5)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 2400,
        "wires": [
            [
                "34623345c7de1c89"
            ]
        ]
    },
    {
        "id": "ca75e031dbaa287d",
        "type": "change",
        "z": "4711e11d3b408952",
        "g": "d991034f145ea417",
        "name": "Farge ACW Godkjent",
        "rules": [
            {
                "t": "set",
                "p": "ACW_bg_color",
                "pt": "msg",
                "to": "rgb(36, 255, 28)",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "ACW_text_color",
                "pt": "msg",
                "to": "rgb(5, 5, 5)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 2480,
        "wires": [
            [
                "34623345c7de1c89"
            ]
        ]
    },
    {
        "id": "6b8094d1e0027cc5",
        "type": "change",
        "z": "4711e11d3b408952",
        "g": "d991034f145ea417",
        "name": "Farge ACW fail",
        "rules": [
            {
                "t": "set",
                "p": "ACW_bg_color",
                "pt": "msg",
                "to": "rgb(255, 36, 28)",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "ACW_text_color",
                "pt": "msg",
                "to": "rgb(255, 253, 252)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 2440,
        "wires": [
            [
                "34623345c7de1c89"
            ]
        ]
    },
    {
        "id": "0ed354236ecc6576",
        "type": "change",
        "z": "4711e11d3b408952",
        "d": true,
        "g": "d991034f145ea417",
        "name": "Farge test",
        "rules": [
            {
                "t": "set",
                "p": "custom_bg_color",
                "pt": "msg",
                "to": "rgb(28, 251, 255)",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "custom_text_color",
                "pt": "msg",
                "to": "rgb(5, 5, 5)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 2520,
        "wires": [
            [
                "34623345c7de1c89"
            ]
        ]
    },
    {
        "id": "1a9357b237e5cd02",
        "type": "change",
        "z": "4711e11d3b408952",
        "d": true,
        "g": "d991034f145ea417",
        "name": "Farge Godkjent",
        "rules": [
            {
                "t": "set",
                "p": "custom_bg_color",
                "pt": "msg",
                "to": "rgb(36, 255, 28)",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "custom_text_color",
                "pt": "msg",
                "to": "rgb(255, 255, 255)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 2560,
        "wires": [
            [
                "34623345c7de1c89"
            ]
        ]
    },
    {
        "id": "52b4f03c6c608f28",
        "type": "change",
        "z": "4711e11d3b408952",
        "d": true,
        "g": "d991034f145ea417",
        "name": "Farge fail",
        "rules": [
            {
                "t": "set",
                "p": "custom_bg_color",
                "pt": "msg",
                "to": "rgb(255, 36, 28)",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "custom_text_color",
                "pt": "msg",
                "to": "rgb(255, 253, 252)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 2600,
        "wires": [
            [
                "34623345c7de1c89"
            ]
        ]
    },
    {
        "id": "872a2ab50a0ff501",
        "type": "comment",
        "z": "4711e11d3b408952",
        "g": "d991034f145ea417",
        "name": "Bakgrunsfarger og stil",
        "info": "",
        "x": 2260,
        "y": 2560,
        "wires": []
    },
    {
        "id": "06da4bceb4d4bafb",
        "type": "comment",
        "z": "4711e11d3b408952",
        "name": "tellere og timere",
        "info": "",
        "x": 1400,
        "y": 1080,
        "wires": []
    },
    {
        "id": "a09f30baf9fc9782",
        "type": "delay",
        "z": "4711e11d3b408952",
        "name": "",
        "pauseType": "delay",
        "timeout": "250",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3170,
        "y": 1400,
        "wires": [
            [
                "d0b1c5f9f7791ca1"
            ]
        ]
    },
    {
        "id": "d0b1c5f9f7791ca1",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Isulasjonstester svarer ikke",
                "fromt": "str",
                "to": "Isulasjonstester svarer ikke (ikke skrud på eller ikke tilkoblet)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3380,
        "y": 1400,
        "wires": [
            [
                "d3fb80ead966f5b0"
            ]
        ]
    },
    {
        "id": "595ba32163ec5784",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "Multimeter svarer ikke",
                "fromt": "str",
                "to": "Multimeter svarer ikke (ikke skrud på eller ikke tilkoblet)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3400,
        "y": 320,
        "wires": [
            [
                "d3fb80ead966f5b0"
            ]
        ]
    },
    {
        "id": "4679a3800a3f7aca",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "Gravering utført, Inspiser Gravering",
        "links": [
            "24bb43d1ed39f1ff",
            "329fe491ca0430f4",
            "7f23a77b9e99df22"
        ],
        "x": 3495,
        "y": 1000,
        "wires": [
            [
                "d3fb80ead966f5b0"
            ]
        ]
    },
    {
        "id": "ee76b7d5f8c24a14",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Ferdig",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1470,
        "wires": [
            [
                "b9d67f6dfa22c881"
            ]
        ]
    },
    {
        "id": "2e7e5301dc7ed6be",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "gb godkjent",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "failed",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "GB",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2140,
        "y": 1200,
        "wires": [
            [
                "419b88831616d489",
                "6e45a22526ac89ff"
            ]
        ]
    },
    {
        "id": "7e2dd3ebce8109c4",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "ir godkjent",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "ir failed",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "IR",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2160,
        "y": 980,
        "wires": [
            [
                "6ac6b180c25b4160",
                "28ed7e8961586535"
            ]
        ]
    },
    {
        "id": "81335a7c7373db09",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "GB God/Dårlig ",
        "links": [
            "3b70592399f25232"
        ],
        "x": 1815,
        "y": 1200,
        "wires": [
            [
                "2e7e5301dc7ed6be"
            ]
        ]
    },
    {
        "id": "0a0f7381c6b75518",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "IR God/Dårlig ",
        "links": [
            "28fd4c1538e1783b"
        ],
        "x": 1815,
        "y": 980,
        "wires": [
            [
                "7e2dd3ebce8109c4"
            ]
        ]
    },
    {
        "id": "632eed675fb38ac0",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "GB tester",
        "links": [
            "195bdd0dbfe7298e",
            "1033270452506701"
        ],
        "x": 1985,
        "y": 1020,
        "wires": [
            [
                "fedf69d0c8aa2ea1"
            ]
        ]
    },
    {
        "id": "2653776fef55cb8d",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "IR tester",
        "links": [
            "c5eb9b581508078d"
        ],
        "x": 2205,
        "y": 860,
        "wires": [
            [
                "e21862b1d83f1e1f"
            ]
        ]
    },
    {
        "id": "6e45a22526ac89ff",
        "type": "link out",
        "z": "4711e11d3b408952",
        "name": "GB Godkjent",
        "mode": "link",
        "links": [
            "f1e2a3bdd0c1e7e2"
        ],
        "x": 2385,
        "y": 1240,
        "wires": []
    },
    {
        "id": "28ed7e8961586535",
        "type": "link out",
        "z": "4711e11d3b408952",
        "name": "IR Godkjent",
        "mode": "link",
        "links": [
            "8242e0d376f9e854"
        ],
        "x": 2625,
        "y": 980,
        "wires": []
    },
    {
        "id": "cab4a1b55d3bddd6",
        "type": "switch",
        "z": "4711e11d3b408952",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "",
                "vt": "num"
            },
            {
                "t": "true"
            },
            {
                "t": "eq",
                "v": "Kjører",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "test 4 (acw) ferdig",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ACW kjører",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Isulasjonstester svarer ikke",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 1970,
        "y": 1100,
        "wires": [
            [
                "4907a125220f1d11"
            ],
            [
                "055af78557af3ba0"
            ],
            [
                "055af78557af3ba0"
            ],
            [
                "055af78557af3ba0"
            ],
            [
                "055af78557af3ba0"
            ],
            [
                "055af78557af3ba0"
            ]
        ]
    },
    {
        "id": "4907a125220f1d11",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "henter resultat",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2130,
        "y": 1060,
        "wires": [
            [
                "055af78557af3ba0"
            ]
        ]
    },
    {
        "id": "76969400dc7b7a7f",
        "type": "switch",
        "z": "4711e11d3b408952",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "",
                "vt": "num"
            },
            {
                "t": "true"
            },
            {
                "t": "eq",
                "v": "Kjører",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "test 4 (acw) ferdig",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "IR kjører",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Isulasjonstester svarer ikke",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "henter resultat",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "test 5 (ir) ferdig",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 1970,
        "y": 900,
        "wires": [
            [
                "eced762ad901f52d"
            ],
            [
                "eddd716ecfc250ee"
            ],
            [
                "eddd716ecfc250ee"
            ],
            [
                "eddd716ecfc250ee"
            ],
            [
                "eddd716ecfc250ee"
            ],
            [
                "eddd716ecfc250ee"
            ],
            [
                "eddd716ecfc250ee"
            ],
            [
                "eddd716ecfc250ee"
            ]
        ]
    },
    {
        "id": "eced762ad901f52d",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "henter resultat",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2120,
        "y": 900,
        "wires": [
            [
                "eddd716ecfc250ee"
            ]
        ]
    },
    {
        "id": "d5f30147866fc36a",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "Tes4",
        "links": [
            "3867a38dc6f1ec80",
            "c5eb9b581508078d"
        ],
        "x": 1815,
        "y": 860,
        "wires": [
            [
                "76969400dc7b7a7f"
            ]
        ]
    },
    {
        "id": "3cc0bb15506fe6e0",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "Tes5",
        "links": [
            "195bdd0dbfe7298e",
            "f8d65e4770d0d3c4"
        ],
        "x": 1805,
        "y": 1100,
        "wires": [
            [
                "cab4a1b55d3bddd6"
            ]
        ]
    },
    {
        "id": "f02017c662df4ca0",
        "type": "change",
        "z": "4711e11d3b408952",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 1100,
        "wires": [
            [
                "15f8f6130c730785"
            ]
        ]
    },
    {
        "id": "6230aa4c6c4804b8",
        "type": "link out",
        "z": "4711e11d3b408952",
        "name": "Resett releer",
        "mode": "link",
        "links": [
            "77969939f368b32b",
            "80904cfb122fe0e6",
            "f8eb2d263d196278"
        ],
        "x": 945,
        "y": 900,
        "wires": []
    },
    {
        "id": "adfd1e178c6af64e",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "IR kjører",
        "links": [
            "e69df45fab49c8dc"
        ],
        "x": 1815,
        "y": 900,
        "wires": [
            [
                "76969400dc7b7a7f"
            ]
        ]
    },
    {
        "id": "7d33b95be9f81b50",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "Ferdig",
        "links": [
            "81366cdd468be91a",
            "2c173dd93cb6dd6b"
        ],
        "x": 2555,
        "y": 1880,
        "wires": [
            [
                "590d4de59f1dd660"
            ]
        ]
    },
    {
        "id": "590d4de59f1dd660",
        "type": "function",
        "z": "4711e11d3b408952",
        "name": "Update Status",
        "func": "const STATUS_FINISHED = 'Ferdig';\nconst STATUS_RUNNING = 'Kjører';\n\n//node.warn(`Update Status incoming payload: ${msg.payload}`); // Debug message for incoming payload\n\nif (msg.payload === STATUS_RUNNING) {\n    global.set('status', STATUS_RUNNING);\n    //node.status({fill: \"blue\", shape: \"dot\", text: \"Kjører\"});\n    //node.warn(\"Status set to Kjører\"); // Debug message for status update\n} else if (msg.payload === STATUS_FINISHED) {\n    global.set('status', STATUS_FINISHED);\n    //node.status({fill: \"green\", shape: \"ring\", text: \"Ferdig\"});\n    //node.warn(\"Status set to Ferdig\"); // Debug message for status update\n}\nreturn null;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2920,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "2344d0c0d49c8a35",
        "type": "inject",
        "z": "4711e11d3b408952",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Ferdig",
        "payloadType": "str",
        "x": 2190,
        "y": 1860,
        "wires": [
            [
                "590d4de59f1dd660"
            ]
        ]
    },
    {
        "id": "ceef7455fc82ab6d",
        "type": "function",
        "z": "4711e11d3b408952",
        "name": "Hent alle globale variabler fra Node-REDs kontekst",
        "func": "// Hent alle globale variabler fra Node-REDs kontekst\nlet allGlobalVars = global.keys().reduce((result, key) => {\n    result[key] = global.get(key);\n    return result;\n}, {});\n\n// Logg ut verdiene for debugging\nnode.log(\"Global kontekst-verdier: \" + JSON.stringify(allGlobalVars, null, 2));\n\n// Send alle verdier som payload\nmsg.payload = allGlobalVars;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 1960,
        "wires": [
            [
                "c9fc3f355b55f490"
            ]
        ]
    },
    {
        "id": "c9fc3f355b55f490",
        "type": "debug",
        "z": "4711e11d3b408952",
        "name": "Alle globale variabler ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2360,
        "y": 1960,
        "wires": []
    },
    {
        "id": "10ac359b678fd17f",
        "type": "switch",
        "z": "4711e11d3b408952",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Feil!!!",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1970,
        "y": 460,
        "wires": [
            [
                "0654903203464a38"
            ]
        ]
    },
    {
        "id": "5415d0deb198adc8",
        "type": "link in",
        "z": "4711e11d3b408952",
        "name": "Målt motstand",
        "links": [
            "0fa48ab128d0d122"
        ],
        "x": 2165,
        "y": 280,
        "wires": [
            [
                "594cf3add409292f"
            ]
        ]
    },
    {
        "id": "2b6f5e24222922d2",
        "type": "link out",
        "z": "4711e11d3b408952",
        "name": "Test ferdig",
        "mode": "link",
        "links": [
            "1030f34f550bcb1a",
            "ab8bf6cb0ab04282"
        ],
        "x": 2085,
        "y": 1740,
        "wires": []
    },
    {
        "id": "03505c1c2ca4e575",
        "type": "function",
        "z": "4711e11d3b408952",
        "name": "Slett Global variabel 'status' ",
        "func": "global.set(\"status\", undefined);\nglobal.set(\"dummy\", \"Ingen\")\nglobal.set(\"Grønn_dummy_kjort\", false);\nglobal.set(\"Rod_dummy_kjort\", false);\nnode.log(\"Global variabel 'status' er slettet\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "6d87c042cb401ba5",
        "type": "ui_button",
        "z": "4711e11d3b408952",
        "name": "",
        "group": "18cc9cb264bf256a",
        "order": 26,
        "width": 6,
        "height": 2,
        "passthru": true,
        "label": "Resett teller",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "reset",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 550,
        "y": 1020,
        "wires": [
            [
                "b9d67f6dfa22c881",
                "171b11995fe3ec88",
                "832a1b79d9f14025",
                "de341bd53cd0dd87"
            ]
        ]
    },
    {
        "id": "6c6a38779b6dd262",
        "type": "ui_text",
        "z": "4711e11d3b408952",
        "group": "18cc9cb264bf256a",
        "order": 11,
        "width": 5,
        "height": 2,
        "name": "",
        "label": "Motstand fase/GND",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "ACW-custom-card",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2410,
        "y": 460,
        "wires": []
    },
    {
        "id": "31af42971b2ec94b",
        "type": "ui_text",
        "z": "4711e11d3b408952",
        "group": "18cc9cb264bf256a",
        "order": 18,
        "width": 5,
        "height": 2,
        "name": "",
        "label": "Motstand Skall/GND",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "ACW-custom-card",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2400,
        "y": 640,
        "wires": []
    },
    {
        "id": "23f85787f5d483df",
        "type": "ui_text",
        "z": "4711e11d3b408952",
        "g": "3149a1641fb9bcee",
        "group": "b4a34a1e992bb50d",
        "order": 2,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "Spenning ",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "Lucida Sans Typewriter,Lucida Console,Monaco,monospace",
        "fontSize": 16,
        "color": "#000000",
        "x": 490,
        "y": 3040,
        "wires": []
    },
    {
        "id": "dc17eec2a604396c",
        "type": "ui_text",
        "z": "4711e11d3b408952",
        "g": "3149a1641fb9bcee",
        "group": "b4a34a1e992bb50d",
        "order": 1,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "Effekt ",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "Lucida Sans Typewriter,Lucida Console,Monaco,monospace",
        "fontSize": 16,
        "color": "#000000",
        "x": 480,
        "y": 2920,
        "wires": []
    },
    {
        "id": "ae9bf0dae041a0ae",
        "type": "ui_text",
        "z": "4711e11d3b408952",
        "g": "3149a1641fb9bcee",
        "group": "b4a34a1e992bb50d",
        "order": 3,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "Strøm ",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "Lucida Sans Typewriter,Lucida Console,Monaco,monospace",
        "fontSize": 16,
        "color": "#000000",
        "x": 480,
        "y": 2960,
        "wires": []
    },
    {
        "id": "bd47557dbb096512",
        "type": "ui_text",
        "z": "4711e11d3b408952",
        "g": "3149a1641fb9bcee",
        "group": "b4a34a1e992bb50d",
        "order": 4,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "Motstand ",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "Lucida Sans Typewriter,Lucida Console,Monaco,monospace",
        "fontSize": 16,
        "color": "#000000",
        "x": 490,
        "y": 3000,
        "wires": []
    },
    {
        "id": "8afa7fa8a6fab743",
        "type": "ui_text",
        "z": "4711e11d3b408952",
        "group": "18cc9cb264bf256a",
        "order": 6,
        "width": 6,
        "height": 2,
        "name": "",
        "label": "Målt Effekt",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "ACW-custom-card",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2430,
        "y": 1600,
        "wires": []
    },
    {
        "id": "e981a8d3d612e2af",
        "type": "ui_text",
        "z": "4711e11d3b408952",
        "group": "18cc9cb264bf256a",
        "order": 7,
        "width": 13,
        "height": 2,
        "name": "",
        "label": "ACW",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "ACW-custom-card",
        "style": "",
        "font": "",
        "fontSize": "9",
        "color": "#ffffff",
        "x": 2450,
        "y": 1320,
        "wires": []
    },
    {
        "id": "3654d20252fdd265",
        "type": "ui_text",
        "z": "4711e11d3b408952",
        "g": "3149a1641fb9bcee",
        "group": "b4a34a1e992bb50d",
        "order": 5,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "Toleranse Øvre Grense",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "Lucida Sans Typewriter,Lucida Console,Monaco,monospace",
        "fontSize": 16,
        "color": "#000000",
        "x": 540,
        "y": 3080,
        "wires": []
    },
    {
        "id": "b2eb1b74f70ba3e6",
        "type": "ui_text",
        "z": "4711e11d3b408952",
        "g": "3149a1641fb9bcee",
        "group": "b4a34a1e992bb50d",
        "order": 6,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "Toleranse Nedre Grense",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "Lucida Sans Typewriter,Lucida Console,Monaco,monospace",
        "fontSize": 16,
        "color": "#000000",
        "x": 540,
        "y": 3120,
        "wires": []
    },
    {
        "id": "52f86b270bfecc95",
        "type": "ui_text",
        "z": "4711e11d3b408952",
        "group": "18cc9cb264bf256a",
        "order": 13,
        "width": 6,
        "height": 2,
        "name": "",
        "label": "Målt Strøm",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "ACW-custom-card",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2430,
        "y": 1660,
        "wires": []
    },
    {
        "id": "44c64b125d6947f3",
        "type": "ui_text",
        "z": "4711e11d3b408952",
        "group": "18cc9cb264bf256a",
        "order": 42,
        "width": 11,
        "height": 4,
        "name": "Status for test",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "Lucida Sans Typewriter,Lucida Console,Monaco,monospace",
        "fontSize": "34",
        "color": "#000000",
        "x": 3610,
        "y": 1560,
        "wires": []
    },
    {
        "id": "594cf3add409292f",
        "type": "ui_text",
        "z": "4711e11d3b408952",
        "group": "18cc9cb264bf256a",
        "order": 4,
        "width": 5,
        "height": 2,
        "name": "",
        "label": "Motstand på element",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "ACW-custom-card",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2400,
        "y": 280,
        "wires": []
    },
    {
        "id": "d3fb80ead966f5b0",
        "type": "ui_text",
        "z": "4711e11d3b408952",
        "group": "18cc9cb264bf256a",
        "order": 51,
        "width": 12,
        "height": 2,
        "name": "Meldinger",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 3700,
        "y": 980,
        "wires": []
    },
    {
        "id": "c41951cf4a2503d8",
        "type": "ui_text",
        "z": "4711e11d3b408952",
        "group": "3928239fec72f2e8",
        "order": 18,
        "width": 14,
        "height": 1,
        "name": "Status for test",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "Lucida Sans Typewriter,Lucida Console,Monaco,monospace",
        "fontSize": "34",
        "color": "#000000",
        "x": 3610,
        "y": 1680,
        "wires": []
    },
    {
        "id": "8ad9f34fdfdb30dd",
        "type": "ui_text",
        "z": "4711e11d3b408952",
        "group": "18cc9cb264bf256a",
        "order": 28,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "antall testet",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "Lucida Sans Typewriter,Lucida Console,Monaco,monospace",
        "fontSize": "20",
        "color": "#000000",
        "x": 1100,
        "y": 1410,
        "wires": []
    },
    {
        "id": "693e7d6ced5eb56f",
        "type": "ui_text",
        "z": "4711e11d3b408952",
        "group": "18cc9cb264bf256a",
        "order": 30,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "antall med feil",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "Lucida Sans Typewriter,Lucida Console,Monaco,monospace",
        "fontSize": "20",
        "color": "#000000",
        "x": 780,
        "y": 1540,
        "wires": []
    },
    {
        "id": "33bb9a7bd9da951c",
        "type": "ui_text",
        "z": "4711e11d3b408952",
        "group": "18cc9cb264bf256a",
        "order": 32,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "antall Godkjente",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "Lucida Sans Typewriter,Lucida Console,Monaco,monospace",
        "fontSize": "20",
        "color": "#000000",
        "x": 780,
        "y": 1600,
        "wires": []
    },
    {
        "id": "e21862b1d83f1e1f",
        "type": "ui_text",
        "z": "4711e11d3b408952",
        "group": "18cc9cb264bf256a",
        "order": 14,
        "width": 13,
        "height": 2,
        "name": "",
        "label": "IR",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "ACW-custom-card",
        "style": "",
        "font": "",
        "fontSize": "9",
        "color": "#ffffff",
        "x": 2450,
        "y": 840,
        "wires": []
    },
    {
        "id": "fedf69d0c8aa2ea1",
        "type": "ui_text",
        "z": "4711e11d3b408952",
        "group": "18cc9cb264bf256a",
        "order": 21,
        "width": 13,
        "height": 2,
        "name": "",
        "label": "GB",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "ACW-custom-card",
        "style": "",
        "font": "",
        "fontSize": "9",
        "color": "#ffffff",
        "x": 2460,
        "y": 1020,
        "wires": []
    },
    {
        "id": "34623345c7de1c89",
        "type": "ui_template",
        "z": "4711e11d3b408952",
        "g": "d991034f145ea417",
        "group": "18cc9cb264bf256a",
        "name": "",
        "order": 57,
        "width": 20,
        "height": 1,
        "format": "<style>\n    .ACW-custom-card {\n        background-color: {{msg.ACW_bg_color}} !important;\n        color: {{msg.ACW_text_color}} !important;\n        font-family: 'Lucida Console', monospace;\n        font-size: 16px; /* Setter skriftstørrelsen til 16px */\n        font-weight: bold; /* Gjør teksten fet */\n        border: 2px solid black; /* Legger til en svart bord med 2px tykkelse */\n        border-radius: 10px; /* Gir bordet avrundede hjørner */\n        padding: 10px; /* Legger til padding inne i kortet */\n    }\n\n    .custom-card {\n        background-color: {{msg.custom_bg_color}} !important;\n        color: {{msg.custom_text_color}} !important;\n        font-family: 'Lucida Console', monospace;\n        font-size: 16px; /* Setter skriftstørrelsen til 16px */\n        font-weight: bold; /* Gjør teksten fet */\n        border: 2px solid black; /* Legger til en svart bord med 2px tykkelse */\n        border-radius: 10px; /* Gir bordet avrundede hjørner */\n        padding: 10px; /* Legger til padding inne i kortet */\n    }\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 2140,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "8b48ac6bcc383dd9",
        "type": "ui_led",
        "z": "4711e11d3b408952",
        "order": 10,
        "group": "18cc9cb264bf256a",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff1a1a",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#4dff4d",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#808080",
                "value": "reset",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showGlow": true,
        "name": "ACW Godkjent",
        "x": 2420,
        "y": 1480,
        "wires": []
    },
    {
        "id": "e0a9a9d846b8b52b",
        "type": "ui_led",
        "z": "4711e11d3b408952",
        "order": 16,
        "group": "18cc9cb264bf256a",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff1a1a",
                "value": "fail",
                "valueType": "str"
            },
            {
                "color": "#4dff4d",
                "value": "godkjent",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "Multimeter svarer ikke",
                "valueType": "str"
            },
            {
                "color": "#808080",
                "value": "reset",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showGlow": true,
        "name": "Motstand gnd",
        "x": 2420,
        "y": 580,
        "wires": []
    },
    {
        "id": "d0d51cb05d31ac3b",
        "type": "ui_led",
        "z": "4711e11d3b408952",
        "order": 23,
        "group": "18cc9cb264bf256a",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff1a1a",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#4dff4d",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#ff0000",
                "value": "Multimeter svarer ikke",
                "valueType": "str"
            },
            {
                "color": "#808080",
                "value": "reset",
                "valueType": "str"
            },
            {
                "color": "#808080",
                "value": "NA",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showGlow": true,
        "name": "Skall/GND",
        "x": 2430,
        "y": 760,
        "wires": []
    },
    {
        "id": "308a490ec5722c8b",
        "type": "ui_led",
        "z": "4711e11d3b408952",
        "order": 5,
        "group": "18cc9cb264bf256a",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#0400ff",
                "value": "Kjører",
                "valueType": "str"
            },
            {
                "color": "#ffff00",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#00ff00",
                "value": "test",
                "valueType": "str"
            },
            {
                "color": "#808080",
                "value": "reset",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showGlow": true,
        "name": "Test1",
        "x": 2450,
        "y": 340,
        "wires": []
    },
    {
        "id": "f2c41c3683f48b40",
        "type": "ui_led",
        "z": "4711e11d3b408952",
        "order": 12,
        "group": "18cc9cb264bf256a",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#0400ff",
                "value": "Kjører",
                "valueType": "str"
            },
            {
                "color": "#ffff00",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#00ff00",
                "value": "test",
                "valueType": "str"
            },
            {
                "color": "#808080",
                "value": "reset",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showGlow": true,
        "name": "Test2",
        "x": 2450,
        "y": 520,
        "wires": []
    },
    {
        "id": "336310f1b2c1618c",
        "type": "ui_led",
        "z": "4711e11d3b408952",
        "order": 19,
        "group": "18cc9cb264bf256a",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#0400ff",
                "value": "Kjører",
                "valueType": "str"
            },
            {
                "color": "#ffff00",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#00ff00",
                "value": "test",
                "valueType": "str"
            },
            {
                "color": "#808080",
                "value": "NA",
                "valueType": "str"
            },
            {
                "color": "#808080",
                "value": "reset",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showGlow": true,
        "name": "Test3",
        "x": 2450,
        "y": 700,
        "wires": []
    },
    {
        "id": "c7049ce7d7b74946",
        "type": "ui_led",
        "z": "4711e11d3b408952",
        "order": 8,
        "group": "18cc9cb264bf256a",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#0a12ff",
                "value": "Kjører",
                "valueType": "str"
            },
            {
                "color": "#ffea00",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#00ff00",
                "value": "test 4 (acw) ferdig",
                "valueType": "str"
            },
            {
                "color": "#0a12ff",
                "value": "henter resultat",
                "valueType": "str"
            },
            {
                "color": "#ffa50a",
                "value": "ACW kjører",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "Isulasjonstester svarer ikke",
                "valueType": "str"
            },
            {
                "color": "#808080",
                "value": "reset",
                "valueType": "str"
            },
            {
                "color": "#808080",
                "value": "null",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": true,
        "shape": "square",
        "showGlow": true,
        "name": "Test6",
        "x": 2450,
        "y": 1400,
        "wires": []
    },
    {
        "id": "ad8a481f98ad68a3",
        "type": "ui_led",
        "z": "4711e11d3b408952",
        "order": 9,
        "group": "18cc9cb264bf256a",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff1a1a",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#4dff4d",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#ff0000",
                "value": "Multimeter svarer ikke",
                "valueType": "str"
            },
            {
                "color": "#808080",
                "value": "reset",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showGlow": true,
        "name": "Motstand god/dårlig",
        "x": 2410,
        "y": 400,
        "wires": []
    },
    {
        "id": "6ac6b180c25b4160",
        "type": "ui_led",
        "z": "4711e11d3b408952",
        "order": 17,
        "group": "18cc9cb264bf256a",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff1a1a",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#4dff4d",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#808080",
                "value": "reset",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showGlow": true,
        "name": "IR Godkjent",
        "x": 2430,
        "y": 960,
        "wires": []
    },
    {
        "id": "419b88831616d489",
        "type": "ui_led",
        "z": "4711e11d3b408952",
        "order": 25,
        "group": "18cc9cb264bf256a",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff1a1a",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#4dff4d",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#808080",
                "value": "reset",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showGlow": true,
        "name": "GB Godkjent",
        "x": 2430,
        "y": 1200,
        "wires": []
    },
    {
        "id": "5f8ef7d0a058c23f",
        "type": "ui_led",
        "z": "4711e11d3b408952",
        "order": 22,
        "group": "18cc9cb264bf256a",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#0a12ff",
                "value": "Kjører",
                "valueType": "str"
            },
            {
                "color": "#ffea00",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#00ff00",
                "value": "test 4 (acw) ferdig",
                "valueType": "str"
            },
            {
                "color": "#0a12ff",
                "value": "henter resultat",
                "valueType": "str"
            },
            {
                "color": "#fa9200",
                "value": "ACW kjører",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "Isulasjonstester svarer ikke",
                "valueType": "str"
            },
            {
                "color": "#808080",
                "value": "reset",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": true,
        "shape": "square",
        "showGlow": true,
        "name": "Test5",
        "x": 2450,
        "y": 1120,
        "wires": []
    },
    {
        "id": "dfed6b8152f52790",
        "type": "ui_led",
        "z": "4711e11d3b408952",
        "order": 15,
        "group": "18cc9cb264bf256a",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#0a12ff",
                "value": "Kjører",
                "valueType": "str"
            },
            {
                "color": "#ffea00",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "#00ff00",
                "value": "test 5 (ir) ferdig",
                "valueType": "str"
            },
            {
                "color": "#0a12ff",
                "value": "henter resultat",
                "valueType": "str"
            },
            {
                "color": "#fa9200",
                "value": "IR kjører",
                "valueType": "str"
            },
            {
                "color": "#ff0000",
                "value": "Isulasjonstester svarer ikke",
                "valueType": "str"
            },
            {
                "color": "#808080",
                "value": "reset",
                "valueType": "str"
            },
            {
                "color": "#ffff00",
                "value": "henter resultat",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showGlow": true,
        "name": "Test4",
        "x": 2450,
        "y": 900,
        "wires": []
    },
    {
        "id": "8f0e422d740c7b1f",
        "type": "comment",
        "z": "e4e311bdd42753f7",
        "g": "9aa11dd729020c1c",
        "name": "Legg inn element",
        "info": "Sjekker først om artikkel finnes fra før av",
        "x": 160,
        "y": 760,
        "wires": []
    },
    {
        "id": "bd7a22da3b98031a",
        "type": "link out",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "name": "FraDatabase",
        "mode": "link",
        "links": [
            "ce299d13039572b1"
        ],
        "x": 825,
        "y": 80,
        "wires": []
    },
    {
        "id": "9c7806eedc376a26",
        "type": "switch",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "name": "",
        "property": "payload[0].elementnr",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 950,
        "y": 260,
        "wires": [
            [
                "1ec9814e31693484"
            ]
        ]
    },
    {
        "id": "1ec9814e31693484",
        "type": "change",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload[0].elementnr",
                "pt": "msg",
                "to": "element nummet kke funnet",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "c06bd2d5ba672540",
        "type": "switch",
        "z": "e4e311bdd42753f7",
        "g": "9aa11dd729020c1c",
        "name": "Check Search Result",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 620,
        "y": 800,
        "wires": [
            [
                "8b8dc480b470da49"
            ],
            [
                "c1afdd1cb1dc3eb8"
            ]
        ]
    },
    {
        "id": "c1afdd1cb1dc3eb8",
        "type": "change",
        "z": "e4e311bdd42753f7",
        "g": "9aa11dd729020c1c",
        "name": "No Search Result",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Elementnummeret ble ikke funnet.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 820,
        "wires": [
            [
                "a1388b27105ff53b"
            ]
        ]
    },
    {
        "id": "8b8dc480b470da49",
        "type": "change",
        "z": "e4e311bdd42753f7",
        "g": "9aa11dd729020c1c",
        "name": "Fill Search Result",
        "rules": [
            {
                "t": "set",
                "p": "formdata",
                "pt": "flow",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 780,
        "wires": [
            [
                "b44214e4f4edd564"
            ]
        ]
    },
    {
        "id": "b44214e4f4edd564",
        "type": "function",
        "z": "e4e311bdd42753f7",
        "g": "9aa11dd729020c1c",
        "name": "Load Form Data",
        "func": "var formData = flow.get('formdata');\nmsg.payload = formData;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 780,
        "wires": [
            [
                "d77c80dacf4a87f4"
            ]
        ]
    },
    {
        "id": "bbddc0993c20a149",
        "type": "function",
        "z": "e4e311bdd42753f7",
        "g": "9aa11dd729020c1c",
        "name": "Prepare UPSERT Data",
        "func": "const {elementnr, effekt, spenning, nominell, min, max, toleransenegativ, toleransepositiv} = msg.payload;\nmsg.params = [elementnr, effekt, spenning, nominell, min, max, toleransenegativ, toleransepositiv, effekt, spenning, nominell, min, max, toleransenegativ, toleransepositiv];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 780,
        "wires": [
            [
                "d5f436454daeaae2"
            ]
        ]
    },
    {
        "id": "039769ce98c79966",
        "type": "switch",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "name": "",
        "property": "payload[0].artikkelnr",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 950,
        "y": 160,
        "wires": [
            [
                "5e7e579cbfa37c61"
            ]
        ]
    },
    {
        "id": "5e7e579cbfa37c61",
        "type": "change",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload[0].artikkelnr",
                "pt": "msg",
                "to": "Art.no ikke funnet",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1960,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "e02dd6c4d4f61180",
        "type": "function",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "Prepare UPSERT Data",
        "func": "const { artikkelnr, elementnr1, elementnr2, elementnr3, elementnr4, effekt, spenning, nominell, min, max, toleransenegativ, toleransepositiv } = msg.payload;\n\n// Function to convert empty strings to null for numeric fields\nfunction convertToNullIfEmpty(value) {\n    return value === \"\" ? null : value;\n}\n\nmsg.params = [\n    artikkelnr,\n    elementnr1,\n    elementnr2,\n    elementnr3,\n    elementnr4,\n    convertToNullIfEmpty(effekt),\n    convertToNullIfEmpty(spenning),\n    convertToNullIfEmpty(nominell),\n    convertToNullIfEmpty(min),\n    convertToNullIfEmpty(max),\n    convertToNullIfEmpty(toleransenegativ),\n    convertToNullIfEmpty(toleransepositiv),\n    elementnr1,\n    elementnr2,\n    elementnr3,\n    elementnr4,\n    convertToNullIfEmpty(effekt),\n    convertToNullIfEmpty(spenning),\n    convertToNullIfEmpty(nominell),\n    convertToNullIfEmpty(min),\n    convertToNullIfEmpty(max),\n    convertToNullIfEmpty(toleransenegativ),\n    convertToNullIfEmpty(toleransepositiv)\n];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 960,
        "wires": [
            [
                "790068d7afcf38ab"
            ]
        ]
    },
    {
        "id": "f969e910ca1e3466",
        "type": "switch",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "Check Search Result",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 640,
        "y": 980,
        "wires": [
            [
                "a672a1cf024ce4f9"
            ],
            [
                "7cd79890a3df009a"
            ]
        ]
    },
    {
        "id": "a672a1cf024ce4f9",
        "type": "change",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "Fill Search Result",
        "rules": [
            {
                "t": "set",
                "p": "formdata",
                "pt": "flow",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 960,
        "wires": [
            [
                "bf22d2df7ad986d6",
                "90bfb7d2562e71f4"
            ]
        ]
    },
    {
        "id": "7cd79890a3df009a",
        "type": "change",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "No Search Result",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Artikkel ble ikke funnet.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1000,
        "wires": [
            [
                "28227cf7a3ed80aa"
            ]
        ]
    },
    {
        "id": "bf22d2df7ad986d6",
        "type": "function",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "Load Form Data",
        "func": "var formData = flow.get('formdata');\nmsg.payload = formData;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1060,
        "y": 960,
        "wires": [
            [
                "65f5fd97d58f285e"
            ]
        ]
    },
    {
        "id": "90bfb7d2562e71f4",
        "type": "change",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Artikkel Funnet",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 920,
        "wires": [
            [
                "42c87ac7427cf776"
            ]
        ]
    },
    {
        "id": "5ae32b6f3cb3bc18",
        "type": "change",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Artikkel oppdatert",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 960,
        "wires": [
            [
                "946645fcf81a4b97"
            ]
        ]
    },
    {
        "id": "974ce9e2f2beb8c8",
        "type": "link in",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "link in 1",
        "links": [
            "946645fcf81a4b97",
            "42c87ac7427cf776",
            "28227cf7a3ed80aa",
            "246b630a8de64b06",
            "70aebba0ccf07097",
            "5a1add7e4fb3b493"
        ],
        "x": 155,
        "y": 1280,
        "wires": [
            [
                "c31c9512b837feb5"
            ]
        ]
    },
    {
        "id": "42c87ac7427cf776",
        "type": "link out",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "974ce9e2f2beb8c8"
        ],
        "x": 1295,
        "y": 920,
        "wires": []
    },
    {
        "id": "28227cf7a3ed80aa",
        "type": "link out",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "974ce9e2f2beb8c8"
        ],
        "x": 1055,
        "y": 1000,
        "wires": []
    },
    {
        "id": "946645fcf81a4b97",
        "type": "link out",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "974ce9e2f2beb8c8"
        ],
        "x": 2085,
        "y": 960,
        "wires": []
    },
    {
        "id": "68da8e6d6b930b4d",
        "type": "switch",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "Check Search Result",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 700,
        "y": 1160,
        "wires": [
            [
                "7bd233cce4697ac1"
            ],
            [
                "ca42bd0e1a27aa5f"
            ]
        ]
    },
    {
        "id": "53e99dfba820c8b1",
        "type": "switch",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "Check Search Result",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 700,
        "y": 1220,
        "wires": [
            [
                "7bd233cce4697ac1"
            ],
            [
                "f8c2974b55d7c9d6"
            ]
        ]
    },
    {
        "id": "c97b24f252a0e5b9",
        "type": "change",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "element1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 1160,
        "wires": [
            [
                "68da8e6d6b930b4d"
            ]
        ]
    },
    {
        "id": "d327e31a19cf9e12",
        "type": "change",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "element2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 1220,
        "wires": [
            [
                "53e99dfba820c8b1"
            ]
        ]
    },
    {
        "id": "246b630a8de64b06",
        "type": "link out",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "974ce9e2f2beb8c8"
        ],
        "x": 1035,
        "y": 1120,
        "wires": []
    },
    {
        "id": "70aebba0ccf07097",
        "type": "link out",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "974ce9e2f2beb8c8"
        ],
        "x": 1035,
        "y": 1240,
        "wires": []
    },
    {
        "id": "ca42bd0e1a27aa5f",
        "type": "change",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Data for ellement 1 er ikke funnet i database",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 1120,
        "wires": [
            [
                "246b630a8de64b06"
            ]
        ]
    },
    {
        "id": "f8c2974b55d7c9d6",
        "type": "change",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Data for ellement 2 er ikke funnet i database",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 1240,
        "wires": [
            [
                "70aebba0ccf07097"
            ]
        ]
    },
    {
        "id": "7bd233cce4697ac1",
        "type": "function",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "Behandle element data",
        "func": "// Hent payload fra element1 og element2\nlet element1 = flow.get('element1') || null;\nlet element2 = flow.get('element2') || null;\n\n// Hvis meldingen gjelder element1, lagre data og oppdater element1\nif (msg.topic === 'element1') {\n    element1 = msg.payload[0];\n    flow.set('element1', element1);\n}\n\n// Hvis meldingen gjelder element2, lagre data og oppdater element2\nif (msg.topic === 'element2') {\n    element2 = msg.payload[0];\n    flow.set('element2', element2);\n}\n\n// Funksjon for å beregne parallelle motstander\nfunction parallelResistance(r1, r2) {\n    return (r1 * r2) / (r1 + r2);\n}\n\n// Hvis kun element1 er tilstede, send det videre som det er\nif (element1 && !element2) {\n    let nominell = parseFloat(element1.nominell);\n    let toleranseNegativ = parseFloat(element1.toleransenegativ);\n    let toleransePositiv = parseFloat(element1.toleransepositiv);\n    \n    msg.payload = {\n        elementnr1: element1.elementnr,\n        elementnr2: \"\",\n        effekt: element1.effekt,\n        spenning: element1.spenning,\n        nominell: nominell.toFixed(2),\n        min: (nominell - toleranseNegativ).toFixed(2),\n        max: (nominell + toleransePositiv).toFixed(2),\n        toleransenegativ: toleranseNegativ.toFixed(2),\n        toleransepositiv: toleransePositiv.toFixed(2)\n    };\n    return [msg, null];  // Send på første utgang\n}\n\n// Hvis både element1 og element2 er tilstede, kombiner dem\nif (element1 && element2) {\n    // Sjekk om spenningen er lik\n    if (element1.spenning !== element2.spenning) {\n        let warningMsg = {\n            payload: {\n                warning: \"Spenningene er ikke like! Kan ikke kombinere elementene.\",\n                elementnr1: element1.elementnr,\n                spenning1: element1.spenning,\n                elementnr2: element2.elementnr,\n                spenning2: element2.spenning\n            }\n        };\n        return [null, warningMsg];  // Send på andre utgang\n    }\n\n    // Konverter verdier til tall\n    let nominell1 = parseFloat(element1.nominell);\n    let nominell2 = parseFloat(element2.nominell);\n    let toleranseNegativ1 = parseFloat(element1.toleransenegativ);\n    let toleranseNegativ2 = parseFloat(element2.toleransenegativ);\n    let toleransePositiv1 = parseFloat(element1.toleransepositiv);\n    let toleransePositiv2 = parseFloat(element2.toleransepositiv);\n\n    // Kombiner effekt\n    let combinedEffekt = element1.effekt + element2.effekt;\n\n    // Beregn kombinert motstand\n    let combinedNominell = parallelResistance(nominell1, nominell2);\n    combinedNominell = parseFloat(combinedNominell.toFixed(2));\n\n    // Beregn nye min og max verdier\n    let combinedMin = combinedNominell - Math.max(toleranseNegativ1, toleranseNegativ2);\n    let combinedMax = combinedNominell + Math.max(toleransePositiv1, toleransePositiv2);\n\n    combinedMin = parseFloat(combinedMin.toFixed(2));\n    combinedMax = parseFloat(combinedMax.toFixed(2));\n\n    // Finn største toleranser\n    let combinedToleranseNegativ = Math.max(toleranseNegativ1, toleranseNegativ2);\n    let combinedToleransePositiv = Math.max(toleransePositiv1, toleransePositiv2);\n\n    // Lag kombinert objekt\n    let combinedElement = {\n        elementnr1: element1.elementnr,\n        elementnr2: element2.elementnr,\n        effekt: combinedEffekt,\n        spenning: element1.spenning,\n        nominell: combinedNominell,\n        min: combinedMin,\n        max: combinedMax,\n        toleransenegativ: combinedToleranseNegativ,\n        toleransepositiv: combinedToleransePositiv\n    };\n\n    msg.payload = combinedElement;\n\n    // Nullstill kontekstvariablene etter at data er kombinert og sendt\n    flow.set('element1', null);\n    flow.set('element2', null);\n\n    return [msg, null];  // Send på første utgang\n}\n\nreturn [null, null];  // Returner ingenting hvis ingen betingelser er oppfylt\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1180,
        "wires": [
            [
                "65f5fd97d58f285e",
                "5a1add7e4fb3b493"
            ],
            [
                "e4853de8cdd2e5f9"
            ]
        ]
    },
    {
        "id": "e4853de8cdd2e5f9",
        "type": "change",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Spenningene er ikke like! Kan ikke kombinere elementene.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1200,
        "wires": [
            [
                "5a1add7e4fb3b493"
            ]
        ]
    },
    {
        "id": "5a1add7e4fb3b493",
        "type": "link out",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "974ce9e2f2beb8c8"
        ],
        "x": 1415,
        "y": 1180,
        "wires": []
    },
    {
        "id": "302e2946691bd59e",
        "type": "comment",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "Legg inn artikkel",
        "info": "",
        "x": 180,
        "y": 920,
        "wires": []
    },
    {
        "id": "21351487dcb5902c",
        "type": "comment",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "name": "Søk etter Artikkel eller element",
        "info": "",
        "x": 200,
        "y": 620,
        "wires": []
    },
    {
        "id": "6acd9d6e3935e43d",
        "type": "change",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload[0].elementnr1",
                "pt": "msg",
                "to": "payload[0].elementnr",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload[0].elementnr",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 480,
        "wires": [
            [
                "bd44eb56e4d6f72b"
            ]
        ]
    },
    {
        "id": "f890f723d067be97",
        "type": "link in",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "name": "valgt ellement",
        "links": [
            "7103bf503d9fa40c"
        ],
        "x": 105,
        "y": 320,
        "wires": [
            [
                "d2bf132579a17afb"
            ]
        ]
    },
    {
        "id": "d2bf132579a17afb",
        "type": "function",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "name": "function 22",
        "func": "// Sjekk om payload er en streng\nif (typeof msg.payload === \"string\") {\n    // Lag en ny struktur som en liste (array) med elementnr\n    msg.payload = [{ elementnr: msg.payload }];\n} else if (!Array.isArray(msg.payload) || !msg.payload[0].elementnr) {\n    // Hvis payload ikke er en liste eller ikke har elementnr, lag ny struktur\n    msg.payload = [{ elementnr: msg.payload }];\n}\n\n// Returner meldingen\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 320,
        "wires": [
            [
                "ce6ef18d6a298e12"
            ]
        ]
    },
    {
        "id": "e3307533596a0944",
        "type": "link in",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "name": "link in 13",
        "links": [
            "49bfaa6cb8e5805b"
        ],
        "x": 105,
        "y": 220,
        "wires": [
            [
                "b680def66a816fff"
            ]
        ]
    },
    {
        "id": "038d6b271c6695d4",
        "type": "ui_form",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "name": "",
        "label": "Søk etter element: (Velg Artikkelnr. for å lage serienr.)",
        "group": "3928239fec72f2e8",
        "order": 11,
        "width": 14,
        "height": 1,
        "options": [
            {
                "label": "Element nummer",
                "value": "Artikkelnummer",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "Artikkelnummer": ""
        },
        "payload": "",
        "submit": "Søk",
        "cancel": "Avbryt",
        "topic": "payload",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 280,
        "y": 380,
        "wires": [
            [
                "51587308833d5c74"
            ]
        ]
    },
    {
        "id": "59a4d167530a361f",
        "type": "ui_form",
        "z": "e4e311bdd42753f7",
        "g": "9aa11dd729020c1c",
        "name": "",
        "label": "Søk etter element:",
        "group": "78895eb88847010d",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Element nummer",
                "value": "elementartnr",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "elementartnr": ""
        },
        "payload": "",
        "submit": "Søk",
        "cancel": "Avbryt",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 170,
        "y": 800,
        "wires": [
            [
                "682a1ce7f3568d3c"
            ]
        ]
    },
    {
        "id": "d77c80dacf4a87f4",
        "type": "ui_form",
        "z": "e4e311bdd42753f7",
        "g": "9aa11dd729020c1c",
        "name": "",
        "label": "Tast inn elementdata:",
        "group": "78895eb88847010d",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Ellement Nummer",
                "value": "elementnr",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Effekt",
                "value": "effekt",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "Spenning",
                "value": "spenning",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "Nominell",
                "value": "nominell",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Min",
                "value": "min",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Maks",
                "value": "max",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Toleranse -",
                "value": "toleransenegativ",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Toleranse +",
                "value": "toleransepositiv",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "elementnr": "",
            "effekt": "",
            "spenning": "",
            "nominell": "",
            "min": "",
            "max": "",
            "toleransenegativ": "",
            "toleransepositiv": ""
        },
        "payload": "",
        "submit": "Legg til / Oppdater",
        "cancel": "Avbryt",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 1220,
        "y": 780,
        "wires": [
            [
                "bbddc0993c20a149"
            ]
        ]
    },
    {
        "id": "1c86312da44b477b",
        "type": "ui_form",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "name": "",
        "label": "Søk etter Artikkelnummer:",
        "group": "3928239fec72f2e8",
        "order": 12,
        "width": 14,
        "height": 1,
        "options": [
            {
                "label": "Artikkelnummer",
                "value": "Artikkelnummer",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "Artikkelnummer": ""
        },
        "payload": "",
        "submit": "Søk",
        "cancel": "Avbryt",
        "topic": "payload",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 190,
        "y": 160,
        "wires": [
            [
                "fb92fe5e01d73c29"
            ]
        ]
    },
    {
        "id": "65f5fd97d58f285e",
        "type": "ui_form",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "",
        "label": "Tast inn artikkel data:",
        "group": "2e5fc634d7139928",
        "order": 4,
        "width": 13,
        "height": 1,
        "options": [
            {
                "label": "Artikkel Nummer",
                "value": "artikkelnr",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Ellement Nummer",
                "value": "elementnr1",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Ellement Nummer",
                "value": "elementnr2",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Effekt",
                "value": "effekt",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "Spenning",
                "value": "spenning",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "Nominell",
                "value": "nominell",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Min",
                "value": "min",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Maks",
                "value": "max",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Toleranse -",
                "value": "toleransenegativ",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Toleranse +",
                "value": "toleransepositiv",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "artikkelnr": "",
            "elementnr1": "",
            "elementnr2": "",
            "effekt": "",
            "spenning": "",
            "nominell": "",
            "min": "",
            "max": "",
            "toleransenegativ": "",
            "toleransepositiv": ""
        },
        "payload": "",
        "submit": "Legg til / Oppdater",
        "cancel": "Avbryt",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 1260,
        "y": 960,
        "wires": [
            [
                "e02dd6c4d4f61180"
            ]
        ]
    },
    {
        "id": "71d678dc0e38cdae",
        "type": "ui_form",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "",
        "label": "Søk etter Artikkel Nummer:",
        "group": "2e5fc634d7139928",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Artikkel Nummer",
                "value": "artikkelnr",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "artikkelnr": ""
        },
        "payload": "",
        "submit": "Søk",
        "cancel": "Avbryt",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 200,
        "y": 980,
        "wires": [
            [
                "3201871ae949489a"
            ]
        ]
    },
    {
        "id": "02da79b27545b1cb",
        "type": "ui_form",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "Element 1",
        "label": "Søk etter Element 1",
        "group": "2e5fc634d7139928",
        "order": 2,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Element Nummer ",
                "value": "elementartnr",
                "type": "number",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "elementartnr": ""
        },
        "payload": "",
        "submit": "Søk",
        "cancel": "Avbryt",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 140,
        "y": 1160,
        "wires": [
            [
                "2ab17e613ea82022"
            ]
        ]
    },
    {
        "id": "22e70b7194d7886f",
        "type": "ui_form",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "Element 2",
        "label": "Søk etter Element 2",
        "group": "2e5fc634d7139928",
        "order": 5,
        "width": 10,
        "height": 1,
        "options": [
            {
                "label": "Element Nummer",
                "value": "elementartnr",
                "type": "number",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "elementartnr": ""
        },
        "payload": "",
        "submit": "Søk",
        "cancel": "Avbryt",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 140,
        "y": 1220,
        "wires": [
            [
                "b535c44e6275f2fc"
            ]
        ]
    },
    {
        "id": "ce6ef18d6a298e12",
        "type": "ui_text",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "group": "18cc9cb264bf256a",
        "order": 2,
        "width": 9,
        "height": 1,
        "name": "",
        "label": "Valgt ellement ",
        "format": "{{msg.payload[0].elementnr}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1920,
        "y": 300,
        "wires": []
    },
    {
        "id": "5825e14c71a3e930",
        "type": "ui_text",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "group": "3928239fec72f2e8",
        "order": 7,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Effekt:",
        "format": "{{msg.payload[0].effekt}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1890,
        "y": 420,
        "wires": []
    },
    {
        "id": "34de3cabcb2921d4",
        "type": "ui_text",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "group": "3928239fec72f2e8",
        "order": 5,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Spenning:",
        "format": "{{msg.payload[0].spenning}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1900,
        "y": 460,
        "wires": []
    },
    {
        "id": "f48aa8431e08da6c",
        "type": "ui_text",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "group": "3928239fec72f2e8",
        "order": 9,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Nominell:",
        "format": "{{msg.payload[0].nominell}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1900,
        "y": 500,
        "wires": []
    },
    {
        "id": "8cf3a462abc63802",
        "type": "ui_text",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "group": "3928239fec72f2e8",
        "order": 16,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Min:",
        "format": "{{msg.payload[0].min}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1890,
        "y": 540,
        "wires": []
    },
    {
        "id": "f01a15408541501c",
        "type": "ui_text",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "group": "3928239fec72f2e8",
        "order": 17,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Maks:",
        "format": "{{msg.payload[0].max}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1890,
        "y": 580,
        "wires": []
    },
    {
        "id": "b6f8f10ac75d53fb",
        "type": "ui_text",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "group": "3928239fec72f2e8",
        "order": 13,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Toleranse - :",
        "format": "{{msg.payload[0].toleransenegativ}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1910,
        "y": 620,
        "wires": []
    },
    {
        "id": "2a46e683e7b3b80f",
        "type": "ui_text",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "group": "3928239fec72f2e8",
        "order": 14,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Toleranse + : ",
        "format": "{{msg.payload[0].toleransepositiv}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1910,
        "y": 660,
        "wires": []
    },
    {
        "id": "a1388b27105ff53b",
        "type": "ui_text",
        "z": "e4e311bdd42753f7",
        "g": "9aa11dd729020c1c",
        "group": "78895eb88847010d",
        "order": 3,
        "width": "10",
        "height": 3,
        "name": "",
        "label": "Status: ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 2040,
        "y": 820,
        "wires": []
    },
    {
        "id": "b680def66a816fff",
        "type": "ui_text",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "group": "18cc9cb264bf256a",
        "order": 3,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "Valg Artikkelt:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1920,
        "y": 220,
        "wires": []
    },
    {
        "id": "bd44eb56e4d6f72b",
        "type": "ui_text",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "group": "3928239fec72f2e8",
        "order": 1,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Element 1:",
        "format": "{{msg.payload[0].elementnr1}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1910,
        "y": 340,
        "wires": []
    },
    {
        "id": "2473a408459a8c92",
        "type": "ui_text",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "group": "3928239fec72f2e8",
        "order": 3,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Element 2:",
        "format": "{{msg.payload[0].elementnr2}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1910,
        "y": 380,
        "wires": []
    },
    {
        "id": "c31c9512b837feb5",
        "type": "ui_text",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "group": "2e5fc634d7139928",
        "order": 7,
        "width": 27,
        "height": 3,
        "name": "",
        "label": "Status: ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 280,
        "y": 1280,
        "wires": []
    },
    {
        "id": "51587308833d5c74",
        "type": "postgresql",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "name": "Query ElementNr",
        "query": "SELECT * FROM public.elementdata WHERE \"elementnr\" ILIKE '{{{msg.payload.Artikkelnummer}}}';",
        "postgreSQLConfig": "622e7ed0f70d4540",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 690,
        "y": 380,
        "wires": [
            [
                "5825e14c71a3e930",
                "34de3cabcb2921d4",
                "f48aa8431e08da6c",
                "8cf3a462abc63802",
                "f01a15408541501c",
                "b6f8f10ac75d53fb",
                "2a46e683e7b3b80f",
                "9c7806eedc376a26",
                "bd7a22da3b98031a",
                "6acd9d6e3935e43d"
            ]
        ]
    },
    {
        "id": "682a1ce7f3568d3c",
        "type": "postgresql",
        "z": "e4e311bdd42753f7",
        "g": "9aa11dd729020c1c",
        "name": "Search ElementNr",
        "query": "SELECT * FROM public.elementdata WHERE \"elementnr\" ILIKE '{{{msg.payload.elementartnr}}}';",
        "postgreSQLConfig": "0aec28bac67bd5fc",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 800,
        "wires": [
            [
                "c06bd2d5ba672540"
            ]
        ]
    },
    {
        "id": "d5f436454daeaae2",
        "type": "postgresql",
        "z": "e4e311bdd42753f7",
        "g": "9aa11dd729020c1c",
        "name": "Save to PostgreSQL",
        "query": "INSERT INTO public.elementdata (elementnr, effekt, spenning, nominell, min, max, toleransenegativ, toleransepositiv) VALUES ($1, $2, $3, $4, $5, $6, $7, $8) ON CONFLICT (elementnr) DO UPDATE SET effekt = $9, spenning = $10, nominell = $11, min = $12, max = $13, toleransenegativ = $14, toleransepositiv = $15;",
        "postgreSQLConfig": "0aec28bac67bd5fc",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1690,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "fb92fe5e01d73c29",
        "type": "postgresql",
        "z": "e4e311bdd42753f7",
        "g": "7acbc4b028bd3996",
        "name": "Query ArtikkelNr",
        "query": "SELECT * FROM public.artikkel_data WHERE \"artikkelnr\" ILIKE '{{{msg.payload.Artikkelnummer}}}';",
        "postgreSQLConfig": "87e7a38022e85acc",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 680,
        "y": 160,
        "wires": [
            [
                "039769ce98c79966",
                "5825e14c71a3e930",
                "34de3cabcb2921d4",
                "f48aa8431e08da6c",
                "8cf3a462abc63802",
                "f01a15408541501c",
                "b6f8f10ac75d53fb",
                "2a46e683e7b3b80f",
                "bd7a22da3b98031a",
                "bd44eb56e4d6f72b",
                "2473a408459a8c92"
            ]
        ]
    },
    {
        "id": "3201871ae949489a",
        "type": "postgresql",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "Search artikkelnr",
        "query": "SELECT * FROM public.artikkel_data WHERE \"artikkelnr\" ILIKE '{{{msg.payload.artikkelnr}}}';",
        "postgreSQLConfig": "87e7a38022e85acc",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 430,
        "y": 980,
        "wires": [
            [
                "f969e910ca1e3466"
            ]
        ]
    },
    {
        "id": "790068d7afcf38ab",
        "type": "postgresql",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "Save to PostgreSQL",
        "query": "INSERT INTO public.artikkel_data (artikkelnr, elementnr1, elementnr2, elementnr3, elementnr4, effekt, spenning, nominell, min, max, toleransenegativ, toleransepositiv)\nVALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12)\nON CONFLICT (artikkelnr) DO UPDATE SET\nelementnr1 = $13, elementnr2 = $14, elementnr3 = $15, elementnr4 = $16, effekt = $17, spenning = $18, nominell = $19, min = $20, max = $21, toleransenegativ = $22, toleransepositiv = $23;\n",
        "postgreSQLConfig": "87e7a38022e85acc",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1720,
        "y": 960,
        "wires": [
            [
                "5ae32b6f3cb3bc18"
            ]
        ]
    },
    {
        "id": "2ab17e613ea82022",
        "type": "postgresql",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "Search ElementNr",
        "query": "SELECT * FROM public.elementdata WHERE \"elementnr\" ILIKE '{{{msg.payload.elementartnr}}}';",
        "postgreSQLConfig": "92ae3e56142d9db8",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 310,
        "y": 1160,
        "wires": [
            [
                "c97b24f252a0e5b9"
            ]
        ]
    },
    {
        "id": "b535c44e6275f2fc",
        "type": "postgresql",
        "z": "e4e311bdd42753f7",
        "g": "4158de8946bbefc6",
        "name": "Search ElementNr",
        "query": "SELECT * FROM public.elementdata WHERE \"elementnr\" ILIKE '{{{msg.payload.elementartnr}}}';",
        "postgreSQLConfig": "92ae3e56142d9db8",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 310,
        "y": 1220,
        "wires": [
            [
                "d327e31a19cf9e12"
            ]
        ]
    },
    {
        "id": "d0b3abd744f2aa6f",
        "type": "link out",
        "z": "558841a4149c4571",
        "name": "GrønnDummy",
        "mode": "link",
        "links": [
            "082c4fe3bcd3236a"
        ],
        "x": 655,
        "y": 180,
        "wires": []
    },
    {
        "id": "546fc0c5875a5dd5",
        "type": "link out",
        "z": "558841a4149c4571",
        "name": "RødDummy",
        "mode": "link",
        "links": [
            "082c4fe3bcd3236a"
        ],
        "x": 645,
        "y": 380,
        "wires": []
    },
    {
        "id": "9dbaf55ac692e0bc",
        "type": "link in",
        "z": "558841a4149c4571",
        "name": "link in 15",
        "links": [
            "70ad3dccc073a9d3"
        ],
        "x": 225,
        "y": 540,
        "wires": [
            [
                "49638236c864bef2",
                "5e1222b10ab022ea"
            ]
        ]
    },
    {
        "id": "bd408db924a728f5",
        "type": "link in",
        "z": "558841a4149c4571",
        "name": "link in 16",
        "links": [
            "65aba761444a8649"
        ],
        "x": 225,
        "y": 740,
        "wires": [
            [
                "1d94abce944c7728",
                "8ae8ac0914bdbfd2"
            ]
        ]
    },
    {
        "id": "a875ddc881732f01",
        "type": "function",
        "z": "558841a4149c4571",
        "name": "Definer prefiksen for serienummeret",
        "func": "// Definer prefiksen for serienummeret\nconst prefix = 'DEFA487';\n\n// Hent nåværende år (to siste sifre)\nlet now = new Date();\nlet year = now.getFullYear().toString().slice(-2);\n\n// Sett opp SQL-søkestrengen for å finne siste serienummer med årstall\nlet base = `${prefix}${year}%`;\n\n// Konfigurer SQL-forespørselen for å finne siste serienummer\nmsg.topic = \"SELECT serial_number FROM public.test_results WHERE serial_number LIKE $1 ORDER BY serial_number DESC LIMIT 1\";\n\n// Bruker msg.params i stedet for msg.payload\nmsg.params = [base];\n\n// Legg til verdiene for videre bruk i flyten\nmsg.serialPrefix = prefix;\nmsg.year = year;\nmsg.base = base;\n\nglobal.set(\"Grønn_dummy_kjort\", true);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 480,
        "wires": [
            [
                "6466acaa04ab589c"
            ]
        ]
    },
    {
        "id": "9b0509f96d3f3f9e",
        "type": "function",
        "z": "558841a4149c4571",
        "name": "Definer prefiksen for serienummeret",
        "func": "// Definer prefiksen for serienummeret\nconst prefix = 'DEFA488';\n\n// Hent nåværende år (to siste sifre)\nlet now = new Date();\nlet year = now.getFullYear().toString().slice(-2);\n\n// Sett opp SQL-søkestrengen for å finne siste serienummer med årstall\nlet base = `${prefix}${year}%`;\n\n// Konfigurer SQL-forespørselen for å finne siste serienummer\nmsg.topic = \"SELECT serial_number FROM public.test_results WHERE serial_number LIKE $1 ORDER BY serial_number DESC LIMIT 1\";\n\n// Bruker msg.params i stedet for msg.payload\nmsg.params = [base];\n\n// Legg til verdiene for videre bruk i flyten\nmsg.serialPrefix = prefix;\nmsg.year = year;\nmsg.base = base;\n\nglobal.set(\"Rød_dummy_kjort\", true);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 680,
        "wires": [
            [
                "6970a5dd03d3b547"
            ]
        ]
    },
    {
        "id": "41805a7b0726aa7f",
        "type": "function",
        "z": "558841a4149c4571",
        "name": "Generate grønn test nummer",
        "func": "try {\n    let prefix = msg.serialPrefix;  // \"DEFA487\"\n    let year = msg.year;            // \"25\"\n    let base = msg.base;             // \"DEFA48725\"\n\n    // Sjekk om vi har mottatt en tidligere registrert verdi\n    let lastSerialNumber = msg.payload && msg.payload.length > 0 ? msg.payload[0].serial_number : null;\n    let serialCounter;\n\n    if (lastSerialNumber) {\n        // Ekstraher de siste fire sifrene fra serienummeret (f.eks. 0001)\n        let lastCounter = parseInt(lastSerialNumber.slice(-4));\n\n        // Øk nummeret med 1 eller start på 0001 hvis verdien ikke er gyldig\n        serialCounter = !isNaN(lastCounter) ? lastCounter + 1 : 1;\n    } else {\n        serialCounter = 1;  // Start fra 0001 hvis ingen serienumre finnes\n    }\n\n    // Formater nytt serienummer, f.eks. \"DEFA487250002\"\n    let newSerialNumber = `${base}${serialCounter.toString().padStart(4, '0')}`;\n\n    msg.payload = newSerialNumber;\n    return msg;\n} catch (error) {\n    node.error(\"Feil ved generering av serienummer: \" + error.message);\n    return null;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 480,
        "wires": [
            [
                "6c7c342b63074d6c"
            ]
        ]
    },
    {
        "id": "955391207ef97ec6",
        "type": "function",
        "z": "558841a4149c4571",
        "name": "Generate rød test nummer",
        "func": "try {\n    let prefix = msg.serialPrefix;  // \"DEFA488\"\n    let year = msg.year;            // \"25\"\n    let base = msg.base;             // \"DEFA48825\"\n\n    // Sjekk om vi har mottatt en tidligere registrert verdi\n    let lastSerialNumber = msg.payload && msg.payload.length > 0 ? msg.payload[0].serial_number : null;\n    let serialCounter;\n\n    if (lastSerialNumber) {\n        // Ekstraher de siste fire sifrene fra serienummeret (f.eks. 0001)\n        let lastCounter = parseInt(lastSerialNumber.slice(-4));\n\n        // Øk nummeret med 1 eller start på 0001 hvis verdien ikke er gyldig\n        serialCounter = !isNaN(lastCounter) ? lastCounter + 1 : 1;\n    } else {\n        serialCounter = 1;  // Start fra 0001 hvis ingen serienumre finnes\n    }\n\n    // Formater nytt serienummer, f.eks. \"DEFA488250002\"\n    let newSerialNumber = `${base}${serialCounter.toString().padStart(4, '0')}`;\n\n    msg.payload = newSerialNumber;\n    return msg;\n} catch (error) {\n    node.error(\"Feil ved generering av serienummer: \" + error.message);\n    return null;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 680,
        "wires": [
            [
                "78d79d65f6bd7b9c"
            ]
        ]
    },
    {
        "id": "49638236c864bef2",
        "type": "change",
        "z": "558841a4149c4571",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Grønn dummy kjørt",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Grønn dummy",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 480,
        "wires": [
            [
                "a875ddc881732f01",
                "76b0322a95284bd3",
                "10547b5f20af1da5",
                "52e5cad026a2df70"
            ]
        ]
    },
    {
        "id": "1d94abce944c7728",
        "type": "change",
        "z": "558841a4149c4571",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Rød dummy kjørt",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Rød dummy",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 680,
        "wires": [
            [
                "9b0509f96d3f3f9e",
                "d9f76642b8ee8b0d",
                "52e5cad026a2df70"
            ]
        ]
    },
    {
        "id": "778284dc7bf1d9c4",
        "type": "join",
        "z": "558841a4149c4571",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 950,
        "y": 540,
        "wires": [
            [
                "c405860dd0a52fb4"
            ]
        ]
    },
    {
        "id": "60e33e10f20c1a09",
        "type": "function",
        "z": "558841a4149c4571",
        "name": "Format Data",
        "func": "var payload = msg.payload;\n\n// Funksjon for å sjekke om nøkkel finnes og returnere en standardverdi hvis den mangler\nfunction safeGet(obj, path, defaultValue = null) {\n    return path.reduce((acc, key) => (acc && acc[key] !== undefined ? acc[key] : defaultValue), obj);\n}\n\n// Funksjon for å parse motstandsverdier til kilo-ohm (kΩ)\nfunction parseResistance(value) {\n    if (value === \"∞ Ω\") {\n        return 1e6; // Representerer uendelig som 1 MΩ (1000 kΩ)\n    }\n    if (value.includes(\"mΩ\")) {\n        return parseFloat(value.replace(\" mΩ\", \"\")) / 1e6; // Konverterer mΩ til kΩ\n    }\n    if (value.includes(\"Ω\") && !value.includes(\"k\") && !value.includes(\"M\")) {\n        return parseFloat(value.replace(\" Ω\", \"\")) / 1e3; // Konverterer Ω til kΩ\n    }\n    if (value.includes(\"kΩ\")) {\n        return parseFloat(value.replace(\" kΩ\", \"\")); // Allerede i kΩ\n    }\n    if (value.includes(\"MΩ\")) {\n        return parseFloat(value.replace(\" MΩ\", \"\")) * 1e3; // Konverterer MΩ til kΩ\n    }\n    return 0; // Returnerer 0 hvis parsing feiler\n}\n\n// Funksjon for å begrense verdier til databasen-kompatible grenser\nfunction clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n\ntry {\n    // Ekstraherer felt med dynamisk nøkkelsjekk\n    var testReport = safeGet(payload, [\"Test_raport\"], {});\n    var serialNumber = safeGet(payload, [\"serienr\"], \"UNKNOWN\");\n    var articleNumber = parseInt(safeGet(testReport, [\"Artikkel_nr\"], 0), 10);\n\n    // Validerer essensielle data\n    if (!articleNumber) {\n        node.error(\"Missing Artikkel_nr in payload\", msg);\n        return null;\n    }\n\n    // Parse Watt-verdier\n    var wattMinimum = parseFloat(safeGet(testReport, [\"Watt\", \"Minimum tillat Wattstyrke\"], \"0 W\").replace(\" W\", \"\")) || 0;\n    var wattMaximum = parseFloat(safeGet(testReport, [\"Watt\", \"Maks tillat Wattstyrke\"], \"0 W\").replace(\" W\", \"\")) || 0;\n    var wattValue = parseFloat(safeGet(testReport, [\"Watt\", \"effekt_ellement\"], \"0 W\").replace(\" W\", \"\")) || 0;\n\n    // Parse motstandsverdier\n    var resistanceValue = clamp(parseResistance(safeGet(testReport, [\"motstand\", \"motstand_ellement\"], \"0 Ω\")), 0, 1e6);\n    var resistanceStatus = safeGet(testReport, [\"motstand\", \"Motstand_feil/ok\"], \"Unknown\");\n\n    // Parse GND-motstand\n    var groundResistanceValue = clamp(parseResistance(safeGet(testReport, [\"motstand_GND\", \"motstand_gnd\"], \"0 Ω\")), 0, 1e6);\n    var groundResistanceStatus = safeGet(testReport, [\"motstand_GND\", \"fase_gnd_feil/ok\"], \"Unknown\");\n\n    // Parse Skall/GND-motstand\n    var shellGroundResistanceValue = clamp(parseResistance(safeGet(testReport, [\"Skal/gnd\", \"motstand_skall\"], \"0 Ω\")), 0, 1e6);\n    var shellGroundResistanceStatus = safeGet(testReport, [\"Skal/gnd\", \"Skall/GND_feil/ok\"], \"Unknown\");\n\n    // Parse ACW-verdier\n    var acwTest = safeGet(testReport, [\"ACW\", \"ACW_test\"], \"No Data\");\n    var acwStatus = safeGet(testReport, [\"ACW\", \"ACW_feil/ok\"], \"Unknown\");\n\n    // Test rapport status\n    var reportStatus = typeof testReport === \"string\" ? testReport : safeGet(testReport, [\"Test_raport\"], \"Unknown\");\n\n    // Tildeler parsed data til msg.params\n    msg.params = [\n        articleNumber,                       // Artikkel_nr\n        serialNumber,                        // Serienummer\n        wattMinimum,                         // Minimum wattstyrke\n        wattMaximum,                         // Maksimum wattstyrke\n        wattValue,                           // Effekt element\n        resistanceValue,                     // Elementmotstand (kΩ)\n        resistanceStatus,                    // Status for elementmotstand\n        groundResistanceValue,               // GND motstand (kΩ)\n        groundResistanceStatus,              // Status for GND motstand\n        shellGroundResistanceValue,          // Skall motstand (kΩ)\n        shellGroundResistanceStatus,         // Status for Skall motstand\n        acwTest,                             // ACW test\n        acwStatus,                           // ACW status\n        reportStatus                         // Test rapport status\n    ];\n\n    // Debug log for params\n    msg.params.forEach((value, index) => {\n        node.log(`Parameter ${index + 1}: ${value}`);\n    });\n\n} catch (error) {\n    node.error(\"Error extracting report data: \" + error.message, msg);\n    return null;\n}\n\n// Returnerer oppdatert melding\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1140,
        "wires": [
            [
                "e959f2419a837cd4"
            ]
        ]
    },
    {
        "id": "6c7c342b63074d6c",
        "type": "change",
        "z": "558841a4149c4571",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "serienr",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 480,
        "wires": [
            [
                "778284dc7bf1d9c4"
            ]
        ]
    },
    {
        "id": "d9b0007e28947595",
        "type": "join",
        "z": "558841a4149c4571",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 970,
        "y": 740,
        "wires": [
            [
                "797bb9fd90062c9b"
            ]
        ]
    },
    {
        "id": "2383106dac67c91f",
        "type": "function",
        "z": "558841a4149c4571",
        "name": "Format Data",
        "func": "var payload = msg.payload;\n\n// Funksjon for å sjekke om nøkkel finnes og returnere en standardverdi hvis den mangler\nfunction safeGet(obj, path, defaultValue = null) {\n    return path.reduce((acc, key) => (acc && acc[key] !== undefined ? acc[key] : defaultValue), obj);\n}\n\n// Funksjon for å parse motstandsverdier til kilo-ohm (kΩ)\nfunction parseResistance(value) {\n    if (value === \"∞ Ω\") {\n        return 1e6; // Representerer uendelig som 1 MΩ (1000 kΩ)\n    }\n    if (value.includes(\"mΩ\")) {\n        return parseFloat(value.replace(\" mΩ\", \"\")) / 1e6; // Konverterer mΩ til kΩ\n    }\n    if (value.includes(\"Ω\") && !value.includes(\"k\") && !value.includes(\"M\")) {\n        return parseFloat(value.replace(\" Ω\", \"\")) / 1e3; // Konverterer Ω til kΩ\n    }\n    if (value.includes(\"kΩ\")) {\n        return parseFloat(value.replace(\" kΩ\", \"\")); // Allerede i kΩ\n    }\n    if (value.includes(\"MΩ\")) {\n        return parseFloat(value.replace(\" MΩ\", \"\")) * 1e3; // Konverterer MΩ til kΩ\n    }\n    return 0; // Returnerer 0 hvis parsing feiler\n}\n\n// Funksjon for å begrense verdier til databasen-kompatible grenser\nfunction clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n\ntry {\n    // Ekstraherer felt med dynamisk nøkkelsjekk\n    var testReport = safeGet(payload, [\"Test_raport\"], {});\n    var serialNumber = safeGet(payload, [\"serienr\"], \"UNKNOWN\");\n    var articleNumber = parseInt(safeGet(testReport, [\"Artikkel_nr\"], 0), 10);\n\n    // Validerer essensielle data\n    if (!articleNumber) {\n        node.error(\"Missing Artikkel_nr in payload\", msg);\n        return null;\n    }\n\n    // Parse Watt-verdier\n    var wattMinimum = parseFloat(safeGet(testReport, [\"Watt\", \"Minimum tillat Wattstyrke\"], \"0 W\").replace(\" W\", \"\")) || 0;\n    var wattMaximum = parseFloat(safeGet(testReport, [\"Watt\", \"Maks tillat Wattstyrke\"], \"0 W\").replace(\" W\", \"\")) || 0;\n    var wattValue = parseFloat(safeGet(testReport, [\"Watt\", \"effekt_ellement\"], \"0 W\").replace(\" W\", \"\")) || 0;\n\n    // Parse motstandsverdier\n    var resistanceValue = clamp(parseResistance(safeGet(testReport, [\"motstand\", \"motstand_ellement\"], \"0 Ω\")), 0, 1e6);\n    var resistanceStatus = safeGet(testReport, [\"motstand\", \"Motstand_feil/ok\"], \"Unknown\");\n\n    // Parse GND-motstand\n    var groundResistanceValue = clamp(parseResistance(safeGet(testReport, [\"motstand_GND\", \"motstand_gnd\"], \"0 Ω\")), 0, 1e6);\n    var groundResistanceStatus = safeGet(testReport, [\"motstand_GND\", \"fase_gnd_feil/ok\"], \"Unknown\");\n\n    // Parse Skall/GND-motstand\n    var shellGroundResistanceValue = clamp(parseResistance(safeGet(testReport, [\"Skal/gnd\", \"motstand_skall\"], \"0 Ω\")), 0, 1e6);\n    var shellGroundResistanceStatus = safeGet(testReport, [\"Skal/gnd\", \"Skall/GND_feil/ok\"], \"Unknown\");\n\n    // Parse ACW-verdier\n    var acwTest = safeGet(testReport, [\"ACW\", \"ACW_test\"], \"No Data\");\n    var acwStatus = safeGet(testReport, [\"ACW\", \"ACW_feil/ok\"], \"Unknown\");\n\n    // Test rapport status\n    var reportStatus = typeof testReport === \"string\" ? testReport : safeGet(testReport, [\"Test_raport\"], \"Unknown\");\n\n    // Tildeler parsed data til msg.params\n    msg.params = [\n        articleNumber,                       // Artikkel_nr\n        serialNumber,                        // Serienummer\n        wattMinimum,                         // Minimum wattstyrke\n        wattMaximum,                         // Maksimum wattstyrke\n        wattValue,                           // Effekt element\n        resistanceValue,                     // Elementmotstand (kΩ)\n        resistanceStatus,                    // Status for elementmotstand\n        groundResistanceValue,               // GND motstand (kΩ)\n        groundResistanceStatus,              // Status for GND motstand\n        shellGroundResistanceValue,          // Skall motstand (kΩ)\n        shellGroundResistanceStatus,         // Status for Skall motstand\n        acwTest,                             // ACW test\n        acwStatus,                           // ACW status\n        reportStatus                         // Test rapport status\n    ];\n\n    // Debug log for params\n    msg.params.forEach((value, index) => {\n        node.log(`Parameter ${index + 1}: ${value}`);\n    });\n\n} catch (error) {\n    node.error(\"Error extracting report data: \" + error.message, msg);\n    return null;\n}\n\n// Returnerer oppdatert melding\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1200,
        "wires": [
            [
                "c1a3d713d4aed785"
            ]
        ]
    },
    {
        "id": "78d79d65f6bd7b9c",
        "type": "change",
        "z": "558841a4149c4571",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "serienr",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 680,
        "wires": [
            [
                "d9b0007e28947595"
            ]
        ]
    },
    {
        "id": "500da3da90a8d9d8",
        "type": "inject",
        "z": "558841a4149c4571",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "Test/produksjon ",
        "payload": "production",
        "payloadType": "str",
        "x": 1760,
        "y": 360,
        "wires": [
            [
                "2a77ec599ef2363c"
            ]
        ]
    },
    {
        "id": "811a74cd7f11cb52",
        "type": "link out",
        "z": "558841a4149c4571",
        "name": "Test/produksjon ",
        "mode": "link",
        "links": [
            "b387f47de5f33114"
        ],
        "x": 2005,
        "y": 520,
        "wires": []
    },
    {
        "id": "a659461d1667c9d3",
        "type": "change",
        "z": "558841a4149c4571",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "test",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Test/produksjon ",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 240,
        "wires": [
            [
                "2a77ec599ef2363c"
            ]
        ]
    },
    {
        "id": "76b0322a95284bd3",
        "type": "change",
        "z": "558841a4149c4571",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "test",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Test/produksjon ",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 320,
        "wires": [
            [
                "2a77ec599ef2363c"
            ]
        ]
    },
    {
        "id": "87e402dfc4ee2305",
        "type": "change",
        "z": "558841a4149c4571",
        "name": "Grønn dummy blir testet",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Grønn dummy blir testet",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 220,
        "wires": [
            [
                "10547b5f20af1da5",
                "e6f82de9bf1c9856",
                "7dc086dc358648bb"
            ]
        ]
    },
    {
        "id": "8e03aff0e09404cf",
        "type": "change",
        "z": "558841a4149c4571",
        "name": "Rød dummy blir testet",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Rød dummy blir testet",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 340,
        "wires": [
            [
                "d9f76642b8ee8b0d",
                "2e9a74bd93b3fbb7",
                "7dc086dc358648bb"
            ]
        ]
    },
    {
        "id": "80904cfb122fe0e6",
        "type": "link in",
        "z": "558841a4149c4571",
        "name": "link in teller resatt",
        "links": [
            "6230aa4c6c4804b8"
        ],
        "x": 255,
        "y": 280,
        "wires": [
            [
                "ab99d3a9c3216f74"
            ]
        ]
    },
    {
        "id": "d21275b13087a2d9",
        "type": "change",
        "z": "558841a4149c4571",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Dummy må kjøres",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Dummy resatt",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 280,
        "wires": [
            [
                "10547b5f20af1da5",
                "d9f76642b8ee8b0d",
                "52e5cad026a2df70"
            ]
        ]
    },
    {
        "id": "2e05f01990cb717f",
        "type": "inject",
        "z": "558841a4149c4571",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 06 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "reset",
        "payloadType": "str",
        "x": 370,
        "y": 260,
        "wires": [
            [
                "ab99d3a9c3216f74"
            ]
        ]
    },
    {
        "id": "e39919c8f3a5e29d",
        "type": "inject",
        "z": "558841a4149c4571",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 15 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "reset",
        "payloadType": "str",
        "x": 370,
        "y": 300,
        "wires": [
            [
                "ab99d3a9c3216f74"
            ]
        ]
    },
    {
        "id": "9d105001ae634b45",
        "type": "function",
        "z": "558841a4149c4571",
        "name": "Initialiser kontekstvariabler hvis de ikke finnes",
        "func": "// Initialiser kontekstvariabler hvis de ikke finnes\nif (context.get(\"rodDummy\") === undefined) {\n    context.set(\"rodDummy\", false);\n}\nif (context.get(\"gronnDummy\") === undefined) {\n    context.set(\"gronnDummy\", false);\n}\n\n// Hent innkommende payload\nlet payload = msg.payload;\nlet outputMsg = null;\n\n// Sjekk hvilken melding som har kommet inn\nif (payload === \"Rød dummy kjørt\") {\n    context.set(\"rodDummy\", true);\n    outputMsg = { payload: \"Grønn dummy må kjøres\" };\n} else if (payload === \"Grønn dummy kjørt\") {\n    context.set(\"gronnDummy\", true);\n    outputMsg = { payload: \"Rød dummy må kjøres\" };\n} else if (payload === \"Dummy må kjøres\") {\n    context.set(\"rodDummy\", false);\n    context.set(\"gronnDummy\", false);\n    flow.set(\"test_melding_rod\", \"\");\n    flow.set(\"test_melding_gronn\", \"\");\n    outputMsg = { payload: \"Dummy må kjøres\" };\n}\n\n// Sjekk om begge dummyene er kjørt og testene er godkjent\nif (context.get(\"rodDummy\") && context.get(\"gronnDummy\")) {\n    let meldingRod = flow.get(\"test_melding_rod\") || \"\";\n    let meldingGronn = flow.get(\"test_melding_gronn\") || \"\";\n\n    let rodOK = meldingRod.includes(\"✅ Rød dummy oppdaget riktig\");\n    let gronnOK = meldingGronn.includes(\"✅ Grønn dummy oppdaget riktig\");\n\n    if (rodOK && gronnOK) {\n        outputMsg = { payload: \"Test klar\" };\n    } else {\n        outputMsg = { payload: \"❌ FEIL: Test ikke godkjent – kontroller dummyene!\" };\n    }\n\n    // Nullstill status\n    context.set(\"rodDummy\", false);\n    context.set(\"gronnDummy\", false);\n    flow.set(\"test_melding_rod\", \"\");\n    flow.set(\"test_melding_gronn\", \"\");\n}\n\nreturn outputMsg ? [outputMsg] : null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 600,
        "wires": [
            [
                "c1394c4b79c65683",
                "4e4ec08f044cdce2"
            ]
        ]
    },
    {
        "id": "c1394c4b79c65683",
        "type": "link out",
        "z": "558841a4149c4571",
        "name": "Status for dummyer",
        "mode": "link",
        "links": [
            "cdcbc545b413d121",
            "6e1a8c35d13e048d"
        ],
        "x": 1775,
        "y": 600,
        "wires": []
    },
    {
        "id": "c405860dd0a52fb4",
        "type": "link out",
        "z": "558841a4149c4571",
        "name": "Grønn test ferdig",
        "mode": "link",
        "links": [
            "58619685797f4e53"
        ],
        "x": 1165,
        "y": 540,
        "wires": []
    },
    {
        "id": "797bb9fd90062c9b",
        "type": "link out",
        "z": "558841a4149c4571",
        "name": "Rød test ferdig",
        "mode": "link",
        "links": [
            "58619685797f4e53"
        ],
        "x": 1185,
        "y": 740,
        "wires": []
    },
    {
        "id": "31ef8e9d8c67ef5c",
        "type": "function",
        "z": "558841a4149c4571",
        "name": "Lagre Test/Produksjon-status i global kontekst",
        "func": "// Hent verdien fra payload\nlet value = msg.payload;\n\n// Lagre i global kontekst\nglobal.set(\"test_produksjon\", value);\n\n// Returner meldingen videre i flyten\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2160,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "e6f82de9bf1c9856",
        "type": "debug",
        "z": "558841a4149c4571",
        "name": "Grønn dummy",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 200,
        "wires": []
    },
    {
        "id": "2e9a74bd93b3fbb7",
        "type": "debug",
        "z": "558841a4149c4571",
        "name": "Rød dummy",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1490,
        "y": 360,
        "wires": []
    },
    {
        "id": "7dc086dc358648bb",
        "type": "function",
        "z": "558841a4149c4571",
        "name": "Dummy i global context",
        "func": "if (msg.payload === \"Grønn dummy blir testet\") {\n    global.set(\"dummy\", \"Dummy: Grønn\");\n} else if (msg.payload === \"Rød dummy blir testet\") {\n    global.set(\"dummy\", \"Dummy: Rød\");\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "5e1222b10ab022ea",
        "type": "change",
        "z": "558841a4149c4571",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Raport for grønn dummy",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 540,
        "wires": [
            [
                "778284dc7bf1d9c4"
            ]
        ]
    },
    {
        "id": "8ae8ac0914bdbfd2",
        "type": "change",
        "z": "558841a4149c4571",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Raport for rød dummy",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 740,
        "wires": [
            [
                "d9b0007e28947595"
            ]
        ]
    },
    {
        "id": "4e4ec08f044cdce2",
        "type": "switch",
        "z": "558841a4149c4571",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Test klar",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1470,
        "y": 580,
        "wires": [
            [
                "88faaf3525a458f3"
            ]
        ]
    },
    {
        "id": "88faaf3525a458f3",
        "type": "change",
        "z": "558841a4149c4571",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "production",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Test/produksjon ",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 580,
        "wires": [
            [
                "2a77ec599ef2363c"
            ]
        ]
    },
    {
        "id": "809250fd1b9e25d7",
        "type": "function",
        "z": "558841a4149c4571",
        "name": "Dummy evaluering",
        "func": "let dummy = global.get(\"dummy\");\n\n// --- Avbryt tidlig hvis dummy er \"Ingen\" ---\nif (!dummy || dummy === \"Dummy: Ingen\") {\n    node.warn(\"Dummy er 'Ingen', avbryter og sender ingenting.\");\n    flow.set(\"test_melding_rod\", \"\");\n    flow.set(\"test_melding_gronn\", \"\");\n    flow.set(\"resultat_full\", null);\n    flow.set(\"avvik_meldinger\", []);\n    global.set(\"test_melding\", \"\");\n    return [null, null, null];\n}\n\nlet ir_raw = global.get(\"ir_test_full\") || \"\";\nlet acw_raw = global.get(\"acw_test_full\") || \"\";\nlet resistance_gnd_str = global.get(\"measuredResistanceFaseGND\") || null;\nlet resistance_gnd = null;\n\n// --- Forbedret parsing av Fase–GND ---\nif (typeof resistance_gnd_str === \"string\") {\n    if (resistance_gnd_str.includes(\"∞\")) {\n        resistance_gnd = null; // uendelig – ugyldig måling\n    } else if (resistance_gnd_str.includes(\"MΩ\")) {\n        resistance_gnd = parseFloat(resistance_gnd_str) * 1_000_000;\n    } else {\n        resistance_gnd = parseFloat(resistance_gnd_str);\n    }\n}\n\nlet resistance_fase_fase = null;\nlet motstand_status = global.get(\"motstand_status\") || {};\n\nif (motstand_status.malt_motstand) {\n    resistance_fase_fase = parseFloat(motstand_status.malt_motstand);\n}\n\nlet result = {\n    dummy: dummy,\n    ir_status: \"Ukjent\",\n    acw_status: \"Ukjent\",\n    resistance_fase_gnd_ohm: resistance_gnd,\n    resistance_fase_fase_ohm: resistance_fase_fase,\n    ir_spenning_kV: null,\n    ir_motstand_Mohm: null,\n    ir_beregnet_lekkasjestrøm_mA: null,\n    acw_spenning_kV: null,\n    acw_lekkasjestrøm_mA: null,\n    godkjent: null,\n    melding: \"\",\n};\n\nlet avvik_meldinger = [];\n\n// --- IR ---\nlet ir_match = ir_raw.match(/IR\\s*,(\\w+)\\s*,([\\d.]+)kV,(\\d{4})M ohm/);\nif (ir_match) {\n    result.ir_status = (ir_match[1] === \"PASS\") ? \"OK\" : \"FEIL\";\n    result.ir_spenning_kV = parseFloat(ir_match[2]);\n    result.ir_motstand_Mohm = parseInt(ir_match[3]);\n    if (result.ir_spenning_kV && result.ir_motstand_Mohm) {\n        let V = result.ir_spenning_kV * 1000;\n        let R = result.ir_motstand_Mohm * 1_000_000;\n        result.ir_beregnet_lekkasjestrøm_mA = parseFloat(((V / R) * 1000).toFixed(3));\n    }\n} else if (ir_raw.includes(\"ERROR\")) {\n    result.ir_status = \"FEIL\";\n}\n\n// --- ACW ---\nlet acw_match = acw_raw.match(/ACW,(\\w+)\\s*,([\\d.]+)kV,([\\d.]+) mA/);\nif (acw_match) {\n    result.acw_status = (acw_match[1] === \"PASS\") ? \"OK\" : \"FEIL\";\n    result.acw_spenning_kV = parseFloat(acw_match[2]);\n    result.acw_lekkasjestrøm_mA = parseFloat(acw_match[3]);\n} else if (acw_raw.includes(\"ERROR\") || acw_raw.includes(\"FAIL\")) {\n    result.acw_status = \"FEIL\";\n}\n\n// --- Forventede verdier ---\nlet forventet = {\n    fase_fase: null,\n    fase_gnd: null\n};\n\nif (dummy === \"Dummy: Rød\") {\n    forventet.fase_fase = 2179.3;\n    forventet.fase_gnd = 178.0;\n} else if (dummy === \"Dummy: Grønn\") {\n    forventet.fase_fase = 2.0135;\n    forventet.fase_gnd = 3065700;\n}\n\n// --- Avviksanalyse ---\nfunction sjekkAvvik(malt, forventet, navn) {\n    if (malt === null || isNaN(malt)) {\n        avvik_meldinger.push(`❌ ${navn}: Ingen gyldig måling (${malt === null ? 'ingen forbindelse' : 'NaN'})`);\n        return;\n    }\n    if (malt && forventet) {\n        let diff = Math.abs(malt - forventet);\n        let diff_percent = (diff / forventet) * 100;\n        if (diff_percent > 3) {\n            avvik_meldinger.push(`⚠️ ${navn}: Målt ${malt.toFixed(2)} Ω, forventet ${forventet.toFixed(2)} Ω (${diff_percent.toFixed(2)} % avvik)`);\n        }\n    }\n}\n\nsjekkAvvik(resistance_fase_fase, forventet.fase_fase, \"Fase1–Fase2\");\nsjekkAvvik(resistance_gnd, forventet.fase_gnd, \"Fase–GND\");\n\n// --- Evaluering ---\nif (dummy === \"Dummy: Rød\") {\n    if (\n        result.ir_status === \"FEIL\" &&\n        result.acw_status === \"FEIL\" &&\n        avvik_meldinger.length === 0\n    ) {\n        result.godkjent = true;\n        result.melding = \"✅ Rød dummy oppdaget riktig.\";\n    } else {\n        result.godkjent = false;\n        result.melding = \"❌ FEIL: Rød dummy ble ikke oppdaget korrekt!\";\n    }\n    flow.set(\"test_melding_rod\", result.melding);\n} else if (dummy === \"Dummy: Grønn\") {\n    if (\n        result.ir_status === \"OK\" &&\n        result.acw_status === \"OK\" &&\n        avvik_meldinger.length === 0\n    ) {\n        result.godkjent = true;\n        result.melding = \"✅ Grønn dummy oppdaget riktig.\";\n    } else {\n        result.godkjent = false;\n        result.melding = \"❌ FEIL: Grønn dummy ble ikke oppdaget korrekt!\";\n    }\n    flow.set(\"test_melding_gronn\", result.melding);\n}\n\n// --- Lagre i context ---\nflow.set(\"resultat_full\", result);\nflow.set(\"avvik_meldinger\", avvik_meldinger);\nglobal.set(\"test_melding\", result.melding);\n\n// --- Returner 3 utganger ---\nreturn [\n    { payload: result },\n    avvik_meldinger.length > 0 ? { payload: avvik_meldinger } : null,\n    { payload: result.melding }\n];\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 800,
        "wires": [
            [
                "d382905340f5c64b",
                "5ef17b48d654039e"
            ],
            [
                "24bb43d1ed39f1ff",
                "ccbbd27d25c92a5f",
                "1c2d3c8306a9b26c"
            ],
            [
                "e26d9917c34e9a31",
                "0e645b1bc6efaf06"
            ]
        ]
    },
    {
        "id": "ab8bf6cb0ab04282",
        "type": "link in",
        "z": "558841a4149c4571",
        "name": "link in 2",
        "links": [
            "2b6f5e24222922d2"
        ],
        "x": 225,
        "y": 800,
        "wires": [
            [
                "809250fd1b9e25d7"
            ]
        ]
    },
    {
        "id": "d382905340f5c64b",
        "type": "debug",
        "z": "558841a4149c4571",
        "name": "Dummy status",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 780,
        "wires": []
    },
    {
        "id": "24bb43d1ed39f1ff",
        "type": "link out",
        "z": "558841a4149c4571",
        "name": "Dummy status",
        "mode": "link",
        "links": [
            "4679a3800a3f7aca"
        ],
        "x": 1065,
        "y": 840,
        "wires": []
    },
    {
        "id": "e26d9917c34e9a31",
        "type": "delay",
        "z": "558841a4149c4571",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 820,
        "wires": [
            [
                "305e86eea55012e3"
            ]
        ]
    },
    {
        "id": "305e86eea55012e3",
        "type": "switch",
        "z": "558841a4149c4571",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "❌ FEIL: Grønn dummy ble ikke oppdaget korrekt!",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "✅ Grønn dummy oppdaget riktig.",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "❌ FEIL: Rød dummy ble ikke oppdaget korrekt!",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "✅ Rød dummy oppdaget riktig.",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1230,
        "y": 280,
        "wires": [
            [
                "10547b5f20af1da5"
            ],
            [
                "10547b5f20af1da5"
            ],
            [
                "d9f76642b8ee8b0d"
            ],
            [
                "d9f76642b8ee8b0d"
            ]
        ]
    },
    {
        "id": "909a9156753e65e7",
        "type": "mqtt out",
        "z": "558841a4149c4571",
        "name": "",
        "topic": "Dummy evaluering Volvo",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f5787c290a8dd28e",
        "x": 1130,
        "y": 900,
        "wires": []
    },
    {
        "id": "5ef17b48d654039e",
        "type": "change",
        "z": "558841a4149c4571",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 860,
        "wires": [
            [
                "909a9156753e65e7"
            ]
        ]
    },
    {
        "id": "ccbbd27d25c92a5f",
        "type": "change",
        "z": "558841a4149c4571",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 900,
        "wires": [
            [
                "909a9156753e65e7"
            ]
        ]
    },
    {
        "id": "0e645b1bc6efaf06",
        "type": "change",
        "z": "558841a4149c4571",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 940,
        "wires": [
            [
                "909a9156753e65e7"
            ]
        ]
    },
    {
        "id": "1c2d3c8306a9b26c",
        "type": "debug",
        "z": "558841a4149c4571",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 800,
        "wires": []
    },
    {
        "id": "12de17577ef62e44",
        "type": "ui_button",
        "z": "558841a4149c4571",
        "name": "",
        "group": "18cc9cb264bf256a",
        "order": 38,
        "width": 6,
        "height": 2,
        "passthru": false,
        "label": "Kjøring av Rød dummy",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "RødDummy",
        "topicType": "str",
        "x": 400,
        "y": 340,
        "wires": [
            [
                "546fc0c5875a5dd5",
                "76b0322a95284bd3",
                "8e03aff0e09404cf"
            ]
        ]
    },
    {
        "id": "eaf3352e2116bfdf",
        "type": "ui_button",
        "z": "558841a4149c4571",
        "name": "",
        "group": "18cc9cb264bf256a",
        "order": 45,
        "width": 6,
        "height": 2,
        "passthru": false,
        "label": "Kjøring av Grønn dummy",
        "tooltip": "",
        "color": "hvite",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "GrønnDummy",
        "topicType": "str",
        "x": 410,
        "y": 220,
        "wires": [
            [
                "d0b3abd744f2aa6f",
                "a659461d1667c9d3",
                "87e402dfc4ee2305"
            ]
        ]
    },
    {
        "id": "2a77ec599ef2363c",
        "type": "ui_switch",
        "z": "558841a4149c4571",
        "name": "Test/produksjon ",
        "label": "Produksjon/Test",
        "tooltip": "",
        "group": "18cc9cb264bf256a",
        "order": 60,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "test",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "production",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1780,
        "y": 480,
        "wires": [
            [
                "811a74cd7f11cb52",
                "a9d30682a8579d3e",
                "31ef8e9d8c67ef5c"
            ]
        ]
    },
    {
        "id": "a9d30682a8579d3e",
        "type": "ui_text",
        "z": "558841a4149c4571",
        "group": "18cc9cb264bf256a",
        "order": 61,
        "width": 4,
        "height": 1,
        "name": "vis produksjon/test",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2070,
        "y": 480,
        "wires": []
    },
    {
        "id": "d9f76642b8ee8b0d",
        "type": "ui_text",
        "z": "558841a4149c4571",
        "group": "18cc9cb264bf256a",
        "order": 40,
        "width": 6,
        "height": 2,
        "name": "Rød Dummy",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1250,
        "y": 400,
        "wires": []
    },
    {
        "id": "10547b5f20af1da5",
        "type": "ui_text",
        "z": "558841a4149c4571",
        "group": "18cc9cb264bf256a",
        "order": 47,
        "width": 6,
        "height": 2,
        "name": "Grønn Dummy",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1240,
        "y": 160,
        "wires": []
    },
    {
        "id": "6466acaa04ab589c",
        "type": "postgresql",
        "z": "558841a4149c4571",
        "name": "Query Serial Numbers",
        "query": "SELECT serial_number FROM public.test_results WHERE serial_number LIKE $1 ORDER BY serial_number DESC LIMIT 1;",
        "postgreSQLConfig": "43d2e060401a8638",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 900,
        "y": 480,
        "wires": [
            [
                "41805a7b0726aa7f"
            ]
        ]
    },
    {
        "id": "6970a5dd03d3b547",
        "type": "postgresql",
        "z": "558841a4149c4571",
        "name": "Query Serial Numbers",
        "query": "SELECT serial_number FROM public.test_results WHERE serial_number LIKE $1 ORDER BY serial_number DESC LIMIT 1;",
        "postgreSQLConfig": "43d2e060401a8638",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 900,
        "y": 680,
        "wires": [
            [
                "955391207ef97ec6"
            ]
        ]
    },
    {
        "id": "e959f2419a837cd4",
        "type": "postgresql",
        "z": "558841a4149c4571",
        "name": "Insert Data",
        "query": "INSERT INTO public.test_results (article_number, serial_number, watt_minimum, watt_maximum, watt_value, resistance_value, resistance_status, ground_resistance_value, ground_resistance_status, shell_ground_resistance_value, shell_ground_resistance_status, acw_test, acw_status, report_status)\n    VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14);",
        "postgreSQLConfig": "43d2e060401a8638",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 630,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "c1a3d713d4aed785",
        "type": "postgresql",
        "z": "558841a4149c4571",
        "name": "Insert Data",
        "query": "INSERT INTO public.test_results (article_number, serial_number, watt_minimum, watt_maximum, watt_value, resistance_value, resistance_status, ground_resistance_value, ground_resistance_status, shell_ground_resistance_value, shell_ground_resistance_status, acw_test, acw_status, report_status)\n    VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14);",
        "postgreSQLConfig": "43d2e060401a8638",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 630,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "9e8b289eba044393",
        "type": "link in",
        "z": "c2169ec33aade897",
        "g": "882257ad64bc98e9",
        "name": "Status fase/gnd",
        "links": [
            "2e182f018666eee7"
        ],
        "x": 255,
        "y": 1200,
        "wires": [
            [
                "b510de6d75820729"
            ]
        ]
    },
    {
        "id": "b1c4c07488bdac61",
        "type": "link in",
        "z": "c2169ec33aade897",
        "g": "d3a110a585835dda",
        "name": "Resultat Motstand",
        "links": [
            "fc69a4147a4280f6"
        ],
        "x": 255,
        "y": 1080,
        "wires": [
            [
                "cfb050730fdc5465"
            ]
        ]
    },
    {
        "id": "fbb9356c64b2093a",
        "type": "link in",
        "z": "c2169ec33aade897",
        "g": "882257ad64bc98e9",
        "name": "Resultat Motstan fase/gnd",
        "links": [
            "e5b51d788ef20207"
        ],
        "x": 255,
        "y": 1240,
        "wires": [
            [
                "d5c34d5e507eee52"
            ]
        ]
    },
    {
        "id": "a581433753d36c15",
        "type": "link in",
        "z": "c2169ec33aade897",
        "g": "8b2ee61fcd9d2592",
        "name": "Status Motstand Skall/gnd",
        "links": [
            "440ba3140e0e1bdc",
            "7082e1ae5fc393fe",
            "964b05880196c92b"
        ],
        "x": 255,
        "y": 1340,
        "wires": [
            [
                "1f6525038fe08f56"
            ]
        ]
    },
    {
        "id": "ba6d7714acec3d81",
        "type": "link in",
        "z": "c2169ec33aade897",
        "g": "8df7171d50362e14",
        "name": "Resultat målt Effekt",
        "links": [
            "38db026eee5a5a62"
        ],
        "x": 255,
        "y": 1520,
        "wires": [
            [
                "f5173f6b219a83b1"
            ]
        ]
    },
    {
        "id": "8ac8d1ee244a984e",
        "type": "link in",
        "z": "c2169ec33aade897",
        "g": "658c21ec64d57551",
        "name": "ACW",
        "links": [
            "7614414c84f03eaa"
        ],
        "x": 255,
        "y": 1980,
        "wires": [
            [
                "5e96592154c4b462"
            ]
        ]
    },
    {
        "id": "b510de6d75820729",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "882257ad64bc98e9",
        "name": "fase gnd feil/ok",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "OK",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Fail",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "fase_gnd_feil/ok",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1200,
        "wires": [
            [
                "0f072ee84a5b6de6"
            ]
        ]
    },
    {
        "id": "1f6525038fe08f56",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "8b2ee61fcd9d2592",
        "name": "Skall/GND feil/ok",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "OK",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Fail",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Skall/GND_feil/ok",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 1340,
        "wires": [
            [
                "f11d338c5c463fdf"
            ]
        ]
    },
    {
        "id": "56609fc98ff26ac8",
        "type": "link in",
        "z": "c2169ec33aade897",
        "g": "8b2ee61fcd9d2592",
        "name": "Resultat Motstan skall/GND",
        "links": [],
        "x": 255,
        "y": 1380,
        "wires": [
            [
                "4f792a826e3ec6b9"
            ]
        ]
    },
    {
        "id": "9ce74c621350ed81",
        "type": "link in",
        "z": "c2169ec33aade897",
        "g": "658c21ec64d57551",
        "name": "Status ACW",
        "links": [
            "2dd38481da95728c"
        ],
        "x": 255,
        "y": 1940,
        "wires": [
            [
                "dbef6519a89ea505"
            ]
        ]
    },
    {
        "id": "dbef6519a89ea505",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "658c21ec64d57551",
        "name": "ACW feil/ok",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "OK",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Fail",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ACW_feil/ok",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1940,
        "wires": [
            [
                "bb19037782fd5d0c"
            ]
        ]
    },
    {
        "id": "b46deee512ffd9f5",
        "type": "mqtt out",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "",
        "topic": "RequestSNEOL2",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f5787c290a8dd28e",
        "x": 1590,
        "y": 280,
        "wires": []
    },
    {
        "id": "e5108c4ed0e7cbfc",
        "type": "mqtt out",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "",
        "topic": "Godkjent test EOL2",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f5787c290a8dd28e",
        "x": 1590,
        "y": 340,
        "wires": []
    },
    {
        "id": "bfc840b1ff7b7bbd",
        "type": "link in",
        "z": "c2169ec33aade897",
        "g": "9ec45f809e6da242",
        "name": "Test godkjent / ikke godkjent",
        "links": [
            "7be08c28fbc12459"
        ],
        "x": 975,
        "y": 1100,
        "wires": [
            [
                "eda7853e0e032c83"
            ]
        ]
    },
    {
        "id": "d5c34d5e507eee52",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "882257ad64bc98e9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "motstand_gnd",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1240,
        "wires": [
            [
                "0f072ee84a5b6de6"
            ]
        ]
    },
    {
        "id": "4f792a826e3ec6b9",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "8b2ee61fcd9d2592",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "motstand_skall",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1380,
        "wires": [
            [
                "f11d338c5c463fdf"
            ]
        ]
    },
    {
        "id": "f5173f6b219a83b1",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "8df7171d50362e14",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "effekt_ellement",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1520,
        "wires": [
            [
                "5f584c1dd20b166f"
            ]
        ]
    },
    {
        "id": "5e96592154c4b462",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "658c21ec64d57551",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ACW_test",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1980,
        "wires": [
            [
                "bb19037782fd5d0c"
            ]
        ]
    },
    {
        "id": "eda7853e0e032c83",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "9ec45f809e6da242",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Test_raport",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "0f072ee84a5b6de6",
        "type": "join",
        "z": "c2169ec33aade897",
        "g": "882257ad64bc98e9",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": true,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 580,
        "y": 1220,
        "wires": [
            [
                "a1ecaaed3c29108e"
            ]
        ]
    },
    {
        "id": "f11d338c5c463fdf",
        "type": "join",
        "z": "c2169ec33aade897",
        "g": "8b2ee61fcd9d2592",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": true,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 580,
        "y": 1360,
        "wires": [
            [
                "dde69e31e611a92c"
            ]
        ]
    },
    {
        "id": "bb19037782fd5d0c",
        "type": "join",
        "z": "c2169ec33aade897",
        "g": "658c21ec64d57551",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 580,
        "y": 1960,
        "wires": [
            [
                "2e992290283533af"
            ]
        ]
    },
    {
        "id": "00ed3ab4be1810bc",
        "type": "link in",
        "z": "c2169ec33aade897",
        "g": "37ae195be7088556",
        "name": "Element nr",
        "links": [
            "7103bf503d9fa40c"
        ],
        "x": 975,
        "y": 1220,
        "wires": [
            [
                "ac1a33886e14b216"
            ]
        ]
    },
    {
        "id": "ac1a33886e14b216",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "37ae195be7088556",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Element_nr",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "cfb050730fdc5465",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "d3a110a585835dda",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "motstand",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "a1ecaaed3c29108e",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "882257ad64bc98e9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "motstand_GND",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "dde69e31e611a92c",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "8b2ee61fcd9d2592",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Skal/gnd",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "2e992290283533af",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "658c21ec64d57551",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ACW",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "4498fca0d63f385f",
        "type": "mqtt in",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "SerialNumber",
        "topic": "SerialNumberEOL2",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "f5787c290a8dd28e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 510,
        "y": 520,
        "wires": [
            [
                "7c118c6c685b69f7",
                "4f0145bbbf55f5b5"
            ]
        ]
    },
    {
        "id": "5c7a8434ef52033e",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "Spør etter serienummer",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ReqSN",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 280,
        "wires": [
            [
                "b46deee512ffd9f5"
            ]
        ]
    },
    {
        "id": "0d0467fbf07769d2",
        "type": "link in",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "resett",
        "links": [
            "7b896316bd89a7eb"
        ],
        "x": 1205,
        "y": 480,
        "wires": [
            [
                "7c118c6c685b69f7"
            ]
        ]
    },
    {
        "id": "301b01843c5ae52a",
        "type": "link in",
        "z": "c2169ec33aade897",
        "g": "8df7171d50362e14",
        "name": "link in 7",
        "links": [
            "ad43c7eb9bafb1b0"
        ],
        "x": 255,
        "y": 1480,
        "wires": [
            [
                "cda6862e465e858d"
            ]
        ]
    },
    {
        "id": "3bb77f9aeb5411d2",
        "type": "link in",
        "z": "c2169ec33aade897",
        "g": "8df7171d50362e14",
        "name": "link in 8",
        "links": [
            "935dcadeb439a3c2"
        ],
        "x": 255,
        "y": 1560,
        "wires": [
            [
                "4d5cc774e72c0d70"
            ]
        ]
    },
    {
        "id": "cda6862e465e858d",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "8df7171d50362e14",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Maks tillat Wattstyrke",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1480,
        "wires": [
            [
                "5f584c1dd20b166f"
            ]
        ]
    },
    {
        "id": "4d5cc774e72c0d70",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "8df7171d50362e14",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Minimum tillat Wattstyrke",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1560,
        "wires": [
            [
                "5f584c1dd20b166f"
            ]
        ]
    },
    {
        "id": "5f584c1dd20b166f",
        "type": "join",
        "z": "c2169ec33aade897",
        "g": "8df7171d50362e14",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 550,
        "y": 1520,
        "wires": [
            [
                "464072314b1f51d6"
            ]
        ]
    },
    {
        "id": "464072314b1f51d6",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "8df7171d50362e14",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Watt",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "3ea8cb435bc802c9",
        "type": "link out",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "Serienr:",
        "mode": "link",
        "links": [
            "7f474951f3763d66"
        ],
        "x": 925,
        "y": 480,
        "wires": []
    },
    {
        "id": "47cc574f421ca93f",
        "type": "function",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "Format Data",
        "func": "var payload = msg.payload;\n\nfunction safeGet(obj, path, defaultValue = null) {\n    return path.reduce((acc, key) => (acc && acc[key] !== undefined ? acc[key] : defaultValue), obj);\n}\n\nfunction parseResistance(value, targetUnit = \"Ω\") {\n    if (!value || value === \"NA\") return 0;\n    if (value === \"∞ Ω\" || value === \"∞Ω\") return 1e12;\n\n    value = value.replace(\",\", \".\"); // konverter til punktum\n    let result = 0;\n    if (value.includes(\"mΩ\")) result = parseFloat(value.replace(\" mΩ\", \"\")) / 1e3;\n    else if (value.includes(\"Ω\") && !value.includes(\"k\") && !value.includes(\"M\") && !value.includes(\"G\")) result = parseFloat(value.replace(\" Ω\", \"\"));\n    else if (value.includes(\"kΩ\")) result = parseFloat(value.replace(\" kΩ\", \"\")) * 1e3;\n    else if (value.includes(\"MΩ\")) result = parseFloat(value.replace(\" MΩ\", \"\")) * 1e6;\n    else if (value.includes(\"GΩ\")) result = parseFloat(value.replace(\" GΩ\", \"\")) * 1e9;\n\n    if (targetUnit === \"kΩ\") return result / 1e3;\n    if (targetUnit === \"MΩ\") return result / 1e6;\n    if (targetUnit === \"GΩ\") return result / 1e9;\n    return result;\n}\n\n// Sjekk om meldingen er en dummy med feilmelding som skal ignoreres\nlet testMelding = global.get(\"test_melding\") || \"\";\nlet isFeilMelding = (\n    testMelding.includes(\"❌ FEIL: Rød dummy ble ikke oppdaget korrekt!\") ||\n    testMelding.includes(\"❌ FEIL: Grønn dummy ble ikke oppdaget korrekt!\")\n);\nlet isDummyRapport = (\n    payload.hasOwnProperty(\"Raport for grønn dummy\") ||\n    payload.hasOwnProperty(\"Raport for rød dummy\") ||\n    (payload.serienr && typeof payload.serienr === \"object\" && (\n        payload.serienr[\"Raport for grønn dummy\"] || payload.serienr[\"Raport for rød dummy\"]\n    ))\n);\nif (isFeilMelding && isDummyRapport) return null;\n\ntry {\n    let reportData = {};\n    let serialNumber = \"UNKNOWN\";\n\n    if (payload[\"Raport for grønn dummy\"] || payload[\"Raport for rød dummy\"]) {\n        reportData = payload[\"Raport for grønn dummy\"] || payload[\"Raport for rød dummy\"];\n        serialNumber = safeGet(payload, [\"serienr\"], \"UNKNOWN\");\n    } else if (payload.serienr && typeof payload.serienr === \"object\" &&\n               (payload.serienr[\"Raport for grønn dummy\"] || payload.serienr[\"Raport for rød dummy\"])) {\n        reportData = payload.serienr[\"Raport for grønn dummy\"] || payload.serienr[\"Raport for rød dummy\"];\n        serialNumber = safeGet(payload.serienr, [\"serienr\"], \"UNKNOWN\");\n    } else if (payload.raport) {\n        reportData = payload.raport;\n        serialNumber = safeGet(payload, [\"serienr\"], \"UNKNOWN\");\n    }\n\n    let articleNumber = parseInt(reportData[\"artikkelnr\"]) || 0;\n    let wattValueRaw = reportData[\"wattValue\"] || \"0 W\";\n    let wattValue = parseFloat(wattValueRaw.replace(\",\", \".\").replace(\" W\", \"\")) || 0;\n\n    let wattMinimum = 0;\n    let wattMaximum = 0;\n\n    let resistanceValue = safeGet(reportData, [\"measured_resistance\"], 0);\n    let resistanceStatus = safeGet(reportData, [\"motstand_status\"], \"Unknown\");\n\n    let groundResistanceValue = parseResistance(safeGet(reportData, [\"measuredResistanceFaseGND\"], \"0 Ω\"), \"Ω\");\n    let groundResistanceStatus = safeGet(reportData, [\"status_FaseGND\"], \"Unknown\");\n\n    let shellGroundResistanceValue = parseResistance(safeGet(reportData, [\"measuredResistanceSkallGND\"], \"0 Ω\"), \"Ω\");\n    let shellGroundResistanceStatus = safeGet(reportData, [\"status_SkallGND\"], \"Unknown\");\n\n    let acwTest = safeGet(reportData, [\"acw_test_full\"], \"No Data\");\n    let acwStatus = safeGet(reportData, [\"acw_test_status\"], \"Unknown\");\n\n    let IR_insulationResistanceTest = safeGet(reportData, [\"ir_test_full\"], \"No Data\");\n    let IR_insulationResistanceStatus = safeGet(reportData, [\"ir_test_status\"], \"Unknown\");\n\n    let GB_groundBondTest = safeGet(reportData, [\"gb_test_full\"], \"No Data\");\n    let GB_groundBondStatus = safeGet(reportData, [\"gb_test_status\"], \"Unknown\");\n\n    let reportStatus = safeGet(reportData, [\"testResult\"], \"Unknown\");\n\n    msg.params = [\n        articleNumber,                   // $1\n        serialNumber,                    // $2\n        wattMinimum,                     // $3\n        wattMaximum,                     // $4\n        wattValue,                       // $5\n        resistanceValue,                 // $6\n        resistanceStatus,                // $7\n        groundResistanceValue,           // $8\n        groundResistanceStatus,          // $9\n        shellGroundResistanceValue,      // $10\n        shellGroundResistanceStatus,     // $11\n        acwTest,                         // $12\n        acwStatus,                       // $13\n        reportStatus,                    // $14\n        IR_insulationResistanceTest,     // $15\n        IR_insulationResistanceStatus,   // $16\n        GB_groundBondTest,               // $17\n        GB_groundBondStatus              // $18\n    ];\n\n} catch (err) {\n    node.error(\"Feil ved behandling av payload: \" + err.message, msg);\n    return null;\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 420,
        "wires": [
            [
                "fec4ed5c5984fdc6"
            ]
        ]
    },
    {
        "id": "72dc149ee0318259",
        "type": "link out",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "ellementer med feil ",
        "mode": "link",
        "links": [
            "241b0e14fe20cd39"
        ],
        "x": 715,
        "y": 660,
        "wires": []
    },
    {
        "id": "953e3325dac5ca66",
        "type": "link out",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "godkjente ellementer",
        "mode": "link",
        "links": [
            "19248df3dc21f2a3"
        ],
        "x": 1245,
        "y": 380,
        "wires": []
    },
    {
        "id": "3b6b7941ad9adf6f",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Feil!!!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 600,
        "wires": [
            [
                "72dc149ee0318259",
                "47c27b1926288bf1"
            ]
        ]
    },
    {
        "id": "808ddf004871a525",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "Godkjent Test",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Godkjent",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 340,
        "wires": [
            [
                "953e3325dac5ca66",
                "e5108c4ed0e7cbfc"
            ]
        ]
    },
    {
        "id": "0c40558caedffebc",
        "type": "link in",
        "z": "c2169ec33aade897",
        "g": "1bb75c4064d72f44",
        "name": "Element nr",
        "links": [
            "49bfaa6cb8e5805b"
        ],
        "x": 975,
        "y": 1340,
        "wires": [
            [
                "7f7ab83123fac51a"
            ]
        ]
    },
    {
        "id": "7f7ab83123fac51a",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "1bb75c4064d72f44",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Artikkel_nr",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "4f0145bbbf55f5b5",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "serienr",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 480,
        "wires": [
            [
                "3ea8cb435bc802c9",
                "7c05fe5dab08155f"
            ]
        ]
    },
    {
        "id": "f3fc465133c75528",
        "type": "link out",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "ingen serienummer",
        "mode": "link",
        "links": [
            "66908cedb41ce161"
        ],
        "x": 1205,
        "y": 180,
        "wires": []
    },
    {
        "id": "a1340b2a8c1c809e",
        "type": "comment",
        "z": "c2169ec33aade897",
        "g": "9ec45f809e6da242",
        "name": "Test godkjent eller feil",
        "info": "",
        "x": 1120,
        "y": 1080,
        "wires": []
    },
    {
        "id": "1030f34f550bcb1a",
        "type": "link in",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "Lag raport",
        "links": [
            "2b6f5e24222922d2"
        ],
        "x": 305,
        "y": 280,
        "wires": [
            [
                "e10c27298689690a"
            ]
        ]
    },
    {
        "id": "b07dbdecb0ac4436",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Serienummer blir ikke forespurt",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 180,
        "wires": [
            [
                "f3fc465133c75528"
            ]
        ]
    },
    {
        "id": "70ad3dccc073a9d3",
        "type": "link out",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "Raport for grønn dummy",
        "mode": "link",
        "links": [
            "9dbaf55ac692e0bc"
        ],
        "x": 1205,
        "y": 220,
        "wires": []
    },
    {
        "id": "65aba761444a8649",
        "type": "link out",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "Raport for rød dummy",
        "mode": "link",
        "links": [
            "bd408db924a728f5"
        ],
        "x": 1205,
        "y": 140,
        "wires": []
    },
    {
        "id": "47c27b1926288bf1",
        "type": "mqtt out",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "",
        "topic": "Feil på artikkel spørr etter nummer",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f5787c290a8dd28e",
        "x": 840,
        "y": 600,
        "wires": []
    },
    {
        "id": "58619685797f4e53",
        "type": "link in",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "Dummy ferdig",
        "links": [
            "797bb9fd90062c9b",
            "c405860dd0a52fb4"
        ],
        "x": 985,
        "y": 400,
        "wires": [
            [
                "47cc574f421ca93f"
            ]
        ]
    },
    {
        "id": "8242e0d376f9e854",
        "type": "link in",
        "z": "c2169ec33aade897",
        "g": "a5d86e82215c8574",
        "name": "IR",
        "links": [
            "c5eb9b581508078d",
            "28ed7e8961586535"
        ],
        "x": 255,
        "y": 1700,
        "wires": [
            [
                "4b0b98a977489cfe"
            ]
        ]
    },
    {
        "id": "0fa21ae69cb7998b",
        "type": "link in",
        "z": "c2169ec33aade897",
        "g": "a5d86e82215c8574",
        "name": "Status IR",
        "links": [],
        "x": 255,
        "y": 1660,
        "wires": [
            [
                "6961b73bf8d4752b"
            ]
        ]
    },
    {
        "id": "6961b73bf8d4752b",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "a5d86e82215c8574",
        "name": "RI feil/ok",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "OK",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Fail",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "IR_feil/ok",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1660,
        "wires": [
            [
                "43b6502c86079063"
            ]
        ]
    },
    {
        "id": "4b0b98a977489cfe",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "a5d86e82215c8574",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "IR_test",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1700,
        "wires": [
            [
                "43b6502c86079063"
            ]
        ]
    },
    {
        "id": "43b6502c86079063",
        "type": "join",
        "z": "c2169ec33aade897",
        "g": "a5d86e82215c8574",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 580,
        "y": 1680,
        "wires": [
            [
                "79846bc8476dcd33"
            ]
        ]
    },
    {
        "id": "79846bc8476dcd33",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "a5d86e82215c8574",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "IR",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "719235fcee402e5b",
        "type": "link in",
        "z": "c2169ec33aade897",
        "g": "04a220e6929ff783",
        "name": "GB",
        "links": [
            "195bdd0dbfe7298e"
        ],
        "x": 255,
        "y": 1840,
        "wires": [
            [
                "a04c16138f2076f3"
            ]
        ]
    },
    {
        "id": "f1e2a3bdd0c1e7e2",
        "type": "link in",
        "z": "c2169ec33aade897",
        "g": "04a220e6929ff783",
        "name": "Status GB",
        "links": [
            "1033270452506701",
            "6e45a22526ac89ff"
        ],
        "x": 255,
        "y": 1800,
        "wires": [
            [
                "78e92e63a8d997e7"
            ]
        ]
    },
    {
        "id": "78e92e63a8d997e7",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "04a220e6929ff783",
        "name": "GB feil/ok",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "bool",
                "to": "OK",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "bool",
                "to": "Fail",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "GB_feil/ok",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1800,
        "wires": [
            [
                "d2f9b25118093f3d"
            ]
        ]
    },
    {
        "id": "a04c16138f2076f3",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "04a220e6929ff783",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "GB_test",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1840,
        "wires": [
            [
                "d2f9b25118093f3d"
            ]
        ]
    },
    {
        "id": "d2f9b25118093f3d",
        "type": "join",
        "z": "c2169ec33aade897",
        "g": "04a220e6929ff783",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": true,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 580,
        "y": 1820,
        "wires": [
            [
                "d8525e58c8c663aa"
            ]
        ]
    },
    {
        "id": "d8525e58c8c663aa",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "04a220e6929ff783",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "GB",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "e10c27298689690a",
        "type": "function",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "Hent resultater",
        "func": "if (msg.payload === \"Ferdig\") {\n    // Hent globale verdier\n    var artikkelnr = global.get(\"artikkelnr\");\n    var elementnr = global.get(\"elementnr\");\n\n    var dummy = global.get(\"dummy\");\n    var input_voltage = global.get(\"input_voltage\");\n    var wattValue = global.get(\"wattValue\");  // Hent wattValue fra global context\n    var motstand_status_obj = global.get(\"motstand_status\") || {};\n    var motstand_status = motstand_status_obj.status || \"fail\";\n    // Hent den målte motstandsverdien\n    var measured_resistance = motstand_status_obj.malt_motstand || null;\n    var measured_resistance_formatted = motstand_status_obj.malt_motstand_formatted || null;\n    \n    var status_FaseGND = global.get(\"status_Fase/GND\");\n    var measuredResistanceFaseGND = global.get(\"measuredResistanceFaseGND\");\n    var status_SkallGND = global.get(\"status_Skall/GND\");\n    var measuredResistanceSkallGND = global.get(\"measuredResistance_SkallGND\");\n    var ir_test_status = global.get(\"ir_test_status\");\n    var ir_test_full = global.get(\"ir_test_full\");\n    var gb_test_status = global.get(\"gb_test_status\");\n    var gb_test_full = global.get(\"gb_test_full\");\n    var acw_test_status = global.get(\"acw_test_status\");\n    var acw_test_full = global.get(\"acw_test_full\");\n    var testResult = global.get(\"testResult\");\n    \n    // Bygg et objekt med alle verdiene som skal sendes\n    var outputPayload = {\n        artikkelnr: artikkelnr,\n        elementnr: elementnr,\n        dummy: dummy,\n        input_voltage: input_voltage,\n        wattValue: wattValue,              // Inkluderer wattValue\n        motstand_status: motstand_status,\n        measured_resistance: measured_resistance,\n        measured_resistance_formatted: measured_resistance_formatted,\n        status_FaseGND: status_FaseGND,\n        measuredResistanceFaseGND: measuredResistanceFaseGND,\n        status_SkallGND: status_SkallGND,\n        measuredResistanceSkallGND: measuredResistanceSkallGND,\n        ir_test_status: ir_test_status,\n        ir_test_full: ir_test_full,        \n        gb_test_status: gb_test_status,\n        gb_test_full: gb_test_full,\n        acw_test_status: acw_test_status,\n        acw_test_full: acw_test_full,\n        testResult: testResult        \n    };\n    \n    // Definer utgangene. Start med null for utganger som ikke skal sende noe.\n    let out1 = null, out2 = null, out3 = null, out4 = null;\n    \n    // Send til utgang 1 hvis dummy er \"Dummy: Rød\"\n    if (dummy === \"Dummy: Rød\") {\n         out1 = { payload: outputPayload };\n    }\n    // Send til utgang 2 hvis dummy er \"Dummy: Grønn\"\n    else if (dummy === \"Dummy: Grønn\") {\n         out2 = { payload: outputPayload };\n    }\n    // Hvis dummy er \"dummy\" eller \"Ingen\", avgjør hvilken utgang basert på testResult\n    else if ((dummy === \"dummy\" || dummy === \"Ingen\") && testResult === \"Godkjent\") {\n         out3 = { payload: outputPayload };\n    }\n    else if ((dummy === \"dummy\" || dummy === \"Ingen\") && testResult === \"Feil!!!\") {\n         out4 = { payload: outputPayload };\n    }\n    \n    return [out1, out2, out3, out4];\n}\nreturn null;\n",
        "outputs": 4,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 280,
        "wires": [
            [
                "1ed8c1b5f01ee476"
            ],
            [
                "904a7411a59c5ada"
            ],
            [
                "3abbd64a9f71ff65",
                "5c7a8434ef52033e"
            ],
            [
                "3b6b7941ad9adf6f"
            ]
        ],
        "outputLabels": [
            "Rød Dummy",
            "Grønn Dummy",
            "Godkjent",
            "Feil!!!"
        ]
    },
    {
        "id": "3abbd64a9f71ff65",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "raport",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 320,
        "wires": [
            [
                "7e8cd935e8f06662"
            ]
        ]
    },
    {
        "id": "7c05fe5dab08155f",
        "type": "join",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": true,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 970,
        "y": 440,
        "wires": [
            [
                "47cc574f421ca93f"
            ]
        ]
    },
    {
        "id": "9851e5b41aabac7b",
        "type": "mqtt in",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "",
        "topic": "NG_Nummer",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "f5787c290a8dd28e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1090,
        "y": 600,
        "wires": [
            [
                "5c765a5333bf6e35"
            ]
        ]
    },
    {
        "id": "5c765a5333bf6e35",
        "type": "change",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "NG_Nummer",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "7c118c6c685b69f7",
        "type": "ui_text",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "group": "18cc9cb264bf256a",
        "order": 52,
        "width": 14,
        "height": 2,
        "name": "",
        "label": "Tildelt serienr:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "Lucida Sans Typewriter,Lucida Console,Monaco,monospace",
        "fontSize": "27",
        "color": "#000000",
        "x": 1560,
        "y": 520,
        "wires": []
    },
    {
        "id": "fec4ed5c5984fdc6",
        "type": "postgresql",
        "z": "c2169ec33aade897",
        "g": "1fc186dc8ccdef86",
        "name": "Insert Data",
        "query": "INSERT INTO public.test_results (article_number, serial_number, watt_minimum, watt_maximum, watt_value, resistance_value, resistance_status, ground_resistance_value, ground_resistance_status, shell_ground_resistance_value, shell_ground_resistance_status, acw_test, acw_status, report_status, ir_insulation_resistance_test, ir_insulation_resistance_status, gb_ground_bond_test, gb_ground_bond_status)\n    VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18);",
        "postgreSQLConfig": "43d2e060401a8638",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1390,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "8f97b077a10fc3fb",
        "type": "change",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "reset",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Resett",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 380,
        "wires": [
            [
                "619a8aaabd249daf"
            ]
        ]
    },
    {
        "id": "236519827f9cd3ec",
        "type": "link out",
        "z": "fdae02c7df9f4393",
        "g": "c1088ae201a01869",
        "name": "IO1",
        "mode": "link",
        "links": [
            "4e9d36299f901eea"
        ],
        "x": 1645,
        "y": 780,
        "wires": []
    },
    {
        "id": "701745914e3be9ef",
        "type": "switch",
        "z": "fdae02c7df9f4393",
        "g": "c1088ae201a01869",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 780,
        "wires": [
            [
                "22076f40b4de30fc"
            ]
        ]
    },
    {
        "id": "b92911ccbf7004fd",
        "type": "comment",
        "z": "fdae02c7df9f4393",
        "g": "c1088ae201a01869",
        "name": "DI",
        "info": "",
        "x": 210,
        "y": 700,
        "wires": []
    },
    {
        "id": "9552379ff0320872",
        "type": "comment",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "name": "Luft sylinder ,lampe og resett av utganger",
        "info": "",
        "x": 1500,
        "y": 580,
        "wires": []
    },
    {
        "id": "fead085b427bd950",
        "type": "switch",
        "z": "fdae02c7df9f4393",
        "g": "c1088ae201a01869",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 730,
        "y": 700,
        "wires": [
            [
                "cb736ee59809468e",
                "0dc18f9e273f1a72",
                "31bd32b9fcfdca40",
                "0d8a79c382a737af"
            ]
        ]
    },
    {
        "id": "3211f67eb0d22769",
        "type": "link out",
        "z": "fdae02c7df9f4393",
        "g": "c1088ae201a01869",
        "name": "DI2",
        "mode": "link",
        "links": [
            "07f6e65bee5f48cd",
            "0a92304b39aacdd4",
            "8e505cdda3ce52a7",
            "b434a8644c2ca06e",
            "e4e6b130a939260d",
            "608e461650376ae6"
        ],
        "x": 1185,
        "y": 700,
        "wires": []
    },
    {
        "id": "cfdfde613ef9c357",
        "type": "link in",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "name": "Luftsylynder på",
        "links": [
            "1bcc9a895aeb7b9e"
        ],
        "x": 175,
        "y": 600,
        "wires": [
            [
                "6d1142daef0c3881"
            ]
        ]
    },
    {
        "id": "6d1142daef0c3881",
        "type": "change",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 600,
        "wires": [
            [
                "934338213adb5c7c"
            ]
        ]
    },
    {
        "id": "2d2881b5ae4df7c3",
        "type": "link in",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "name": "Luftsylinder av",
        "links": [
            "7be08c28fbc12459"
        ],
        "x": 175,
        "y": 320,
        "wires": [
            [
                "4e69b73ff7a3fae1"
            ]
        ]
    },
    {
        "id": "86a7f7371730dea3",
        "type": "change",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "luftsylinder",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 260,
        "wires": [
            [
                "4bb9562d2d9e94df"
            ]
        ]
    },
    {
        "id": "1b2777fd4acdf1d5",
        "type": "link out",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "name": "link out 13",
        "mode": "link",
        "links": [
            "989c8683ce02ad31"
        ],
        "x": 1645,
        "y": 300,
        "wires": []
    },
    {
        "id": "dc2d2543e6dc326d",
        "type": "rbe",
        "z": "fdae02c7df9f4393",
        "g": "c1088ae201a01869",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 530,
        "y": 780,
        "wires": [
            [
                "701745914e3be9ef"
            ]
        ]
    },
    {
        "id": "cb736ee59809468e",
        "type": "change",
        "z": "fdae02c7df9f4393",
        "g": "c1088ae201a01869",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 700,
        "wires": [
            [
                "3211f67eb0d22769"
            ]
        ]
    },
    {
        "id": "81366cdd468be91a",
        "type": "link out",
        "z": "fdae02c7df9f4393",
        "g": "c1088ae201a01869",
        "name": "link out 14",
        "mode": "link",
        "links": [
            "7d33b95be9f81b50",
            "cdcbc545b413d121"
        ],
        "x": 1185,
        "y": 740,
        "wires": []
    },
    {
        "id": "0dc18f9e273f1a72",
        "type": "change",
        "z": "fdae02c7df9f4393",
        "g": "c1088ae201a01869",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Ferdig",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 740,
        "wires": [
            [
                "81366cdd468be91a"
            ]
        ]
    },
    {
        "id": "ddd33d925f60b76c",
        "type": "link in",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "name": "Gravering ferdig",
        "links": [
            "329fe491ca0430f4"
        ],
        "x": 175,
        "y": 260,
        "wires": [
            [
                "b2a757104258736c"
            ]
        ]
    },
    {
        "id": "66908cedb41ce161",
        "type": "link in",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "name": "Ingen serie nr",
        "links": [
            "f3fc465133c75528"
        ],
        "x": 175,
        "y": 200,
        "wires": [
            [
                "b2a757104258736c"
            ]
        ]
    },
    {
        "id": "0f81745673c2f368",
        "type": "change",
        "z": "fdae02c7df9f4393",
        "g": "c1088ae201a01869",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Manuel stopp",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 700,
        "wires": [
            [
                "fead085b427bd950"
            ]
        ]
    },
    {
        "id": "31bd32b9fcfdca40",
        "type": "rbe",
        "z": "fdae02c7df9f4393",
        "g": "c1088ae201a01869",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 730,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "6954907f6bb0169a",
        "type": "change",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Status for serienummer gravering",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 260,
        "wires": [
            [
                "1a6ddda7f58a4de2"
            ]
        ]
    },
    {
        "id": "059a302d1d3663d5",
        "type": "change",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 340,
        "wires": [
            [
                "864a68697b6b6664"
            ]
        ]
    },
    {
        "id": "878b988f27e9c840",
        "type": "delay",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 750,
        "y": 220,
        "wires": [
            [
                "0d8a79c382a737af"
            ]
        ]
    },
    {
        "id": "4e69b73ff7a3fae1",
        "type": "switch",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Godkjent",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Feil!!!",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 670,
        "y": 320,
        "wires": [
            [
                "b43ca98921888528"
            ],
            [
                "059a302d1d3663d5",
                "0d8a79c382a737af"
            ]
        ]
    },
    {
        "id": "b43ca98921888528",
        "type": "change",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 300,
        "wires": [
            [
                "864a68697b6b6664"
            ]
        ]
    },
    {
        "id": "1a6ddda7f58a4de2",
        "type": "switch",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Serienummer blir ikke forespurt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Gravering er utført, Kontroller Gravering etter att ellement er fjernet i fra fiksturen.",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 260,
        "wires": [
            [
                "878b988f27e9c840"
            ],
            [
                "8b9db1977eb2d941"
            ]
        ]
    },
    {
        "id": "8b9db1977eb2d941",
        "type": "delay",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 260,
        "wires": [
            [
                "0d8a79c382a737af"
            ]
        ]
    },
    {
        "id": "22076f40b4de30fc",
        "type": "change",
        "z": "fdae02c7df9f4393",
        "g": "c1088ae201a01869",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "NormalTest",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 780,
        "wires": [
            [
                "18f256cc95d3391c"
            ]
        ]
    },
    {
        "id": "ac480a5da179f6fd",
        "type": "inject",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 690,
        "y": 180,
        "wires": [
            [
                "0d8a79c382a737af"
            ]
        ]
    },
    {
        "id": "18f256cc95d3391c",
        "type": "function",
        "z": "fdae02c7df9f4393",
        "g": "c1088ae201a01869",
        "name": "function 30",
        "func": "let contextState = context.get(\"state\") || { lastFalseTime: 0 };\nconst currentTime = Date.now();\n\nif (msg.topic === \"luftsylinder\" && msg.payload === false) {\n    // Oppdater tidspunkt for siste 'false' fra luftsylinder\n    contextState.lastFalseTime = currentTime;\n    context.set(\"state\", contextState);\n    return null; // Ingenting sendes videre\n}\n\nif (msg.topic === \"NormalTest\" && msg.payload === true) {\n    // Sett dummy til \"Ingen\"\n    global.set(\"dummy\", \"Ingen\");\n    // Sjekk om det har gått mer enn 4 sekunder siden siste 'false' fra luftsylinder\n    if (currentTime - contextState.lastFalseTime > 4000) {\n        return msg; // Send 'NormalTest' videre\n    } else {\n        return null; // Ignorer 'NormalTest'\n    }\n}\n\n// Hvis ingen relevante meldinger, ignorer\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 780,
        "wires": [
            [
                "236519827f9cd3ec"
            ]
        ]
    },
    {
        "id": "eb6b344d62804eab",
        "type": "link in",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "name": "link in 18",
        "links": [],
        "x": 885,
        "y": 180,
        "wires": [
            [
                "0d8a79c382a737af"
            ]
        ]
    },
    {
        "id": "77969939f368b32b",
        "type": "link in",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "name": "Resett inn",
        "links": [
            "6230aa4c6c4804b8"
        ],
        "x": 175,
        "y": 380,
        "wires": [
            [
                "8f97b077a10fc3fb"
            ]
        ]
    },
    {
        "id": "97c76806a02a2b7d",
        "type": "inject",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1090,
        "y": 180,
        "wires": [
            [
                "7a3a6d8ac38608df"
            ]
        ]
    },
    {
        "id": "61ac966547b0fb5a",
        "type": "digital output",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "module": "2",
        "channel": "6",
        "name": "Lampe",
        "x": 1350,
        "y": 320,
        "wires": [
            [
                "1b2777fd4acdf1d5"
            ]
        ]
    },
    {
        "id": "7a3a6d8ac38608df",
        "type": "digital output",
        "z": "fdae02c7df9f4393",
        "g": "bf2049db3d6f34c0",
        "module": "2",
        "channel": "5",
        "name": "Luftsylynder ",
        "x": 1370,
        "y": 260,
        "wires": [
            [
                "1b2777fd4acdf1d5"
            ]
        ]
    },
    {
        "id": "da15d4d7176e64dd",
        "type": "kbus in",
        "z": "fdae02c7df9f4393",
        "g": "c1088ae201a01869",
        "name": "",
        "topic": "PFC200",
        "qos": "0",
        "broker": "b97f5f6fd05a187a",
        "ignoreempty": true,
        "removemqttconfig": false,
        "x": 220,
        "y": 780,
        "wires": [
            [],
            [
                "9e5035603a28f389",
                "7d1df9239c8581cb"
            ]
        ]
    },
    {
        "id": "9e5035603a28f389",
        "type": "digital input",
        "z": "fdae02c7df9f4393",
        "g": "c1088ae201a01869",
        "module": "1",
        "channel": "1",
        "name": "Start",
        "x": 390,
        "y": 780,
        "wires": [
            [
                "dc2d2543e6dc326d"
            ]
        ]
    },
    {
        "id": "7d1df9239c8581cb",
        "type": "digital input",
        "z": "fdae02c7df9f4393",
        "g": "c1088ae201a01869",
        "module": "1",
        "channel": "2",
        "name": "Stopp",
        "x": 410,
        "y": 700,
        "wires": [
            [
                "0f81745673c2f368"
            ]
        ]
    },
    {
        "id": "f240e18016756b3f",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "g": "ddf0d19c856784eb",
        "name": "Prepare *IDN?",
        "func": "msg.payload = '*IDN?\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2620,
        "y": 1060,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "9a740ba699b632e9",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "g": "ddf0d19c856784eb",
        "name": "Sjekk modell",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 1730,
        "y": 1060,
        "wires": [
            [
                "f240e18016756b3f"
            ]
        ]
    },
    {
        "id": "3e975b8f59402bbf",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "g": "ddf0d19c856784eb",
        "name": "Prepare Clear",
        "func": "msg.payload = '*CLS\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2200,
        "y": 840,
        "wires": [
            [
                "24a3d0a66d47c23d"
            ]
        ]
    },
    {
        "id": "c1a8864265e9b6c7",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "96b4770317fe1de2",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Prepare TESTok:RETurn?",
        "func": "msg.payload = 'TESTok:RETurn?\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "76b950d8c9223044",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 2000,
        "wires": [
            [
                "96b4770317fe1de2"
            ]
        ]
    },
    {
        "id": "dc84de09839d2fbd",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "g": "a80a0b19ba428a19",
        "name": "Gjør måling",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 960,
        "wires": [
            [
                "02f5a57889cde84d"
            ]
        ]
    },
    {
        "id": "02f5a57889cde84d",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "g": "a80a0b19ba428a19",
        "name": "Prepare *MEAS1?",
        "func": "msg.payload = 'MEAS1?\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 960,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "c338df2b87a9b9ee",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Prepare FUNCtion:TEST?",
        "func": "msg.payload = 'FUNCtion:TEST?\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1940,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "1f66d19ae09df376",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1940,
        "wires": [
            [
                "c338df2b87a9b9ee"
            ]
        ]
    },
    {
        "id": "709148f2dd24ec40",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Prepare FUNC:TEST ON",
        "func": "msg.payload = 'FUNC:TEST ON\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1880,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "a1ac550c4e2677db",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1880,
        "wires": [
            [
                "709148f2dd24ec40"
            ]
        ]
    },
    {
        "id": "0a3ad2fced178e32",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "g": "ddf0d19c856784eb",
        "name": "Prepare *RST",
        "func": "msg.payload = '*RST\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2160,
        "y": 900,
        "wires": [
            [
                "b5ef13660d06a0c8"
            ]
        ]
    },
    {
        "id": "a7b75fbfa4a656e7",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "g": "ddf0d19c856784eb",
        "name": "resetting the instrument",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1780,
        "y": 900,
        "wires": [
            [
                "0a3ad2fced178e32"
            ]
        ]
    },
    {
        "id": "383c10697564a5dd",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Prepare *ESE",
        "func": "msg.payload = '*ESE\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1040,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "4f551c213a8e6623",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "Enable standard event",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 160,
        "y": 1040,
        "wires": [
            [
                "383c10697564a5dd"
            ]
        ]
    },
    {
        "id": "11be98b05c4cfdf0",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Prepare *ESE?",
        "func": "msg.payload = '*ESE?\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1100,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "3e3bdea97e838f40",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "Query if event is enabled and standard",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 210,
        "y": 1100,
        "wires": [
            [
                "11be98b05c4cfdf0"
            ]
        ]
    },
    {
        "id": "cea2ff56bd9ca36f",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Prepare *ESR?",
        "func": "msg.payload = '*ESR?\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1160,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "5443a10d5db0c9ef",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "Query standard event status register",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 200,
        "y": 1160,
        "wires": [
            [
                "cea2ff56bd9ca36f"
            ]
        ]
    },
    {
        "id": "47686972c8f8daed",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Prepare *OPC",
        "func": "msg.payload = '*OPC\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1220,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "04ceb6b44f69c0cd",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "Operation complete",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 150,
        "y": 1220,
        "wires": [
            [
                "47686972c8f8daed"
            ]
        ]
    },
    {
        "id": "182f1fa4a67d249f",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Prepare *OPC?",
        "func": "msg.payload = '*OPC?\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1280,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "9a66756a2b2cc3ec",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "Query if operation is complete",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 180,
        "y": 1280,
        "wires": [
            [
                "182f1fa4a67d249f"
            ]
        ]
    },
    {
        "id": "2556d7f94732bc0c",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Prepare *SRE",
        "func": "msg.payload = '*SRE?\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1340,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "6040794713f183c5",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "Enable service request",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 160,
        "y": 1340,
        "wires": [
            [
                "2556d7f94732bc0c"
            ]
        ]
    },
    {
        "id": "8c917d9cd21e5acd",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Prepare *STB?",
        "func": "msg.payload = '*STB?\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1400,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "33e6504e29a07b98",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "Query id service request is enabled",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 200,
        "y": 1400,
        "wires": [
            [
                "8c917d9cd21e5acd"
            ]
        ]
    },
    {
        "id": "4c00544777776d1c",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Prepare *TST?",
        "func": "msg.payload = '*TST?';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1460,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "3c8b129e5220e9aa",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "Query instrument self test",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 170,
        "y": 1460,
        "wires": [
            [
                "4c00544777776d1c"
            ]
        ]
    },
    {
        "id": "fc754c2f35792d4a",
        "type": "link out",
        "z": "1c24c4425f929f2e",
        "name": "link out til isulasjonstester",
        "mode": "link",
        "links": [
            "f3113fc0ca0a4a67"
        ],
        "x": 1445,
        "y": 580,
        "wires": []
    },
    {
        "id": "ad2a14ec232bbf89",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Prepare SWEEP:DATA:STATus? ",
        "func": "msg.payload = 'SWEEP:DATA:STATus?\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1520,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "821414d5a378e39a",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "SWEEP",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1520,
        "wires": [
            [
                "ad2a14ec232bbf89"
            ]
        ]
    },
    {
        "id": "3cf17b02182e51df",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "g": "03e38477b306950b",
        "name": "Prepare MAIN:FUNCtion ? ",
        "func": "msg.payload = 'MAIN:FUNCtion ?\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 2300,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "a77d2cf0a53c8b1b",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "g": "03e38477b306950b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 2300,
        "wires": [
            [
                "3cf17b02182e51df"
            ]
        ]
    },
    {
        "id": "8df5f74930160c78",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Prepare MANU:EDIT:MODE?",
        "func": "msg.payload = 'MANU:EDIT:MODE?\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1580,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "45d54e42caf5c7c8",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1580,
        "wires": [
            [
                "8df5f74930160c78"
            ]
        ]
    },
    {
        "id": "c815ea940e734e0b",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1640,
        "wires": [
            [
                "328be52fd351e45b"
            ]
        ]
    },
    {
        "id": "328be52fd351e45b",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Prepare SYSTem:ERRor ?",
        "func": "msg.payload = 'SYSTem:ERRor ?\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1640,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "6f3b7f5e873af46e",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "g": "03e38477b306950b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 2180,
        "wires": [
            [
                "87bb43913c2d41d4"
            ]
        ]
    },
    {
        "id": "87bb43913c2d41d4",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "g": "03e38477b306950b",
        "name": "Prepare MAIN:FUNC AUTO",
        "func": "msg.payload = 'MAIN:FUNC AUTO\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 2180,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "7e02a1419764d403",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "g": "03e38477b306950b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 2240,
        "wires": [
            [
                "4a5aa7d0b67d7cae"
            ]
        ]
    },
    {
        "id": "4a5aa7d0b67d7cae",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "g": "03e38477b306950b",
        "name": "Prepare MAIN:FUNC MANU.",
        "func": "msg.payload = 'MAIN:FUNC MANU.\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 2240,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "44544fa160d26749",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1760,
        "wires": [
            [
                "c7d09bb65a083902"
            ]
        ]
    },
    {
        "id": "c7d09bb65a083902",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Prepare MEASure 1?",
        "func": "msg.payload = 'MEASure 1?\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1760,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "f54add6e3e600d24",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1700,
        "wires": [
            [
                "f37bd7bee02b258f"
            ]
        ]
    },
    {
        "id": "f37bd7bee02b258f",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Prepare AUTO:STEP?",
        "func": "msg.payload = 'AUTO:STEP?\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1700,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "b0fcd892e8aff86a",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1820,
        "wires": [
            [
                "90eb4d3711b6f230"
            ]
        ]
    },
    {
        "id": "90eb4d3711b6f230",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Prepare TESTok:RETurn?",
        "func": "msg.payload = 'TESTok:RETurn?\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1820,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "c3c90fc8d0ad5a1f",
        "type": "link in",
        "z": "1c24c4425f929f2e",
        "g": "a80a0b19ba428a19",
        "name": "Gjør måling 4W 1",
        "links": [],
        "x": 215,
        "y": 800,
        "wires": [
            [
                "9c4ef3643ce4a528"
            ]
        ]
    },
    {
        "id": "9c4ef3643ce4a528",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "g": "a80a0b19ba428a19",
        "name": "Prepare FETCh?",
        "func": "msg.payload = 'READ? \\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 800,
        "wires": [
            [
                "751acec3b029e26e"
            ]
        ]
    },
    {
        "id": "b5ef13660d06a0c8",
        "type": "link out",
        "z": "1c24c4425f929f2e",
        "g": "ddf0d19c856784eb",
        "name": "Reset PFC200",
        "mode": "link",
        "links": [
            "f76b6ff9166da2c3"
        ],
        "x": 2775,
        "y": 900,
        "wires": []
    },
    {
        "id": "57edb6fe16471e9a",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "g": "a80a0b19ba428a19",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 840,
        "wires": [
            [
                "9c4ef3643ce4a528"
            ]
        ]
    },
    {
        "id": "751acec3b029e26e",
        "type": "link out",
        "z": "1c24c4425f929f2e",
        "g": "a80a0b19ba428a19",
        "name": "Måling 1",
        "mode": "link",
        "links": [],
        "x": 685,
        "y": 800,
        "wires": []
    },
    {
        "id": "54f5942823b8cee5",
        "type": "link in",
        "z": "1c24c4425f929f2e",
        "g": "ddf0d19c856784eb",
        "name": "Resett",
        "links": [
            "7b896316bd89a7eb"
        ],
        "x": 1835,
        "y": 960,
        "wires": [
            [
                "0a3ad2fced178e32"
            ]
        ]
    },
    {
        "id": "24a3d0a66d47c23d",
        "type": "link out",
        "z": "1c24c4425f929f2e",
        "g": "ddf0d19c856784eb",
        "name": "link out til isulasjonstester",
        "mode": "link",
        "links": [
            "998672e064af0926",
            "f3113fc0ca0a4a67"
        ],
        "x": 2445,
        "y": 800,
        "wires": []
    },
    {
        "id": "6ae7f474f3538b3c",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "g": "ddf0d19c856784eb",
        "name": "Prepare CONF:FRES",
        "func": "msg.payload = 'CONF:FRES AUTO\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2400,
        "y": 940,
        "wires": [
            [
                "b5ef13660d06a0c8"
            ]
        ]
    },
    {
        "id": "d66f7287c15a95eb",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Prepare FUNCtion:TEST",
        "func": "msg.payload = \"FUNCtion:TEST ON\\n\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 580,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "a6b92b866b916487",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Prepare FUNCtion:TEST?",
        "func": "msg.payload = \"FUNCtion:TEST?\\n\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 660,
        "wires": [
            [
                "fc754c2f35792d4a"
            ]
        ]
    },
    {
        "id": "39f0f94524aa977e",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 580,
        "wires": [
            [
                "d66f7287c15a95eb"
            ]
        ]
    },
    {
        "id": "5a0cc204ceadad17",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "g": "ddf0d19c856784eb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1920,
        "y": 840,
        "wires": [
            [
                "3e975b8f59402bbf"
            ]
        ]
    },
    {
        "id": "9333403e166abb72",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "g": "ddf0d19c856784eb",
        "name": "Prepare RMTOFF",
        "func": "msg.payload = \"*RMTOFF\\n\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2210,
        "y": 780,
        "wires": [
            [
                "24a3d0a66d47c23d"
            ]
        ]
    },
    {
        "id": "c0419979d6043ae6",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "g": "ddf0d19c856784eb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1920,
        "y": 780,
        "wires": [
            [
                "9333403e166abb72"
            ]
        ]
    },
    {
        "id": "dea1d67568f4dc71",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "g": "ddf0d19c856784eb",
        "name": "Prepare INIT",
        "func": "msg.payload += 'INIT\\n';\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2430,
        "y": 980,
        "wires": [
            [
                "b5ef13660d06a0c8"
            ]
        ]
    },
    {
        "id": "1dac8294f8c6d47a",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "g": "ddf0d19c856784eb",
        "name": "Prepare TEST OFF",
        "func": "msg.payload = \"FUNC:TEST OFF\\n\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2210,
        "y": 700,
        "wires": [
            [
                "24a3d0a66d47c23d"
            ]
        ]
    },
    {
        "id": "c704453922cb3cf0",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "g": "ddf0d19c856784eb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1920,
        "y": 700,
        "wires": [
            [
                "1dac8294f8c6d47a"
            ]
        ]
    },
    {
        "id": "fef2471d64c19dbe",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Sende spørring for modus",
        "func": "msg.payload = \"MANU:EDIT:MODE?\\n\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1970,
        "y": 100,
        "wires": [
            [
                "bcd64c006d8b79ce"
            ]
        ]
    },
    {
        "id": "86efaf351d091bb7",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1480,
        "y": 320,
        "wires": [
            [
                "3c432dda3d51d05d"
            ]
        ]
    },
    {
        "id": "3c432dda3d51d05d",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Sende spørring error",
        "func": "msg.payload = \"SYST:ERR ?\\n\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 320,
        "wires": [
            [
                "bcd64c006d8b79ce"
            ]
        ]
    },
    {
        "id": "bcd64c006d8b79ce",
        "type": "trigger",
        "z": "1c24c4425f929f2e",
        "name": "",
        "op1": "",
        "op2": "1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1700,
        "y": 400,
        "wires": [
            [
                "0554b3caf2c0d18a"
            ]
        ]
    },
    {
        "id": "955bcf8cd7582371",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1480,
        "y": 100,
        "wires": [
            [
                "fef2471d64c19dbe"
            ]
        ]
    },
    {
        "id": "1af3eb37cf32d760",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Sende spørring FAILmode",
        "func": "msg.payload = \"MANU:UTILity:FAILmode?\\n\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1990,
        "y": 220,
        "wires": [
            [
                "bcd64c006d8b79ce"
            ]
        ]
    },
    {
        "id": "97c33cd9ad150800",
        "type": "inject",
        "z": "1c24c4425f929f2e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1480,
        "y": 240,
        "wires": [
            [
                "1af3eb37cf32d760"
            ]
        ]
    },
    {
        "id": "0554b3caf2c0d18a",
        "type": "function",
        "z": "1c24c4425f929f2e",
        "name": "Sende spørring for resultat",
        "func": "msg.payload = \"MEAS?\\n\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 400,
        "wires": [
            [
                "24a3d0a66d47c23d"
            ]
        ]
    },
    {
        "id": "7f474951f3763d66",
        "type": "link in",
        "z": "4151ae3474ffa6ae",
        "name": "link in 9",
        "links": [
            "3ea8cb435bc802c9"
        ],
        "x": 125,
        "y": 200,
        "wires": [
            [
                "9f1873f0c605620b",
                "2e55781524303d0c"
            ]
        ]
    },
    {
        "id": "9f1873f0c605620b",
        "type": "function",
        "z": "4151ae3474ffa6ae",
        "name": "Format Command with Serial Number",
        "func": "let serialNumber = msg.payload;\n\n// Del opp serienummeret i to deler\nlet yearDay = serialNumber.slice(0, 5);   // YYDDD\nlet runningNumber = serialNumber.slice(5); // NNNNNN\n\n// Lag to separate meldinger for de to linjene\nlet msg1 = { payload: `WX,JOB=0000,BLK=0,CharacterString=${yearDay}\\r` }; // Øverste linje\nlet msg2 = { payload: `WX,JOB=0000,BLK=1,CharacterString=${runningNumber}\\r` }; // Nederste linje\n\n// Returner de to meldingene i en liste for å sende til hver sin utgang\nreturn [msg1, msg2];\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 200,
        "wires": [
            [
                "d964250d1617085a"
            ],
            [
                "fa8d0913801c6672"
            ]
        ]
    },
    {
        "id": "36d152bd5e03f3dd",
        "type": "tcp request",
        "z": "4151ae3474ffa6ae",
        "name": "",
        "server": "192.168.1.20",
        "port": "50002",
        "out": "time",
        "ret": "string",
        "splitc": "500",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 990,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "b240a645969c8e60",
        "type": "inject",
        "z": "4151ae3474ffa6ae",
        "name": "Sjekk laser",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 280,
        "wires": [
            [
                "b418b3fdfaddfaa6"
            ]
        ]
    },
    {
        "id": "b418b3fdfaddfaa6",
        "type": "function",
        "z": "4151ae3474ffa6ae",
        "name": "sjekk laser klar ",
        "func": "msg.payload = \"RX,Ready\\r\"; \nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 280,
        "wires": [
            [
                "4cecbd2c3b5a4bea"
            ]
        ]
    },
    {
        "id": "d493657d2e258340",
        "type": "function",
        "z": "4151ae3474ffa6ae",
        "name": "Test",
        "func": "msg.payload = \"NNWNNNNN\\r\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 340,
        "wires": [
            [
                "4cecbd2c3b5a4bea"
            ]
        ]
    },
    {
        "id": "aff385fcef773059",
        "type": "inject",
        "z": "4151ae3474ffa6ae",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 340,
        "wires": [
            [
                "d493657d2e258340"
            ]
        ]
    },
    {
        "id": "19bd75e23a5bd028",
        "type": "function",
        "z": "4151ae3474ffa6ae",
        "name": "Start gravering",
        "func": "// Funksjon for å sjekke om responsen er \"WX,OK\"\nif (msg.payload.trim() === \"WX,OK\") {\n    // Hvis responsen er WX,OK, sett opp ny kommando for å trigge merkingen\n    msg.payload = \"WX,StartMarking\\r\";  // Juster denne kommandoen om nødvendig\n    return msg;  // Send videre til TCP Request-node for å trigge laser\n} else {\n    // Hvis responsen ikke er som forventet, ignorer eller logg feilen\n    node.warn(\"Uventet respons: \" + msg.payload);\n    return null;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 220,
        "wires": [
            [
                "571ec044c3bd5d91"
            ]
        ]
    },
    {
        "id": "e2e4bc196768d7a1",
        "type": "function",
        "z": "4151ae3474ffa6ae",
        "name": "Stopp marking command",
        "func": "msg.payload = \"WX,StopMarking\\r\";  // Stopp marking command\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 140,
        "wires": [
            [
                "36d152bd5e03f3dd"
            ]
        ]
    },
    {
        "id": "c692f4e970142cb8",
        "type": "inject",
        "z": "4151ae3474ffa6ae",
        "name": "Stopp",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 140,
        "wires": [
            [
                "e2e4bc196768d7a1"
            ]
        ]
    },
    {
        "id": "571ec044c3bd5d91",
        "type": "tcp request",
        "z": "4151ae3474ffa6ae",
        "name": "",
        "server": "192.168.1.20",
        "port": "50002",
        "out": "time",
        "ret": "string",
        "splitc": "500",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 1450,
        "y": 220,
        "wires": [
            [
                "174f756d034b9715"
            ]
        ]
    },
    {
        "id": "14d94e0b46f27c5f",
        "type": "function",
        "z": "4151ae3474ffa6ae",
        "name": "Sjekk status for graveringen",
        "func": "msg.payload = \"RX,Status\\r\";  // Sjekk status for graveringen\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 340,
        "wires": [
            [
                "483feaafb080daf5"
            ]
        ]
    },
    {
        "id": "483feaafb080daf5",
        "type": "tcp request",
        "z": "4151ae3474ffa6ae",
        "name": "",
        "server": "192.168.1.20",
        "port": "50002",
        "out": "time",
        "ret": "string",
        "splitc": "500",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 1370,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "d964250d1617085a",
        "type": "rbe",
        "z": "4151ae3474ffa6ae",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 590,
        "y": 180,
        "wires": [
            [
                "36d152bd5e03f3dd"
            ]
        ]
    },
    {
        "id": "fa8d0913801c6672",
        "type": "rbe",
        "z": "4151ae3474ffa6ae",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 590,
        "y": 220,
        "wires": [
            [
                "4a6ee9189134fc91"
            ]
        ]
    },
    {
        "id": "4a6ee9189134fc91",
        "type": "delay",
        "z": "4151ae3474ffa6ae",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 730,
        "y": 220,
        "wires": [
            [
                "4cecbd2c3b5a4bea"
            ]
        ]
    },
    {
        "id": "4cecbd2c3b5a4bea",
        "type": "tcp request",
        "z": "4151ae3474ffa6ae",
        "name": "",
        "server": "192.168.1.20",
        "port": "50002",
        "out": "time",
        "ret": "string",
        "splitc": "500",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 990,
        "y": 220,
        "wires": [
            [
                "19bd75e23a5bd028",
                "d0734895b6f06345"
            ]
        ]
    },
    {
        "id": "174f756d034b9715",
        "type": "function",
        "z": "4151ae3474ffa6ae",
        "name": "Gravering utført, Inspiser Gravering",
        "func": "// Hent meldingsinnhold fra payload\nvar input = msg.payload.trim(); // Fjerner eventuelle ekstra mellomrom og linjeskift\n\n// Sjekk om meldingen er \"WX,OK\"\nif (input === \"WX,OK\") {\n    // Sett en ny payload\n    msg.payload = \"Gravering er utført, Kontroller Gravering etter att ellement er fjernet i fra fiksturen.\";\n    return msg; // Send meldingen videre\n} else {\n    // Ikke send melding hvis input ikke matcher\n    return null;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 220,
        "wires": [
            [
                "329fe491ca0430f4"
            ]
        ]
    },
    {
        "id": "329fe491ca0430f4",
        "type": "link out",
        "z": "4151ae3474ffa6ae",
        "name": "Gravering utført, Inspiser Gravering",
        "mode": "link",
        "links": [
            "4679a3800a3f7aca",
            "ddd33d925f60b76c"
        ],
        "x": 2005,
        "y": 180,
        "wires": []
    },
    {
        "id": "d0734895b6f06345",
        "type": "function",
        "z": "4151ae3474ffa6ae",
        "name": "Gravering utføres",
        "func": "// Hent meldingsinnhold fra payload\nvar input = msg.payload.trim(); // Fjerner eventuelle ekstra mellomrom og linjeskift\n\n// Sjekk om meldingen er \"WX,OK\"\nif (input === \"WX,OK\") {\n    // Sett en ny payload\n    msg.payload = \"Serienummer sendt til laser gravering, Gravering utføres nå\";\n    return msg; // Send meldingen videre\n} else {\n    // Ikke send melding hvis input ikke matcher\n    return null;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 180,
        "wires": [
            [
                "329fe491ca0430f4"
            ]
        ]
    },
    {
        "id": "2e55781524303d0c",
        "type": "debug",
        "z": "4151ae3474ffa6ae",
        "name": "Serienr til laser",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 240,
        "wires": []
    }
]